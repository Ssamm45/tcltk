/**
 * D bindings to Tcl/Tk
 *
 * License:
 *     MIT. See LICENSE for full details.
 */
module tcltk.tkdecls;

import core.stdc.config;
import deimos.X11.Xlib;
import tcltk.tk;

/*
 * Exported function declarations:
 */
extern(C) void Tk_MainLoop() nothrow;
extern(C) XColor* Tk_3DBorderColor(Tk_3DBorder border) nothrow;
extern(C) GC Tk_3DBorderGC(Tk_Window tkwin, Tk_3DBorder border, int which) nothrow;
extern(C) void Tk_3DHorizontalBevel(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int leftIn, int rightIn, int topBevel, int relief) nothrow;
extern(C) void Tk_3DVerticalBevel(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int leftBevel, int relief) nothrow;
extern(C) void Tk_AddOption(Tk_Window tkwin, const(char)* name, const(char)* value, int priority) nothrow;
extern(C) void Tk_BindEvent(Tk_BindingTable bindingTable, XEvent* eventPtr, Tk_Window tkwin, int numObjects, ClientData* objectPtr) nothrow;
extern(C) void Tk_CanvasDrawableCoords(Tk_Canvas canvas, double x, double y, short* drawableXPtr, short* drawableYPtr) nothrow;
extern(C) void Tk_CanvasEventuallyRedraw(Tk_Canvas canvas, int x1, int y1, int x2, int y2) nothrow;
extern(C) int Tk_CanvasGetCoord(Tcl_Interp* interp, Tk_Canvas canvas, const(char)* str, double* doublePtr) nothrow;
extern(C) Tk_CanvasTextInfo* Tk_CanvasGetTextInfo(Tk_Canvas canvas) nothrow;
extern(C) int Tk_CanvasPsBitmap(Tcl_Interp* interp, Tk_Canvas canvas, Pixmap bitmap, int x, int y, int width, int height) nothrow;
extern(C) int Tk_CanvasPsColor(Tcl_Interp* interp, Tk_Canvas canvas, XColor* colorPtr) nothrow;
extern(C) int Tk_CanvasPsFont(Tcl_Interp* interp, Tk_Canvas canvas, Tk_Font font) nothrow;
extern(C) void Tk_CanvasPsPath(Tcl_Interp* interp, Tk_Canvas canvas, double* coordPtr, int numPoints) nothrow;
extern(C) int Tk_CanvasPsStipple(Tcl_Interp* interp, Tk_Canvas canvas, Pixmap bitmap) nothrow;
extern(C) double Tk_CanvasPsY(Tk_Canvas canvas, double y) nothrow;
extern(C) void Tk_CanvasSetStippleOrigin(Tk_Canvas canvas, GC gc) nothrow;
extern(C) int Tk_CanvasTagsParseProc(ClientData clientData, Tcl_Interp* interp, Tk_Window tkwin, const(char)* value, void* widgRec, int offset) nothrow;
extern(C) void* Tk_CanvasTagsPrintProc(ClientData clientData, Tk_Window tkwin, void* widgRec, int offset, Tcl_FreeProc* freeProcPtr) nothrow;
extern(C) Tk_Window Tk_CanvasTkwin(Tk_Canvas canvas) nothrow;
extern(C) void Tk_CanvasWindowCoords(Tk_Canvas canvas, double x, double y, short* screenXPtr, short* screenYPtr) nothrow;
extern(C) void Tk_ChangeWindowAttributes(Tk_Window tkwin, c_ulong valueMask, XSetWindowAttributes* attsPtr) nothrow;
extern(C) int Tk_CharBbox(Tk_TextLayout layout, int index, int* xPtr, int* yPtr, int* widthPtr, int* heightPtr) nothrow;
extern(C) void Tk_ClearSelection(Tk_Window tkwin, Atom selection) nothrow;
extern(C) int Tk_ClipboardAppend(Tcl_Interp* interp, Tk_Window tkwin, Atom target, Atom format, ubyte* buffer) nothrow;
extern(C) int Tk_ClipboardClear(Tcl_Interp* interp, Tk_Window tkwin) nothrow;
extern(C) int Tk_ConfigureInfo(Tcl_Interp* interp, Tk_Window tkwin, Tk_ConfigSpec* specs, void* widgRec, const(char)* argvName, int flags) nothrow;
extern(C) int Tk_ConfigureValue(Tcl_Interp* interp, Tk_Window tkwin, Tk_ConfigSpec* specs, void* widgRec, const(char)* argvName, int flags) nothrow;
extern(C) int Tk_ConfigureWidget(Tcl_Interp* interp, Tk_Window tkwin, Tk_ConfigSpec* specs, int argc, const(char)** argv, void* widgRec, int flags) nothrow;
extern(C) void Tk_ConfigureWindow(Tk_Window tkwin, uint valueMask, XWindowChanges* valuePtr) nothrow;
extern(C) Tk_TextLayout Tk_ComputeTextLayout(Tk_Font font, const(char)* str, int numChars, int wrapLength, Tk_Justify justify, int flags, int* widthPtr, int* heightPtr) nothrow;
extern(C) Tk_Window Tk_CoordsToWindow(int rootX, int rootY, Tk_Window tkwin) nothrow;
extern(C) c_ulong Tk_CreateBinding(Tcl_Interp* interp, Tk_BindingTable bindingTable, ClientData object, const(char)* eventStr, const(char)* command, int append) nothrow;
extern(C) Tk_BindingTable Tk_CreateBindingTable(Tcl_Interp* interp) nothrow;
extern(C) Tk_ErrorHandler Tk_CreateErrorHandler(Display* display, int errNum, int request, int minorCode, Tk_ErrorProc errorProc, ClientData clientData) nothrow;
extern(C) void Tk_CreateEventHandler(Tk_Window token, c_ulong mask, Tk_EventProc proc, ClientData clientData) nothrow;
extern(C) void Tk_CreateGenericHandler(Tk_GenericProc proc, ClientData clientData) nothrow;
extern(C) void Tk_CreateImageType(Tk_ImageType* typePtr) nothrow;
extern(C) void Tk_CreateItemType(Tk_ItemType* typePtr) nothrow;
extern(C) void Tk_CreatePhotoImageFormat( Tk_PhotoImageFormat* formatPtr) nothrow;
extern(C) void Tk_CreateSelHandler(Tk_Window tkwin, Atom selection, Atom target, Tk_SelectionProc proc, ClientData clientData, Atom format) nothrow;
extern(C) Tk_Window Tk_CreateWindow(Tcl_Interp* interp, Tk_Window parent, const(char)* name, const(char)* screenName) nothrow;
extern(C) Tk_Window Tk_CreateWindowFromPath(Tcl_Interp* interp, Tk_Window tkwin, const(char)* pathName, const(char)* screenName) nothrow;
extern(C) int Tk_DefineBitmap(Tcl_Interp* interp, const(char)* name, const(char)* source, int width, int height) nothrow;
extern(C) void Tk_DefineCursor(Tk_Window window, Tk_Cursor cursor) nothrow;
extern(C) void Tk_DeleteAllBindings(Tk_BindingTable bindingTable, ClientData object) nothrow;
extern(C) int Tk_DeleteBinding(Tcl_Interp* interp, Tk_BindingTable bindingTable, ClientData object, const(char)* eventStr) nothrow;
extern(C) void Tk_DeleteBindingTable(Tk_BindingTable bindingTable) nothrow;
extern(C) void Tk_DeleteErrorHandler(Tk_ErrorHandler handler) nothrow;
extern(C) void Tk_DeleteEventHandler(Tk_Window token, c_ulong mask, Tk_EventProc proc, ClientData clientData) nothrow;
extern(C) void Tk_DeleteGenericHandler(Tk_GenericProc proc, ClientData clientData) nothrow;
extern(C) void Tk_DeleteImage(Tcl_Interp* interp, const(char)* name) nothrow;
extern(C) void Tk_DeleteSelHandler(Tk_Window tkwin, Atom selection, Atom target) nothrow;
extern(C) void Tk_DestroyWindow(Tk_Window tkwin) nothrow;
extern(C) const(char)* Tk_DisplayName(Tk_Window tkwin) nothrow;
extern(C) int Tk_DistanceToTextLayout(Tk_TextLayout layout, int x, int y) nothrow;
extern(C) void Tk_Draw3DPolygon(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, XPoint* pointPtr, int numPoints, int borderWidth, int leftRelief) nothrow;
extern(C) void Tk_Draw3DRectangle(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int borderWidth, int relief) nothrow;
extern(C) void Tk_DrawChars(Display* display, Drawable drawable, GC gc, Tk_Font tkfont, const(char)* source, int numBytes, int x, int y) nothrow;
extern(C) void Tk_DrawFocusHighlight(Tk_Window tkwin, GC gc, int width, Drawable drawable) nothrow;
extern(C) void Tk_DrawTextLayout(Display* display, Drawable drawable, GC gc, Tk_TextLayout layout, int x, int y, int firstChar, int lastChar) nothrow;
extern(C) void Tk_Fill3DPolygon(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, XPoint* pointPtr, int numPoints, int borderWidth, int leftRelief) nothrow;
extern(C) void Tk_Fill3DRectangle(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int borderWidth, int relief) nothrow;
extern(C) Tk_PhotoHandle Tk_FindPhoto(Tcl_Interp* interp, const(char)* imageName) nothrow;
extern(C) Font Tk_FontId(Tk_Font font) nothrow;
extern(C) void Tk_Free3DBorder(Tk_3DBorder border) nothrow;
extern(C) void Tk_FreeBitmap(Display* display, Pixmap bitmap) nothrow;
extern(C) void Tk_FreeColor(XColor* colorPtr) nothrow;
extern(C) void Tk_FreeColormap(Display* display, Colormap colormap) nothrow;
extern(C) void Tk_FreeCursor(Display* display, Tk_Cursor cursor) nothrow;
extern(C) void Tk_FreeFont(Tk_Font f) nothrow;
extern(C) void Tk_FreeGC(Display* display, GC gc) nothrow;
extern(C) void Tk_FreeImage(Tk_Image image) nothrow;
extern(C) void Tk_FreeOptions(Tk_ConfigSpec* specs, void* widgRec, Display* display, int needFlags) nothrow;
extern(C) void Tk_FreePixmap(Display* display, Pixmap pixmap) nothrow;
extern(C) void Tk_FreeTextLayout(Tk_TextLayout textLayout) nothrow;
extern(C) void Tk_FreeXId(Display* display, XID xid) nothrow;
extern(C) GC Tk_GCForColor(XColor* colorPtr, Drawable drawable) nothrow;
extern(C) void Tk_GeometryRequest(Tk_Window tkwin, int reqWidth, int reqHeight) nothrow;
extern(C) Tk_3DBorder Tk_Get3DBorder(Tcl_Interp* interp, Tk_Window tkwin, Tk_Uid colorName) nothrow;
extern(C) void Tk_GetAllBindings(Tcl_Interp* interp, Tk_BindingTable bindingTable, ClientData object) nothrow;
extern(C) int Tk_GetAnchor(Tcl_Interp* interp, const(char)* str, Tk_Anchor* anchorPtr) nothrow;
extern(C) const(char)* Tk_GetAtomName(Tk_Window tkwin, Atom atom) nothrow;
extern(C) const(char)* Tk_GetBinding(Tcl_Interp* interp, Tk_BindingTable bindingTable, ClientData object, const(char)* eventStr) nothrow;
extern(C) Pixmap Tk_GetBitmap(Tcl_Interp* interp, Tk_Window tkwin, const(char)* str) nothrow;
extern(C) Pixmap Tk_GetBitmapFromData(Tcl_Interp* interp, Tk_Window tkwin, const(char)* source, int width, int height) nothrow;
extern(C) int Tk_GetCapStyle(Tcl_Interp* interp, const(char)* str, int* capPtr) nothrow;
extern(C) XColor* Tk_GetColor(Tcl_Interp* interp, Tk_Window tkwin, Tk_Uid name) nothrow;
extern(C) XColor* Tk_GetColorByValue(Tk_Window tkwin, XColor* colorPtr) nothrow;
extern(C) Colormap Tk_GetColormap(Tcl_Interp* interp, Tk_Window tkwin, const(char)* str) nothrow;
extern(C) Tk_Cursor Tk_GetCursor(Tcl_Interp* interp, Tk_Window tkwin, Tk_Uid str) nothrow;
extern(C) Tk_Cursor Tk_GetCursorFromData(Tcl_Interp* interp, Tk_Window tkwin, const(char)* source, const(char)* mask, int width, int height, int xHot, int yHot, Tk_Uid fg, Tk_Uid bg) nothrow;
extern(C) Tk_Font Tk_GetFont(Tcl_Interp* interp, Tk_Window tkwin, const(char)* str) nothrow;
extern(C) Tk_Font Tk_GetFontFromObj(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) void Tk_GetFontMetrics(Tk_Font font, Tk_FontMetrics* fmPtr) nothrow;
extern(C) GC Tk_GetGC(Tk_Window tkwin, c_ulong valueMask, XGCValues* valuePtr) nothrow;
extern(C) Tk_Image Tk_GetImage(Tcl_Interp* interp, Tk_Window tkwin, const(char)* name, Tk_ImageChangedProc changeProc, ClientData clientData) nothrow;
extern(C) ClientData Tk_GetImageMasterData(Tcl_Interp* interp, const(char)* name, Tk_ImageType** typePtrPtr) nothrow;
extern(C) Tk_ItemType* Tk_GetItemTypes() nothrow;
extern(C) int Tk_GetJoinStyle(Tcl_Interp* interp, const(char)* str, int* joinPtr) nothrow;
extern(C) int Tk_GetJustify(Tcl_Interp* interp, const(char)* str, Tk_Justify* justifyPtr) nothrow;
extern(C) int Tk_GetNumMainWindows() nothrow;
extern(C) Tk_Uid Tk_GetOption(Tk_Window tkwin, const(char)* name, const(char)* className) nothrow;
extern(C) int Tk_GetPixels(Tcl_Interp* interp, Tk_Window tkwin, const(char)* str, int* intPtr) nothrow;
extern(C) Pixmap Tk_GetPixmap(Display* display, Drawable d, int width, int height, int depth) nothrow;
extern(C) int Tk_GetRelief(Tcl_Interp* interp, const(char)* name, int* reliefPtr) nothrow;
extern(C) void Tk_GetRootCoords(Tk_Window tkwin, int* xPtr, int* yPtr) nothrow;
extern(C) int Tk_GetScrollInfo(Tcl_Interp* interp, int argc, const(char)** argv, double* dblPtr, int* intPtr) nothrow;
extern(C) int Tk_GetScreenMM(Tcl_Interp* interp, Tk_Window tkwin, const(char)* str, double* doublePtr) nothrow;
extern(C) int Tk_GetSelection(Tcl_Interp* interp, Tk_Window tkwin, Atom selection, Atom target, Tk_GetSelProc proc, ClientData clientData) nothrow;
extern(C) Tk_Uid Tk_GetUid(const(char)* str) nothrow;
extern(C) Visual* Tk_GetVisual(Tcl_Interp* interp, Tk_Window tkwin, const(char)* str, int* depthPtr, Colormap* colormapPtr) nothrow;
extern(C) void Tk_GetVRootGeometry(Tk_Window tkwin, int* xPtr, int* yPtr, int* widthPtr, int* heightPtr) nothrow;
extern(C) int Tk_Grab(Tcl_Interp* interp, Tk_Window tkwin, int grabGlobal) nothrow;
extern(C) void Tk_HandleEvent(XEvent* eventPtr) nothrow;
extern(C) Tk_Window Tk_IdToWindow(Display* display, Window window) nothrow;
extern(C) void Tk_ImageChanged(Tk_ImageMaster master, int x, int y, int width, int height, int imageWidth, int imageHeight) nothrow;
extern(C) int Tk_Init(Tcl_Interp* interp) nothrow;
extern(C) Atom Tk_InternAtom(Tk_Window tkwin, const(char)* name) nothrow;
extern(C) int Tk_IntersectTextLayout(Tk_TextLayout layout, int x, int y, int width, int height) nothrow;
extern(C) void Tk_MaintainGeometry(Tk_Window slave, Tk_Window master, int x, int y, int width, int height) nothrow;
extern(C) Tk_Window Tk_MainWindow(Tcl_Interp* interp) nothrow;
extern(C) void Tk_MakeWindowExist(Tk_Window tkwin) nothrow;
extern(C) void Tk_ManageGeometry(Tk_Window tkwin, const(Tk_GeomMgr)* mgrPtr, ClientData clientData) nothrow;
extern(C) void Tk_MapWindow(Tk_Window tkwin) nothrow;
extern(C) int Tk_MeasureChars(Tk_Font tkfont, const(char)* source, int numBytes, int maxPixels, int flags, int* lengthPtr) nothrow;
extern(C) void Tk_MoveResizeWindow(Tk_Window tkwin, int x, int y, int width, int height) nothrow;
extern(C) void Tk_MoveWindow(Tk_Window tkwin, int x, int y) nothrow;
extern(C) void Tk_MoveToplevelWindow(Tk_Window tkwin, int x, int y) nothrow;
extern(C) const(char)* Tk_NameOf3DBorder(Tk_3DBorder border) nothrow;
extern(C) const(char)* Tk_NameOfAnchor(Tk_Anchor anchor) nothrow;
extern(C) const(char)* Tk_NameOfBitmap(Display* display, Pixmap bitmap) nothrow;
extern(C) const(char)* Tk_NameOfCapStyle(int cap) nothrow;
extern(C) const(char)* Tk_NameOfColor(XColor* colorPtr) nothrow;
extern(C) const(char)* Tk_NameOfCursor(Display* display, Tk_Cursor cursor) nothrow;
extern(C) const(char)* Tk_NameOfFont(Tk_Font font) nothrow;
extern(C) const(char)* Tk_NameOfImage(Tk_ImageMaster imageMaster) nothrow;
extern(C) const(char)* Tk_NameOfJoinStyle(int join) nothrow;
extern(C) const(char)* Tk_NameOfJustify(Tk_Justify justify) nothrow;
extern(C) const(char)* Tk_NameOfRelief(int relief) nothrow;
extern(C) Tk_Window Tk_NameToWindow(Tcl_Interp* interp, const(char)* pathName, Tk_Window tkwin) nothrow;
extern(C) void Tk_OwnSelection(Tk_Window tkwin, Atom selection, Tk_LostSelProc proc, ClientData clientData) nothrow;
extern(C) int Tk_ParseArgv(Tcl_Interp* interp, Tk_Window tkwin, int* argcPtr, const(char)** argv, Tk_ArgvInfo* argTable, int flags) nothrow;
extern(C) void Tk_PhotoPutBlock_NoComposite(Tk_PhotoHandle handle, Tk_PhotoImageBlock* blockPtr, int x, int y, int width, int height) nothrow;
extern(C) void Tk_PhotoPutZoomedBlock_NoComposite( Tk_PhotoHandle handle, Tk_PhotoImageBlock* blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY) nothrow;
extern(C) int Tk_PhotoGetImage(Tk_PhotoHandle handle, Tk_PhotoImageBlock* blockPtr) nothrow;
extern(C) void Tk_PhotoBlank(Tk_PhotoHandle handle) nothrow;
extern(C) void Tk_PhotoExpand_Panic(Tk_PhotoHandle handle, int width, int height) nothrow;
extern(C) void Tk_PhotoGetSize(Tk_PhotoHandle handle, int* widthPtr, int* heightPtr) nothrow;
extern(C) void Tk_PhotoSetSize_Panic(Tk_PhotoHandle handle, int width, int height) nothrow;
extern(C) int Tk_PointToChar(Tk_TextLayout layout, int x, int y) nothrow;
extern(C) int Tk_PostscriptFontName(Tk_Font tkfont, Tcl_DString* dsPtr) nothrow;
extern(C) void Tk_PreserveColormap(Display* display, Colormap colormap) nothrow;
extern(C) void Tk_QueueWindowEvent(XEvent* eventPtr, Tcl_QueuePosition position) nothrow;
extern(C) void Tk_RedrawImage(Tk_Image image, int imageX, int imageY, int width, int height, Drawable drawable, int drawableX, int drawableY) nothrow;
extern(C) void Tk_ResizeWindow(Tk_Window tkwin, int width, int height) nothrow;
extern(C) int Tk_RestackWindow(Tk_Window tkwin, int aboveBelow, Tk_Window other) nothrow;
extern(C) Tk_RestrictProc Tk_RestrictEvents(Tk_RestrictProc proc, ClientData arg, ClientData* prevArgPtr) nothrow;
extern(C) int Tk_SafeInit(Tcl_Interp* interp) nothrow;
extern(C) const(char)* Tk_SetAppName(Tk_Window tkwin, const(char)* name) nothrow;
extern(C) void Tk_SetBackgroundFromBorder(Tk_Window tkwin, Tk_3DBorder border) nothrow;
extern(C) void Tk_SetClass(Tk_Window tkwin, const(char)* className) nothrow;
extern(C) void Tk_SetGrid(Tk_Window tkwin, int reqWidth, int reqHeight, int gridWidth, int gridHeight) nothrow;
extern(C) void Tk_SetInternalBorder(Tk_Window tkwin, int width) nothrow;
extern(C) void Tk_SetWindowBackground(Tk_Window tkwin, c_ulong pixel) nothrow;
extern(C) void Tk_SetWindowBackgroundPixmap(Tk_Window tkwin, Pixmap pixmap) nothrow;
extern(C) void Tk_SetWindowBorder(Tk_Window tkwin, c_ulong pixel) nothrow;
extern(C) void Tk_SetWindowBorderWidth(Tk_Window tkwin, int width) nothrow;
extern(C) void Tk_SetWindowBorderPixmap(Tk_Window tkwin, Pixmap pixmap) nothrow;
extern(C) void Tk_SetWindowColormap(Tk_Window tkwin, Colormap colormap) nothrow;
extern(C) int Tk_SetWindowVisual(Tk_Window tkwin, Visual* visual, int depth, Colormap colormap) nothrow;
extern(C) void Tk_SizeOfBitmap(Display* display, Pixmap bitmap, int* widthPtr, int* heightPtr) nothrow;
extern(C) void Tk_SizeOfImage(Tk_Image image, int* widthPtr, int* heightPtr) nothrow;
extern(C) int Tk_StrictMotif(Tk_Window tkwin) nothrow;
extern(C) void Tk_TextLayoutToPostscript(Tcl_Interp* interp, Tk_TextLayout layout) nothrow;
extern(C) int Tk_TextWidth(Tk_Font font, const(char)* str, int numBytes) nothrow;
extern(C) void Tk_UndefineCursor(Tk_Window window) nothrow;
extern(C) void Tk_UnderlineChars(Display* display, Drawable drawable, GC gc, Tk_Font tkfont, const(char)* source, int x, int y, int firstByte, int lastByte) nothrow;
extern(C) void Tk_UnderlineTextLayout(Display* display, Drawable drawable, GC gc, Tk_TextLayout layout, int x, int y, int underline) nothrow;
extern(C) void Tk_Ungrab(Tk_Window tkwin) nothrow;
extern(C) void Tk_UnmaintainGeometry(Tk_Window slave, Tk_Window master) nothrow;
extern(C) void Tk_UnmapWindow(Tk_Window tkwin) nothrow;
extern(C) void Tk_UnsetGrid(Tk_Window tkwin) nothrow;
extern(C) void Tk_UpdatePointer(Tk_Window tkwin, int x, int y, int state) nothrow;
extern(C) Pixmap Tk_AllocBitmapFromObj(Tcl_Interp* interp, Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) Tk_3DBorder Tk_Alloc3DBorderFromObj(Tcl_Interp* interp, Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) XColor* Tk_AllocColorFromObj(Tcl_Interp* interp, Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) Tk_Cursor Tk_AllocCursorFromObj(Tcl_Interp* interp, Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) Tk_Font Tk_AllocFontFromObj(Tcl_Interp* interp, Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) Tk_OptionTable Tk_CreateOptionTable(Tcl_Interp* interp, const(Tk_OptionSpec)* templatePtr) nothrow;
extern(C) void Tk_DeleteOptionTable(Tk_OptionTable optionTable) nothrow;
extern(C) void Tk_Free3DBorderFromObj(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) void Tk_FreeBitmapFromObj(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) void Tk_FreeColorFromObj(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) void Tk_FreeConfigOptions(void* recordPtr, Tk_OptionTable optionToken, Tk_Window tkwin) nothrow;
extern(C) void Tk_FreeSavedOptions(Tk_SavedOptions* savePtr) nothrow;
extern(C) void Tk_FreeCursorFromObj(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) void Tk_FreeFontFromObj(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) Tk_3DBorder Tk_Get3DBorderFromObj(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) int Tk_GetAnchorFromObj(Tcl_Interp* interp, Tcl_Obj* objPtr, Tk_Anchor* anchorPtr) nothrow;
extern(C) Pixmap Tk_GetBitmapFromObj(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) XColor* Tk_GetColorFromObj(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) Tk_Cursor Tk_GetCursorFromObj(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow;
extern(C) Tcl_Obj* Tk_GetOptionInfo(Tcl_Interp* interp, void* recordPtr, Tk_OptionTable optionTable, Tcl_Obj* namePtr, Tk_Window tkwin) nothrow;
extern(C) Tcl_Obj* Tk_GetOptionValue(Tcl_Interp* interp, void* recordPtr, Tk_OptionTable optionTable, Tcl_Obj* namePtr, Tk_Window tkwin) nothrow;
extern(C) int Tk_GetJustifyFromObj(Tcl_Interp* interp, Tcl_Obj* objPtr, Tk_Justify* justifyPtr) nothrow;
extern(C) int Tk_GetMMFromObj(Tcl_Interp* interp, Tk_Window tkwin, Tcl_Obj* objPtr, double* doublePtr) nothrow;
extern(C) int Tk_GetPixelsFromObj(Tcl_Interp* interp, Tk_Window tkwin, Tcl_Obj* objPtr, int* intPtr) nothrow;
extern(C) int Tk_GetReliefFromObj(Tcl_Interp* interp, Tcl_Obj* objPtr, int* resultPtr) nothrow;
extern(C) int Tk_GetScrollInfoObj(Tcl_Interp* interp, int objc, const(Tcl_Obj*)[] objv, double* dblPtr, int* intPtr) nothrow;
extern(C) int Tk_InitOptions(Tcl_Interp* interp, void* recordPtr, Tk_OptionTable optionToken, Tk_Window tkwin) nothrow;
extern(C) void Tk_MainEx(int argc, const(char)** argv, Tcl_AppInitProc appInitProc, Tcl_Interp* interp) nothrow;
extern(C) void Tk_RestoreSavedOptions(Tk_SavedOptions* savePtr) nothrow;
extern(C) int Tk_SetOptions(Tcl_Interp* interp, void* recordPtr, Tk_OptionTable optionTable, int objc, const(Tcl_Obj*)[] objv, Tk_Window tkwin, Tk_SavedOptions* savePtr, int* maskPtr) nothrow;
extern(C) void Tk_InitConsoleChannels(Tcl_Interp* interp) nothrow;
extern(C) int Tk_CreateConsoleWindow(Tcl_Interp* interp) nothrow;
extern(C) void Tk_CreateSmoothMethod(Tcl_Interp* interp, Tk_SmoothMethod* method) nothrow;
extern(C) int Tk_GetDash(Tcl_Interp* interp, const(char)* value, Tk_Dash* dash) nothrow;
extern(C) void Tk_CreateOutline(Tk_Outline* outline) nothrow;
extern(C) void Tk_DeleteOutline(Display* display, Tk_Outline* outline) nothrow;
extern(C) int Tk_ConfigOutlineGC(XGCValues* gcValues, Tk_Canvas canvas, Tk_Item* item, Tk_Outline* outline) nothrow;
extern(C) int Tk_ChangeOutlineGC(Tk_Canvas canvas, Tk_Item* item, Tk_Outline* outline) nothrow;
extern(C) int Tk_ResetOutlineGC(Tk_Canvas canvas, Tk_Item* item, Tk_Outline* outline) nothrow;
extern(C) int Tk_CanvasPsOutline(Tk_Canvas canvas, Tk_Item* item, Tk_Outline* outline) nothrow;
extern(C) void Tk_SetTSOrigin(Tk_Window tkwin, GC gc, int x, int y) nothrow;
extern(C) int Tk_CanvasGetCoordFromObj(Tcl_Interp* interp, Tk_Canvas canvas, Tcl_Obj* obj, double* doublePtr) nothrow;
extern(C) void Tk_CanvasSetOffset(Tk_Canvas canvas, GC gc, Tk_TSOffset* offset) nothrow;
extern(C) void Tk_DitherPhoto(Tk_PhotoHandle handle, int x, int y, int width, int height) nothrow;
extern(C) int Tk_PostscriptBitmap(Tcl_Interp* interp, Tk_Window tkwin, Tk_PostscriptInfo psInfo, Pixmap bitmap, int startX, int startY, int width, int height) nothrow;
extern(C) int Tk_PostscriptColor(Tcl_Interp* interp, Tk_PostscriptInfo psInfo, XColor* colorPtr) nothrow;
extern(C) int Tk_PostscriptFont(Tcl_Interp* interp, Tk_PostscriptInfo psInfo, Tk_Font font) nothrow;
extern(C) int Tk_PostscriptImage(Tk_Image image, Tcl_Interp* interp, Tk_Window tkwin, Tk_PostscriptInfo psinfo, int x, int y, int width, int height, int prepass) nothrow;
extern(C) void Tk_PostscriptPath(Tcl_Interp* interp, Tk_PostscriptInfo psInfo, double* coordPtr, int numPoints) nothrow;
extern(C) int Tk_PostscriptStipple(Tcl_Interp* interp, Tk_Window tkwin, Tk_PostscriptInfo psInfo, Pixmap bitmap) nothrow;
extern(C) double Tk_PostscriptY(double y, Tk_PostscriptInfo psInfo) nothrow;
extern(C) int Tk_PostscriptPhoto(Tcl_Interp* interp, Tk_PhotoImageBlock* blockPtr, Tk_PostscriptInfo psInfo, int width, int height) nothrow;
extern(C) void Tk_CreateClientMessageHandler( Tk_ClientMessageProc proc) nothrow;
extern(C) void Tk_DeleteClientMessageHandler( Tk_ClientMessageProc proc) nothrow;
extern(C) Tk_Window Tk_CreateAnonymousWindow(Tcl_Interp* interp, Tk_Window parent, const(char)* screenName) nothrow;
extern(C) void Tk_SetClassProcs(Tk_Window tkwin, Tk_ClassProcs* procs, ClientData instanceData) nothrow;
extern(C) void Tk_SetInternalBorderEx(Tk_Window tkwin, int left, int right, int top, int bottom) nothrow;
extern(C) void Tk_SetMinimumRequestSize(Tk_Window tkwin, int minWidth, int minHeight) nothrow;
extern(C) void Tk_SetCaretPos(Tk_Window tkwin, int x, int y, int height) nothrow;
extern(C) void Tk_PhotoPutBlock_Panic(Tk_PhotoHandle handle, Tk_PhotoImageBlock* blockPtr, int x, int y, int width, int height, int compRule) nothrow;
extern(C) void Tk_PhotoPutZoomedBlock_Panic(Tk_PhotoHandle handle, Tk_PhotoImageBlock* blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY, int compRule) nothrow;
extern(C) int Tk_CollapseMotionEvents(Display* display, int collapse) nothrow;
extern(C) Tk_StyleEngine Tk_RegisterStyleEngine(const(char)* name, Tk_StyleEngine parent) nothrow;
extern(C) Tk_StyleEngine Tk_GetStyleEngine(const(char)* name) nothrow;
extern(C) int Tk_RegisterStyledElement(Tk_StyleEngine engine, Tk_ElementSpec* templatePtr) nothrow;
extern(C) int Tk_GetElementId(const(char)* name) nothrow;
extern(C) Tk_Style Tk_CreateStyle(const(char)* name, Tk_StyleEngine engine, ClientData clientData) nothrow;
extern(C) Tk_Style Tk_GetStyle(Tcl_Interp* interp, const(char)* name) nothrow;
extern(C) void Tk_FreeStyle(Tk_Style style) nothrow;
extern(C) const(char)* Tk_NameOfStyle(Tk_Style style) nothrow;
extern(C) Tk_Style Tk_AllocStyleFromObj(Tcl_Interp* interp, Tcl_Obj* objPtr) nothrow;
extern(C) Tk_Style Tk_GetStyleFromObj(Tcl_Obj* objPtr) nothrow;
extern(C) void Tk_FreeStyleFromObj(Tcl_Obj* objPtr) nothrow;
extern(C) Tk_StyledElement  Tk_GetStyledElement(Tk_Style style, int elementId, Tk_OptionTable optionTable) nothrow;
extern(C) void Tk_GetElementSize(Tk_Style style, Tk_StyledElement element, void* recordPtr, Tk_Window tkwin, int width, int height, int inner, int* widthPtr, int* heightPtr) nothrow;
extern(C) void Tk_GetElementBox(Tk_Style style, Tk_StyledElement element, void* recordPtr, Tk_Window tkwin, int x, int y, int width, int height, int inner, int* xPtr, int* yPtr, int* widthPtr, int* heightPtr) nothrow;
extern(C) int Tk_GetElementBorderWidth(Tk_Style style, Tk_StyledElement element, void* recordPtr, Tk_Window tkwin) nothrow;
extern(C) void Tk_DrawElement(Tk_Style style, Tk_StyledElement element, void* recordPtr, Tk_Window tkwin, Drawable d, int x, int y, int width, int height, int state) nothrow;
extern(C) int Tk_PhotoExpand(Tcl_Interp* interp, Tk_PhotoHandle handle, int width, int height) nothrow;
extern(C) int Tk_PhotoPutBlock(Tcl_Interp* interp, Tk_PhotoHandle handle, Tk_PhotoImageBlock* blockPtr, int x, int y, int width, int height, int compRule) nothrow;
extern(C) int Tk_PhotoPutZoomedBlock(Tcl_Interp* interp, Tk_PhotoHandle handle, Tk_PhotoImageBlock* blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY, int compRule) nothrow;
extern(C) int Tk_PhotoSetSize(Tcl_Interp* interp, Tk_PhotoHandle handle, int width, int height) nothrow;
extern(C) c_long Tk_GetUserInactiveTime(Display* dpy) nothrow;
extern(C) void Tk_ResetUserInactiveTime(Display* dpy) nothrow;
extern(C) Tcl_Interp* Tk_Interp(Tk_Window tkwin) nothrow;
extern(C) void Tk_CreateOldImageType(Tk_ImageType* typePtr) nothrow;
extern(C) void Tk_CreateOldPhotoImageFormat( Tk_PhotoImageFormat* formatPtr) nothrow;

struct TkPlatStubs;
struct TkIntStubs;
struct TkIntPlatStubs;
struct TkIntXlibStubs;

struct TkStubHooks
{
    TkPlatStubs* tkPlatStubs;
    TkIntStubs* tkIntStubs;
    TkIntPlatStubs* tkIntPlatStubs;
    TkIntXlibStubs* tkIntXlibStubs;
}

struct TkStubs
{
	int magic;
	TkStubHooks* hooks;

	extern(C) void function() nothrow tk_MainLoop;
	extern(C) XColor* function(Tk_3DBorder border) nothrow tk_3DBorderColor;
	extern(C) GC function(Tk_Window tkwin, Tk_3DBorder border, int which) nothrow tk_3DBorderGC;
	extern(C) void function(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int leftIn, int rightIn, int topBevel, int relief) nothrow tk_3DHorizontalBevel;
	extern(C) void function(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int leftBevel, int relief) nothrow tk_3DVerticalBevel;
	extern(C) void function(Tk_Window tkwin, const(char)* name, const(char)* value, int priority) nothrow tk_AddOption;
	extern(C) void function(Tk_BindingTable bindingTable, XEvent* eventPtr, Tk_Window tkwin, int numObjects, ClientData* objectPtr) nothrow tk_BindEvent;
	extern(C) void function(Tk_Canvas canvas, double x, double y, short* drawableXPtr, short* drawableYPtr) nothrow tk_CanvasDrawableCoords;
	extern(C) void function(Tk_Canvas canvas, int x1, int y1, int x2, int y2) nothrow tk_CanvasEventuallyRedraw;
	extern(C) int function(Tcl_Interp* interp, Tk_Canvas canvas, const(char)* str, double* doublePtr) nothrow tk_CanvasGetCoord;
	extern(C) Tk_CanvasTextInfo* function(Tk_Canvas canvas) nothrow tk_CanvasGetTextInfo;
	extern(C) int function(Tcl_Interp* interp, Tk_Canvas canvas, Pixmap bitmap, int x, int y, int width, int height) nothrow tk_CanvasPsBitmap;
	extern(C) int function(Tcl_Interp* interp, Tk_Canvas canvas, XColor* colorPtr) nothrow tk_CanvasPsColor;
	extern(C) int function(Tcl_Interp* interp, Tk_Canvas canvas, Tk_Font font) nothrow tk_CanvasPsFont;
	extern(C) void function(Tcl_Interp* interp, Tk_Canvas canvas, double* coordPtr, int numPoints) nothrow tk_CanvasPsPath;
	extern(C) int function(Tcl_Interp* interp, Tk_Canvas canvas, Pixmap bitmap) nothrow tk_CanvasPsStipple;
	extern(C) double function(Tk_Canvas canvas, double y) nothrow tk_CanvasPsY;
	extern(C) void function(Tk_Canvas canvas, GC gc) nothrow tk_CanvasSetStippleOrigin;
	extern(C) int function(ClientData clientData, Tcl_Interp* interp, Tk_Window tkwin, const(char)* value, void* widgRec, int offset) nothrow tk_CanvasTagsParseProc;
	extern(C) void* function(ClientData clientData, Tk_Window tkwin, void* widgRec, int offset, Tcl_FreeProc* freeProcPtr) nothrow tk_CanvasTagsPrintProc;
	extern(C) Tk_Window function(Tk_Canvas canvas) nothrow tk_CanvasTkwin;
	extern(C) void function(Tk_Canvas canvas, double x, double y, short* screenXPtr, short* screenYPtr) nothrow tk_CanvasWindowCoords;
	extern(C) void function(Tk_Window tkwin, c_ulong valueMask, XSetWindowAttributes* attsPtr) nothrow tk_ChangeWindowAttributes;
	extern(C) int function(Tk_TextLayout layout, int index, int* xPtr, int* yPtr, int* widthPtr, int* heightPtr) nothrow tk_CharBbox;
	extern(C) void function(Tk_Window tkwin, Atom selection) nothrow tk_ClearSelection;
	extern(C) int function(Tcl_Interp* interp, Tk_Window tkwin, Atom target, Atom format, ubyte* buffer) nothrow tk_ClipboardAppend;
	extern(C) int function(Tcl_Interp* interp, Tk_Window tkwin) nothrow tk_ClipboardClear;
	extern(C) int function(Tcl_Interp* interp, Tk_Window tkwin, Tk_ConfigSpec* specs, void* widgRec, const(char)* argvName, int flags) nothrow tk_ConfigureInfo;
	extern(C) int function(Tcl_Interp* interp, Tk_Window tkwin, Tk_ConfigSpec* specs, void* widgRec, const(char)* argvName, int flags) nothrow tk_ConfigureValue;
	extern(C) int function(Tcl_Interp* interp, Tk_Window tkwin, Tk_ConfigSpec* specs, int argc, const(char)** argv, void* widgRec, int flags) nothrow tk_ConfigureWidget;
	extern(C) void function(Tk_Window tkwin, uint valueMask, XWindowChanges* valuePtr) nothrow tk_ConfigureWindow;
	extern(C) Tk_TextLayout function(Tk_Font font, const(char)* str, int numChars, int wrapLength, Tk_Justify justify, int flags, int* widthPtr, int* heightPtr) nothrow tk_ComputeTextLayout;
	extern(C) Tk_Window function(int rootX, int rootY, Tk_Window tkwin) nothrow tk_CoordsToWindow;
	extern(C) c_ulong function(Tcl_Interp* interp, Tk_BindingTable bindingTable, ClientData object, const(char)* eventStr, const(char)* command, int append) nothrow tk_CreateBinding;
	extern(C) Tk_BindingTable function(Tcl_Interp* interp) nothrow tk_CreateBindingTable;
	extern(C) Tk_ErrorHandler function(Display* display, int errNum, int request, int minorCode, Tk_ErrorProc errorProc, ClientData clientData) nothrow tk_CreateErrorHandler;
	extern(C) void function(Tk_Window token, c_ulong mask, Tk_EventProc proc, ClientData clientData) nothrow tk_CreateEventHandler;
	extern(C) void function(Tk_GenericProc proc, ClientData clientData) nothrow tk_CreateGenericHandler;
	extern(C) void function(Tk_ImageType* typePtr) nothrow tk_CreateImageType;
	extern(C) void function(Tk_ItemType* typePtr) nothrow tk_CreateItemType;
	extern(C) void function(Tk_PhotoImageFormat* formatPtr) nothrow tk_CreatePhotoImageFormat;
	extern(C) void function(Tk_Window tkwin, Atom selection, Atom target, Tk_SelectionProc proc, ClientData clientData, Atom format) nothrow tk_CreateSelHandler;
	extern(C) Tk_Window function(Tcl_Interp* interp, Tk_Window parent, const(char)* name, const(char)* screenName) nothrow tk_CreateWindow;
	extern(C) Tk_Window function(Tcl_Interp* interp, Tk_Window tkwin, const(char)* pathName, const(char)* screenName) nothrow tk_CreateWindowFromPath;
	extern(C) int function(Tcl_Interp* interp, const(char)* name, const(char)* source, int width, int height) nothrow tk_DefineBitmap;
	extern(C) void function(Tk_Window window, Tk_Cursor cursor) nothrow tk_DefineCursor;
	extern(C) void function(Tk_BindingTable bindingTable, ClientData object) nothrow tk_DeleteAllBindings;
	extern(C) int function(Tcl_Interp* interp, Tk_BindingTable bindingTable, ClientData object, const(char)* eventStr) nothrow tk_DeleteBinding;
	extern(C) void function(Tk_BindingTable bindingTable) nothrow tk_DeleteBindingTable;
	extern(C) void function(Tk_ErrorHandler handler) nothrow tk_DeleteErrorHandler;
	extern(C) void function(Tk_Window token, c_ulong mask, Tk_EventProc proc, ClientData clientData) nothrow tk_DeleteEventHandler;
	extern(C) void function(Tk_GenericProc proc, ClientData clientData) nothrow tk_DeleteGenericHandler;
	extern(C) void function(Tcl_Interp* interp, const(char)* name) nothrow tk_DeleteImage;
	extern(C) void function(Tk_Window tkwin, Atom selection, Atom target) nothrow tk_DeleteSelHandler;
	extern(C) void function(Tk_Window tkwin) nothrow tk_DestroyWindow;
	extern(C) const(char)* function(Tk_Window tkwin) nothrow tk_DisplayName;
	extern(C) int function(Tk_TextLayout layout, int x, int y) nothrow tk_DistanceToTextLayout;
	extern(C) void function(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, XPoint* pointPtr, int numPoints, int borderWidth, int leftRelief) nothrow tk_Draw3DPolygon;
	extern(C) void function(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int borderWidth, int relief) nothrow tk_Draw3DRectangle;
	extern(C) void function(Display* display, Drawable drawable, GC gc, Tk_Font tkfont, const(char)* source, int numBytes, int x, int y) nothrow tk_DrawChars;
	extern(C) void function(Tk_Window tkwin, GC gc, int width, Drawable drawable) nothrow tk_DrawFocusHighlight;
	extern(C) void function(Display* display, Drawable drawable, GC gc, Tk_TextLayout layout, int x, int y, int firstChar, int lastChar) nothrow tk_DrawTextLayout;
	extern(C) void function(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, XPoint* pointPtr, int numPoints, int borderWidth, int leftRelief) nothrow tk_Fill3DPolygon;
	extern(C) void function(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int borderWidth, int relief) nothrow tk_Fill3DRectangle;
	extern(C) Tk_PhotoHandle function(Tcl_Interp* interp, const(char)* imageName) nothrow tk_FindPhoto;
	extern(C) Font function(Tk_Font font) nothrow tk_FontId;
	extern(C) void function(Tk_3DBorder border) nothrow tk_Free3DBorder;
	extern(C) void function(Display* display, Pixmap bitmap) nothrow tk_FreeBitmap;
	extern(C) void function(XColor* colorPtr) nothrow tk_FreeColor;
	extern(C) void function(Display* display, Colormap colormap) nothrow tk_FreeColormap;
	extern(C) void function(Display* display, Tk_Cursor cursor) nothrow tk_FreeCursor;
	extern(C) void function(Tk_Font f) nothrow tk_FreeFont;
	extern(C) void function(Display* display, GC gc) nothrow tk_FreeGC;
	extern(C) void function(Tk_Image image) nothrow tk_FreeImage;
	extern(C) void function(Tk_ConfigSpec* specs, void* widgRec, Display* display, int needFlags) nothrow tk_FreeOptions;
	extern(C) void function(Display* display, Pixmap pixmap) nothrow tk_FreePixmap;
	extern(C) void function(Tk_TextLayout textLayout) nothrow tk_FreeTextLayout;
	extern(C) void function(Display* display, XID xid) nothrow tk_FreeXId;
	extern(C) GC function(XColor* colorPtr, Drawable drawable) nothrow tk_GCForColor;
	extern(C) void function(Tk_Window tkwin, int reqWidth, int reqHeight) nothrow tk_GeometryRequest;
	extern(C) Tk_3DBorder function(Tcl_Interp* interp, Tk_Window tkwin, Tk_Uid colorName) nothrow tk_Get3DBorder;
	extern(C) void function(Tcl_Interp* interp, Tk_BindingTable bindingTable, ClientData object) nothrow tk_GetAllBindings;
	extern(C) int function(Tcl_Interp* interp, const(char)* str, Tk_Anchor* anchorPtr) nothrow tk_GetAnchor;
	extern(C) const(char)* function(Tk_Window tkwin, Atom atom) nothrow tk_GetAtomName;
	extern(C) const(char)* function(Tcl_Interp* interp, Tk_BindingTable bindingTable, ClientData object, const(char)* eventStr) nothrow tk_GetBinding;
	extern(C) Pixmap function(Tcl_Interp* interp, Tk_Window tkwin, const(char)* str) nothrow tk_GetBitmap;
	extern(C) Pixmap function(Tcl_Interp* interp, Tk_Window tkwin, const(char)* source, int width, int height) nothrow tk_GetBitmapFromData;
	extern(C) int function(Tcl_Interp* interp, const(char)* str, int* capPtr) nothrow tk_GetCapStyle;
	extern(C) XColor* function(Tcl_Interp* interp, Tk_Window tkwin, Tk_Uid name) nothrow tk_GetColor;
	extern(C) XColor* function(Tk_Window tkwin, XColor* colorPtr) nothrow tk_GetColorByValue;
	extern(C) Colormap function(Tcl_Interp* interp, Tk_Window tkwin, const(char)* str) nothrow tk_GetColormap;
	extern(C) Tk_Cursor function(Tcl_Interp* interp, Tk_Window tkwin, Tk_Uid str) nothrow tk_GetCursor;
	extern(C) Tk_Cursor function(Tcl_Interp* interp, Tk_Window tkwin, const(char)* source, const(char)* mask, int width, int height, int xHot, int yHot, Tk_Uid fg, Tk_Uid bg) nothrow tk_GetCursorFromData;
	extern(C) Tk_Font function(Tcl_Interp* interp, Tk_Window tkwin, const(char)* str) nothrow tk_GetFont;
	extern(C) Tk_Font function(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_GetFontFromObj;
	extern(C) void function(Tk_Font font, Tk_FontMetrics* fmPtr) nothrow tk_GetFontMetrics;
	extern(C) GC function(Tk_Window tkwin, c_ulong valueMask, XGCValues* valuePtr) nothrow tk_GetGC;
	extern(C) Tk_Image function(Tcl_Interp* interp, Tk_Window tkwin, const(char)* name, Tk_ImageChangedProc changeProc, ClientData clientData) nothrow tk_GetImage;
	extern(C) ClientData function(Tcl_Interp* interp, const(char)* name, Tk_ImageType** typePtrPtr) nothrow tk_GetImageMasterData;
	extern(C) Tk_ItemType* function() nothrow tk_GetItemTypes;
	extern(C) int function(Tcl_Interp* interp, const(char)* str, int* joinPtr) nothrow tk_GetJoinStyle;
	extern(C) int function(Tcl_Interp* interp, const(char)* str, Tk_Justify* justifyPtr) nothrow tk_GetJustify;
	extern(C) int function() nothrow tk_GetNumMainWindows;
	extern(C) Tk_Uid function(Tk_Window tkwin, const(char)* name, const(char)* className) nothrow tk_GetOption;
	extern(C) int function(Tcl_Interp* interp, Tk_Window tkwin, const(char)* str, int* intPtr) nothrow tk_GetPixels;
	extern(C) Pixmap function(Display* display, Drawable d, int width, int height, int depth) nothrow tk_GetPixmap;
	extern(C) int function(Tcl_Interp* interp, const(char)* name, int* reliefPtr) nothrow tk_GetRelief;
	extern(C) void function(Tk_Window tkwin, int* xPtr, int* yPtr) nothrow tk_GetRootCoords;
	extern(C) int function(Tcl_Interp* interp, int argc, const(char)** argv, double* dblPtr, int* intPtr) nothrow tk_GetScrollInfo;
	extern(C) int function(Tcl_Interp* interp, Tk_Window tkwin, const(char)* str, double* doublePtr) nothrow tk_GetScreenMM;
	extern(C) int function(Tcl_Interp* interp, Tk_Window tkwin, Atom selection, Atom target, Tk_GetSelProc proc, ClientData clientData) nothrow tk_GetSelection;
	extern(C) Tk_Uid function(const(char)* str) nothrow tk_GetUid;
	extern(C) Visual* function(Tcl_Interp* interp, Tk_Window tkwin, const(char)* str, int* depthPtr, Colormap* colormapPtr) nothrow tk_GetVisual;
	extern(C) void function(Tk_Window tkwin, int* xPtr, int* yPtr, int* widthPtr, int* heightPtr) nothrow tk_GetVRootGeometry;
	extern(C) int function(Tcl_Interp* interp, Tk_Window tkwin, int grabGlobal) nothrow tk_Grab;
	extern(C) void function(XEvent* eventPtr) nothrow tk_HandleEvent;
	extern(C) Tk_Window function(Display* display, Window window) nothrow tk_IdToWindow;
	extern(C) void function(Tk_ImageMaster master, int x, int y, int width, int height, int imageWidth, int imageHeight) nothrow tk_ImageChanged;
	extern(C) int function(Tcl_Interp* interp) nothrow tk_Init;
	extern(C) Atom function(Tk_Window tkwin, const(char)* name) nothrow tk_InternAtom;
	extern(C) int function(Tk_TextLayout layout, int x, int y, int width, int height) nothrow tk_IntersectTextLayout;
	extern(C) void function(Tk_Window slave, Tk_Window master, int x, int y, int width, int height) nothrow tk_MaintainGeometry;
	extern(C) Tk_Window function(Tcl_Interp* interp) nothrow tk_MainWindow;
	extern(C) void function(Tk_Window tkwin) nothrow tk_MakeWindowExist;
	extern(C) void function(Tk_Window tkwin, const(Tk_GeomMgr)* mgrPtr, ClientData clientData) nothrow tk_ManageGeometry;
	extern(C) void function(Tk_Window tkwin) nothrow tk_MapWindow;
	extern(C) int function(Tk_Font tkfont, const(char)* source, int numBytes, int maxPixels, int flags, int* lengthPtr) nothrow tk_MeasureChars;
	extern(C) void function(Tk_Window tkwin, int x, int y, int width, int height) nothrow tk_MoveResizeWindow;
	extern(C) void function(Tk_Window tkwin, int x, int y) nothrow tk_MoveWindow;
	extern(C) void function(Tk_Window tkwin, int x, int y) nothrow tk_MoveToplevelWindow;
	extern(C) const(char)* function(Tk_3DBorder border) nothrow tk_NameOf3DBorder;
	extern(C) const(char)* function(Tk_Anchor anchor) nothrow tk_NameOfAnchor;
	extern(C) const(char)* function(Display* display, Pixmap bitmap) nothrow tk_NameOfBitmap;
	extern(C) const(char)* function(int cap) nothrow tk_NameOfCapStyle;
	extern(C) const(char)* function(XColor* colorPtr) nothrow tk_NameOfColor;
	extern(C) const(char)* function(Display* display, Tk_Cursor cursor) nothrow tk_NameOfCursor;
	extern(C) const(char)* function(Tk_Font font) nothrow tk_NameOfFont;
	extern(C) const(char)* function(Tk_ImageMaster imageMaster) nothrow tk_NameOfImage;
	extern(C) const(char)* function(int join) nothrow tk_NameOfJoinStyle;
	extern(C) const(char)* function(Tk_Justify justify) nothrow tk_NameOfJustify;
	extern(C) const(char)* function(int relief) nothrow tk_NameOfRelief;
	extern(C) Tk_Window function(Tcl_Interp* interp, const(char)* pathName, Tk_Window tkwin) nothrow tk_NameToWindow;
	extern(C) void function(Tk_Window tkwin, Atom selection, Tk_LostSelProc proc, ClientData clientData) nothrow tk_OwnSelection;
	extern(C) int function(Tcl_Interp* interp, Tk_Window tkwin, int* argcPtr, const(char)** argv, Tk_ArgvInfo* argTable, int flags) nothrow tk_ParseArgv;
	extern(C) void function(Tk_PhotoHandle handle, Tk_PhotoImageBlock* blockPtr, int x, int y, int width, int height) nothrow tk_PhotoPutBlock_NoComposite;
	extern(C) void function(Tk_PhotoHandle handle, Tk_PhotoImageBlock* blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY) nothrow tk_PhotoPutZoomedBlock_NoComposite;
	extern(C) int function(Tk_PhotoHandle handle, Tk_PhotoImageBlock* blockPtr) nothrow tk_PhotoGetImage;
	extern(C) void function(Tk_PhotoHandle handle) nothrow tk_PhotoBlank;
	extern(C) void function(Tk_PhotoHandle handle, int width, int height) nothrow tk_PhotoExpand_Panic;
	extern(C) void function(Tk_PhotoHandle handle, int* widthPtr, int* heightPtr) nothrow tk_PhotoGetSize;
	extern(C) void function(Tk_PhotoHandle handle, int width, int height) nothrow tk_PhotoSetSize_Panic;
	extern(C) int function(Tk_TextLayout layout, int x, int y) nothrow tk_PointToChar;
	extern(C) int function(Tk_Font tkfont, Tcl_DString* dsPtr) nothrow tk_PostscriptFontName;
	extern(C) void function(Display* display, Colormap colormap) nothrow tk_PreserveColormap;
	extern(C) void function(XEvent* eventPtr, Tcl_QueuePosition position) nothrow tk_QueueWindowEvent;
	extern(C) void function(Tk_Image image, int imageX, int imageY, int width, int height, Drawable drawable, int drawableX, int drawableY) nothrow tk_RedrawImage;
	extern(C) void function(Tk_Window tkwin, int width, int height) nothrow tk_ResizeWindow;
	extern(C) int function(Tk_Window tkwin, int aboveBelow, Tk_Window other) nothrow tk_RestackWindow;
	extern(C) Tk_RestrictProc function(Tk_RestrictProc proc, ClientData arg, ClientData* prevArgPtr) nothrow tk_RestrictEvents;
	extern(C) int function(Tcl_Interp* interp) nothrow tk_SafeInit;
	extern(C) const(char)* function(Tk_Window tkwin, const(char)* name) nothrow tk_SetAppName;
	extern(C) void function(Tk_Window tkwin, Tk_3DBorder border) nothrow tk_SetBackgroundFromBorder;
	extern(C) void function(Tk_Window tkwin, const(char)* className) nothrow tk_SetClass;
	extern(C) void function(Tk_Window tkwin, int reqWidth, int reqHeight, int gridWidth, int gridHeight) nothrow tk_SetGrid;
	extern(C) void function(Tk_Window tkwin, int width) nothrow tk_SetInternalBorder;
	extern(C) void function(Tk_Window tkwin, c_ulong pixel) nothrow tk_SetWindowBackground;
	extern(C) void function(Tk_Window tkwin, Pixmap pixmap) nothrow tk_SetWindowBackgroundPixmap;
	extern(C) void function(Tk_Window tkwin, c_ulong pixel) nothrow tk_SetWindowBorder;
	extern(C) void function(Tk_Window tkwin, int width) nothrow tk_SetWindowBorderWidth;
	extern(C) void function(Tk_Window tkwin, Pixmap pixmap) nothrow tk_SetWindowBorderPixmap;
	extern(C) void function(Tk_Window tkwin, Colormap colormap) nothrow tk_SetWindowColormap;
	extern(C) int function(Tk_Window tkwin, Visual* visual, int depth, Colormap colormap) nothrow tk_SetWindowVisual;
	extern(C) void function(Display* display, Pixmap bitmap, int* widthPtr, int* heightPtr) nothrow tk_SizeOfBitmap;
	extern(C) void function(Tk_Image image, int* widthPtr, int* heightPtr) nothrow tk_SizeOfImage;
	extern(C) int function(Tk_Window tkwin) nothrow tk_StrictMotif;
	extern(C) void function(Tcl_Interp* interp, Tk_TextLayout layout) nothrow tk_TextLayoutToPostscript;
	extern(C) int function(Tk_Font font, const(char)* str, int numBytes) nothrow tk_TextWidth;
	extern(C) void function(Tk_Window window) nothrow tk_UndefineCursor;
	extern(C) void function(Display* display, Drawable drawable, GC gc, Tk_Font tkfont, const(char)* source, int x, int y, int firstByte, int lastByte) nothrow tk_UnderlineChars;
	extern(C) void function(Display* display, Drawable drawable, GC gc, Tk_TextLayout layout, int x, int y, int underline) nothrow tk_UnderlineTextLayout;
	extern(C) void function(Tk_Window tkwin) nothrow tk_Ungrab;
	extern(C) void function(Tk_Window slave, Tk_Window master) nothrow tk_UnmaintainGeometry;
	extern(C) void function(Tk_Window tkwin) nothrow tk_UnmapWindow;
	extern(C) void function(Tk_Window tkwin) nothrow tk_UnsetGrid;
	extern(C) void function(Tk_Window tkwin, int x, int y, int state) nothrow tk_UpdatePointer;
	extern(C) Pixmap function(Tcl_Interp* interp, Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_AllocBitmapFromObj;
	extern(C) Tk_3DBorder function(Tcl_Interp* interp, Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_Alloc3DBorderFromObj;
	extern(C) XColor* function(Tcl_Interp* interp, Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_AllocColorFromObj;
	extern(C) Tk_Cursor function(Tcl_Interp* interp, Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_AllocCursorFromObj;
	extern(C) Tk_Font function(Tcl_Interp* interp, Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_AllocFontFromObj;
	extern(C) Tk_OptionTable function(Tcl_Interp* interp, const(Tk_OptionSpec)* templatePtr) nothrow tk_CreateOptionTable;
	extern(C) void function(Tk_OptionTable optionTable) nothrow tk_DeleteOptionTable;
	extern(C) void function(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_Free3DBorderFromObj;
	extern(C) void function(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_FreeBitmapFromObj;
	extern(C) void function(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_FreeColorFromObj;
	extern(C) void function(void* recordPtr, Tk_OptionTable optionToken, Tk_Window tkwin) nothrow tk_FreeConfigOptions;
	extern(C) void function(Tk_SavedOptions* savePtr) nothrow tk_FreeSavedOptions;
	extern(C) void function(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_FreeCursorFromObj;
	extern(C) void function(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_FreeFontFromObj;
	extern(C) Tk_3DBorder function(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_Get3DBorderFromObj;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, Tk_Anchor* anchorPtr) nothrow tk_GetAnchorFromObj;
	extern(C) Pixmap function(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_GetBitmapFromObj;
	extern(C) XColor* function(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_GetColorFromObj;
	extern(C) Tk_Cursor function(Tk_Window tkwin, Tcl_Obj* objPtr) nothrow tk_GetCursorFromObj;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp, void* recordPtr, Tk_OptionTable optionTable, Tcl_Obj* namePtr, Tk_Window tkwin) nothrow tk_GetOptionInfo;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp, void* recordPtr, Tk_OptionTable optionTable, Tcl_Obj* namePtr, Tk_Window tkwin) nothrow tk_GetOptionValue;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, Tk_Justify* justifyPtr) nothrow tk_GetJustifyFromObj;
	extern(C) int function(Tcl_Interp* interp, Tk_Window tkwin, Tcl_Obj* objPtr, double* doublePtr) nothrow tk_GetMMFromObj;
	extern(C) int function(Tcl_Interp* interp, Tk_Window tkwin, Tcl_Obj* objPtr, int* intPtr) nothrow tk_GetPixelsFromObj;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, int* resultPtr) nothrow tk_GetReliefFromObj;
	extern(C) int function(Tcl_Interp* interp, int objc, const(Tcl_Obj*)[] objv, double* dblPtr, int* intPtr) nothrow tk_GetScrollInfoObj;
	extern(C) int function(Tcl_Interp* interp, void* recordPtr, Tk_OptionTable optionToken, Tk_Window tkwin) nothrow tk_InitOptions;
	extern(C) void function(int argc, const(char)** argv, Tcl_AppInitProc appInitProc, Tcl_Interp* interp) nothrow tk_MainEx;
	extern(C) void function(Tk_SavedOptions* savePtr) nothrow tk_RestoreSavedOptions;
	extern(C) int function(Tcl_Interp* interp, void* recordPtr, Tk_OptionTable optionTable, int objc, const(Tcl_Obj*)[] objv, Tk_Window tkwin, Tk_SavedOptions* savePtr, int* maskPtr) nothrow tk_SetOptions;
	extern(C) void function(Tcl_Interp* interp) nothrow tk_InitConsoleChannels;
	extern(C) int function(Tcl_Interp* interp) nothrow tk_CreateConsoleWindow;
	extern(C) void function(Tcl_Interp* interp, Tk_SmoothMethod* method) nothrow tk_CreateSmoothMethod;
	void* reserved218;
	void* reserved219;
	extern(C) int function(Tcl_Interp* interp, const(char)* value, Tk_Dash* dash) nothrow Tk_GetDash;
	extern(C) void function(Tk_Outline* outline) nothrow tk_CreateOutline;
	extern(C) void function(Display* display, Tk_Outline* outline) nothrow tk_DeleteOutline;
	extern(C) int function(XGCValues* gcValues, Tk_Canvas canvas, Tk_Item* item, Tk_Outline* outline) nothrow tk_ConfigOutlineGC;
	extern(C) int function(Tk_Canvas canvas, Tk_Item* item, Tk_Outline* outline) nothrow tk_ChangeOutlineGC;
	extern(C) int function(Tk_Canvas canvas, Tk_Item* item, Tk_Outline* outline) nothrow tk_ResetOutlineGC;
	extern(C) int function(Tk_Canvas canvas, Tk_Item* item, Tk_Outline* outline) nothrow tk_CanvasPsOutline;
	extern(C) void function(Tk_Window tkwin, GC gc, int x, int y) nothrow tk_SetTSOrigin;
	extern(C) int function(Tcl_Interp* interp, Tk_Canvas canvas, Tcl_Obj* obj, double* doublePtr) nothrow tk_CanvasGetCoordFromObj;
	extern(C) void function(Tk_Canvas canvas, GC gc, Tk_TSOffset* offset) nothrow tk_CanvasSetOffset;
	extern(C) void function(Tk_PhotoHandle handle, int x, int y, int width, int height) nothrow tk_DitherPhoto;
	extern(C) int function(Tcl_Interp* interp, Tk_Window tkwin, Tk_PostscriptInfo psInfo, Pixmap bitmap, int startX, int startY, int width, int height) nothrow tk_PostscriptBitmap;
	extern(C) int function(Tcl_Interp* interp, Tk_PostscriptInfo psInfo, XColor* colorPtr) nothrow tk_PostscriptColor;
	extern(C) int function(Tcl_Interp* interp, Tk_PostscriptInfo psInfo, Tk_Font font) nothrow tk_PostscriptFont;
	extern(C) int function(Tk_Image image, Tcl_Interp* interp, Tk_Window tkwin, Tk_PostscriptInfo psinfo, int x, int y, int width, int height, int prepass) nothrow tk_PostscriptImage;
	extern(C) void function(Tcl_Interp* interp, Tk_PostscriptInfo psInfo, double* coordPtr, int numPoints) nothrow tk_PostscriptPath;
	extern(C) int function(Tcl_Interp* interp, Tk_Window tkwin, Tk_PostscriptInfo psInfo, Pixmap bitmap) nothrow tk_PostscriptStipple;
	extern(C) double function(double y, Tk_PostscriptInfo psInfo) nothrow tk_PostscriptY;
	extern(C) int function(Tcl_Interp* interp, Tk_PhotoImageBlock* blockPtr, Tk_PostscriptInfo psInfo, int width, int height) nothrow tk_PostscriptPhoto;
	extern(C) void function(Tk_ClientMessageProc proc) nothrow tk_CreateClientMessageHandler;
	extern(C) void function(Tk_ClientMessageProc proc) nothrow tk_DeleteClientMessageHandler;
	extern(C) Tk_Window function(Tcl_Interp* interp, Tk_Window parent, const(char)* screenName) nothrow tk_CreateAnonymousWindow;
	extern(C) void function(Tk_Window tkwin, Tk_ClassProcs* procs, ClientData instanceData) nothrow tk_SetClassProcs;
	extern(C) void function(Tk_Window tkwin, int left, int right, int top, int bottom) nothrow tk_SetInternalBorderEx;
	extern(C) void function(Tk_Window tkwin, int minWidth, int minHeight) nothrow tk_SetMinimumRequestSize;
	extern(C) void function(Tk_Window tkwin, int x, int y, int height) nothrow tk_SetCaretPos;
	extern(C) void function(Tk_PhotoHandle handle, Tk_PhotoImageBlock* blockPtr, int x, int y, int width, int height, int compRule) nothrow tk_PhotoPutBlock_Panic;
	extern(C) void function(Tk_PhotoHandle handle, Tk_PhotoImageBlock* blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY, int compRule) nothrow tk_PhotoPutZoomedBlock_Panic;
	extern(C) int function(Display* display, int collapse) nothrow tk_CollapseMotionEvents;
	extern(C) Tk_StyleEngine function(const(char)* name, Tk_StyleEngine parent) nothrow tk_RegisterStyleEngine;
	extern(C) Tk_StyleEngine function(const(char)* name) nothrow tk_GetStyleEngine;
	extern(C) int function(Tk_StyleEngine engine, Tk_ElementSpec* templatePtr) nothrow tk_RegisterStyledElement;
	extern(C) int function(const(char)* name) nothrow tk_GetElementId;
	extern(C) Tk_Style function(const(char)* name, Tk_StyleEngine engine, ClientData clientData) nothrow tk_CreateStyle;
	extern(C) Tk_Style function(Tcl_Interp* interp, const(char)* name) nothrow tk_GetStyle;
	extern(C) void function(Tk_Style style) nothrow tk_FreeStyle;
	extern(C) const(char)* function(Tk_Style style) nothrow tk_NameOfStyle;
	extern(C) Tk_Style function(Tcl_Interp* interp, Tcl_Obj* objPtr) nothrow tk_AllocStyleFromObj;
	extern(C) Tk_Style function(Tcl_Obj* objPtr) nothrow tk_GetStyleFromObj;
	extern(C) void function(Tcl_Obj* objPtr) nothrow tk_FreeStyleFromObj;
	extern(C) Tk_StyledElement function(Tk_Style style, int elementId, Tk_OptionTable optionTable) nothrow tk_GetStyledElement;
	extern(C) void function(Tk_Style style, Tk_StyledElement element, void* recordPtr, Tk_Window tkwin, int width, int height, int inner, int* widthPtr, int* heightPtr) nothrow tk_GetElementSize;
	extern(C) void function(Tk_Style style, Tk_StyledElement element, void* recordPtr, Tk_Window tkwin, int x, int y, int width, int height, int inner, int* xPtr, int* yPtr, int* widthPtr, int* heightPtr) nothrow tk_GetElementBox;
	extern(C) int function(Tk_Style style, Tk_StyledElement element, void* recordPtr, Tk_Window tkwin) nothrow tk_GetElementBorderWidth;
	extern(C) void function(Tk_Style style, Tk_StyledElement element, void* recordPtr, Tk_Window tkwin, Drawable d, int x, int y, int width, int height, int state) nothrow tk_DrawElement;
	extern(C) int function(Tcl_Interp* interp, Tk_PhotoHandle handle, int width, int height) nothrow tk_PhotoExpand;
	extern(C) int function(Tcl_Interp* interp, Tk_PhotoHandle handle, Tk_PhotoImageBlock* blockPtr, int x, int y, int width, int height, int compRule) nothrow tk_PhotoPutBlock;
	extern(C) int function(Tcl_Interp* interp, Tk_PhotoHandle handle, Tk_PhotoImageBlock* blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY, int compRule) nothrow tk_PhotoPutZoomedBlock;
	extern(C) int function(Tcl_Interp* interp, Tk_PhotoHandle handle, int width, int height) nothrow tk_PhotoSetSize;
	extern(C) c_long function(Display* dpy) nothrow tk_GetUserInactiveTime;
	extern(C) void function(Display* dpy) nothrow tk_ResetUserInactiveTime;
	extern(C) Tcl_Interp* function(Tk_Window tkwin) nothrow tk_Interp;
	extern(C) void function(Tk_ImageType* typePtr) nothrow tk_CreateOldImageType;
	extern(C) void function(Tk_PhotoImageFormat *formatPtr) nothrow tk_CreateOldPhotoImageFormat;
}

extern(C) shared TkStubs* tkStubsPtr;
