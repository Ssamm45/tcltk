module tcltk.tcldecls;

import core.stdc.config;
import core.stdc.stdarg;
import tcltk.tcl;

/*
 * Exported function declarations:
 */
extern(C) int Tcl_PkgProvideEx(Tcl_Interp* interp, const char* name, const char* version_, ClientData clientData) nothrow;
extern(C) char* Tcl_PkgRequireEx(Tcl_Interp* interp, const char* name, const char* version_, int exact, ClientData* clientDataPtr) nothrow;
extern(C) void Tcl_Panic(const char* format, ...) nothrow;
extern(C) char* Tcl_Alloc(uint size) nothrow;
extern(C) void Tcl_Free(char* ptr) nothrow;
extern(C) char* Tcl_Realloc(char* ptr, uint size) nothrow;
extern(C) char* Tcl_DbCkalloc(uint size, const char* file, int line) nothrow;
extern(C) int Tcl_DbCkfree(char* ptr, const char* file, int line) nothrow;
extern(C) char* Tcl_DbCkrealloc(char* ptr, uint size, const char* file, int line) nothrow;

version(Posix)
{
	extern(C) void Tcl_CreateFileHandler(int fd, int mask, Tcl_FileProc proc, ClientData clientData) nothrow;
}

version(Posix)
{
	extern(C) void Tcl_DeleteFileHandler(int fd) nothrow;
}

extern(C) void Tcl_SetTimer(Tcl_Time* timePtr) nothrow;
extern(C) void Tcl_Sleep(int ms) nothrow;
extern(C) int Tcl_WaitForEvent(Tcl_Time* timePtr) nothrow;
extern(C) int Tcl_AppendAllObjTypes(Tcl_Interp* interp, Tcl_Obj* objPtr) nothrow;
extern(C) void Tcl_AppendStringsToObj(Tcl_Obj* objPtr, ...) nothrow;
extern(C) void Tcl_AppendToObj(Tcl_Obj* objPtr, const char* bytes, int length) nothrow;
extern(C) Tcl_Obj* Tcl_ConcatObj(int objc, const Tcl_Obj[]* objv) nothrow;
extern(C) int Tcl_ConvertToType(Tcl_Interp* interp, Tcl_Obj* objPtr, Tcl_ObjType* typePtr) nothrow;
extern(C) void Tcl_DbDecrRefCount(Tcl_Obj* objPtr, const char* file, int line) nothrow;
extern(C) void Tcl_DbIncrRefCount(Tcl_Obj* objPtr, const char* file, int line) nothrow;
extern(C) int Tcl_DbIsShared(Tcl_Obj* objPtr, const char* file, int line) nothrow;
extern(C) Tcl_Obj* Tcl_DbNewBooleanObj(int boolValue, const char* file, int line) nothrow;
extern(C) Tcl_Obj* Tcl_DbNewByteArrayObj(const ubyte* bytes, int length, const char* file, int line) nothrow;
extern(C) Tcl_Obj* Tcl_DbNewDoubleObj(double doubleValue, const char* file, int line) nothrow;
extern(C) Tcl_Obj* Tcl_DbNewListObj(int objc, const Tcl_Obj[]* objv, const char* file, int line) nothrow;
extern(C) Tcl_Obj* Tcl_DbNewLongObj(c_long longValue, const char* file, int line) nothrow;
extern(C) Tcl_Obj* Tcl_DbNewObj(const char* file, int line) nothrow;
extern(C) Tcl_Obj* Tcl_DbNewStringObj(const char* bytes, int length, const char* file, int line) nothrow;
extern(C) Tcl_Obj* Tcl_DuplicateObj(Tcl_Obj* objPtr) nothrow;
extern(C) void TclFreeObj(Tcl_Obj* objPtr) nothrow;
extern(C) int Tcl_GetBoolean(Tcl_Interp* interp, const char* src, int* boolPtr) nothrow;
extern(C) int Tcl_GetBooleanFromObj(Tcl_Interp* interp, Tcl_Obj* objPtr, int* boolPtr) nothrow;
extern(C) byte* Tcl_GetByteArrayFromObj(Tcl_Obj* objPtr, int* lengthPtr) nothrow;
extern(C) int Tcl_GetDouble(Tcl_Interp* interp, const char* src, double* doublePtr) nothrow;
extern(C) int Tcl_GetDoubleFromObj(Tcl_Interp* interp, Tcl_Obj* objPtr, double* doublePtr) nothrow;
extern(C) int Tcl_GetIndexFromObj(Tcl_Interp* interp, Tcl_Obj* objPtr, const char** tablePtr, const char* msg, int flags, int* indexPtr) nothrow;
extern(C) int Tcl_GetInt(Tcl_Interp* interp, const char* src, int* intPtr) nothrow;
extern(C) int Tcl_GetIntFromObj(Tcl_Interp* interp, Tcl_Obj* objPtr, int* intPtr) nothrow;
extern(C) int Tcl_GetLongFromObj(Tcl_Interp* interp, Tcl_Obj* objPtr, c_long* longPtr) nothrow;
extern(C) Tcl_ObjType* Tcl_GetObjType(const char* typeName) nothrow;
extern(C) char* Tcl_GetStringFromObj(Tcl_Obj* objPtr, int* lengthPtr) nothrow;
extern(C) void Tcl_InvalidateStringRep(Tcl_Obj* objPtr) nothrow;
extern(C) int Tcl_ListObjAppendList(Tcl_Interp* interp, Tcl_Obj* listPtr, Tcl_Obj* elemListPtr) nothrow;
extern(C) int Tcl_ListObjAppendElement(Tcl_Interp* interp, Tcl_Obj* listPtr, Tcl_Obj* objPtr) nothrow;
extern(C) int Tcl_ListObjGetElements(Tcl_Interp* interp, Tcl_Obj* listPtr, int* objcPtr, Tcl_Obj*** objvPtr) nothrow;
extern(C) int Tcl_ListObjIndex(Tcl_Interp* interp, Tcl_Obj* listPtr, int index, Tcl_Obj** objPtrPtr) nothrow;
extern(C) int Tcl_ListObjLength(Tcl_Interp* interp, Tcl_Obj* listPtr, int* lengthPtr) nothrow;
extern(C) int Tcl_ListObjReplace(Tcl_Interp* interp, Tcl_Obj* listPtr, int first, int count, int objc, const Tcl_Obj[]* objv) nothrow;
extern(C) Tcl_Obj* Tcl_NewBooleanObj(int boolValue) nothrow;
extern(C) Tcl_Obj* Tcl_NewByteArrayObj(const ubyte* bytes, int length) nothrow;
extern(C) Tcl_Obj* Tcl_NewDoubleObj(double doubleValue) nothrow;
extern(C) Tcl_Obj* Tcl_NewIntObj(int intValue) nothrow;
extern(C) Tcl_Obj* Tcl_NewListObj(int objc, const Tcl_Obj[]* objv) nothrow;
extern(C) Tcl_Obj* Tcl_NewLongObj(c_long longValue) nothrow;
extern(C) Tcl_Obj* Tcl_NewObj() nothrow;
extern(C) Tcl_Obj* Tcl_NewStringObj(const char* bytes, int length) nothrow;
extern(C) void Tcl_SetBooleanObj(Tcl_Obj* objPtr, int boolValue) nothrow;
extern(C) byte* Tcl_SetByteArrayLength(Tcl_Obj* objPtr, int length) nothrow;
extern(C) void Tcl_SetByteArrayObj(Tcl_Obj* objPtr, const ubyte* bytes, int length) nothrow;
extern(C) void Tcl_SetDoubleObj(Tcl_Obj* objPtr, double doubleValue) nothrow;
extern(C) void Tcl_SetIntObj(Tcl_Obj* objPtr, int intValue) nothrow;
extern(C) void Tcl_SetListObj(Tcl_Obj* objPtr, int objc, const Tcl_Obj[]* objv) nothrow;
extern(C) void Tcl_SetLongObj(Tcl_Obj* objPtr, c_long longValue) nothrow;
extern(C) void Tcl_SetObjLength(Tcl_Obj* objPtr, int length) nothrow;
extern(C) void Tcl_SetStringObj(Tcl_Obj* objPtr, const char* bytes, int length) nothrow;
extern(C) void Tcl_AddErrorInfo(Tcl_Interp* interp, const char* message) nothrow;
extern(C) void Tcl_AddObjErrorInfo(Tcl_Interp* interp, const char* message, int length) nothrow;
extern(C) void Tcl_AllowExceptions(Tcl_Interp* interp) nothrow;
extern(C) void Tcl_AppendElement(Tcl_Interp* interp, const char* element) nothrow;
extern(C) void Tcl_AppendResult(Tcl_Interp* interp, ...) nothrow;
extern(C) Tcl_AsyncHandler  Tcl_AsyncCreate(Tcl_AsyncProc proc, ClientData clientData) nothrow;
extern(C) void Tcl_AsyncDelete(Tcl_AsyncHandler async) nothrow;
extern(C) int Tcl_AsyncInvoke(Tcl_Interp* interp, int code) nothrow;
extern(C) void Tcl_AsyncMark(Tcl_AsyncHandler async) nothrow;
extern(C) int Tcl_AsyncReady() nothrow;
extern(C) void Tcl_BackgroundError(Tcl_Interp* interp) nothrow;
extern(C) char Tcl_Backslash(const char* src, int* readPtr) nothrow;
extern(C) int Tcl_BadChannelOption(Tcl_Interp* interp, const char* optionName, const char* optionList) nothrow;
extern(C) void Tcl_CallWhenDeleted(Tcl_Interp* interp, Tcl_InterpDeleteProc proc, ClientData clientData) nothrow;
extern(C) void Tcl_CancelIdleCall(Tcl_IdleProc idleProc, ClientData clientData) nothrow;
extern(C) int Tcl_Close(Tcl_Interp* interp, Tcl_Channel chan) nothrow;
extern(C) int Tcl_CommandComplete(const char* cmd) nothrow;
extern(C) char* Tcl_Concat(int argc, const char** argv) nothrow;
extern(C) int Tcl_ConvertElement(const char* src, char* dst, int flags) nothrow;
extern(C) int Tcl_ConvertCountedElement(const char* src, int length, char* dst, int flags) nothrow;
extern(C) int Tcl_CreateAlias(Tcl_Interp* slave, const char* slaveCmd, Tcl_Interp* target, const char* targetCmd, int argc, const char** argv) nothrow;
extern(C) int Tcl_CreateAliasObj(Tcl_Interp* slave, const char* slaveCmd, Tcl_Interp* target, const char* targetCmd, int objc, const Tcl_Obj[]* objv) nothrow;
extern(C) Tcl_Channel Tcl_CreateChannel(Tcl_ChannelType* typePtr, const char* chanName, ClientData instanceData, int mask) nothrow;
extern(C) void Tcl_CreateChannelHandler(Tcl_Channel chan, int mask, Tcl_ChannelProc proc, ClientData clientData) nothrow;
extern(C) void Tcl_CreateCloseHandler(Tcl_Channel chan, Tcl_CloseProc proc, ClientData clientData) nothrow;
extern(C) Tcl_Command Tcl_CreateCommand(Tcl_Interp* interp, const char* cmdName, Tcl_CmdProc proc, ClientData clientData, Tcl_CmdDeleteProc deleteProc) nothrow;
extern(C) void Tcl_CreateEventSource(Tcl_EventSetupProc setupProc, Tcl_EventCheckProc checkProc, ClientData clientData) nothrow;
extern(C) void Tcl_CreateExitHandler(Tcl_ExitProc proc, ClientData clientData) nothrow;
extern(C) Tcl_Interp* Tcl_CreateInterp() nothrow;
extern(C) void Tcl_CreateMathFunc(Tcl_Interp* interp, const char* name, int numArgs, Tcl_ValueType* argTypes, Tcl_MathProc proc, ClientData clientData) nothrow;
extern(C) Tcl_Command Tcl_CreateObjCommand(Tcl_Interp* interp, const char* cmdName, Tcl_ObjCmdProc proc, ClientData clientData, Tcl_CmdDeleteProc deleteProc) nothrow;
extern(C) Tcl_Interp* Tcl_CreateSlave(Tcl_Interp* interp, const char* slaveName, int isSafe) nothrow;
extern(C) Tcl_TimerToken Tcl_CreateTimerHandler(int milliseconds, Tcl_TimerProc proc, ClientData clientData) nothrow;
extern(C) Tcl_Trace Tcl_CreateTrace(Tcl_Interp* interp, int level, Tcl_CmdTraceProc proc, ClientData clientData) nothrow;
extern(C) void Tcl_DeleteAssocData(Tcl_Interp* interp, const char* name) nothrow;
extern(C) void Tcl_DeleteChannelHandler(Tcl_Channel chan, Tcl_ChannelProc proc, ClientData clientData) nothrow;
extern(C) void Tcl_DeleteCloseHandler(Tcl_Channel chan, Tcl_CloseProc proc, ClientData clientData) nothrow;
extern(C) int Tcl_DeleteCommand(Tcl_Interp* interp, const char* cmdName) nothrow;
extern(C) int Tcl_DeleteCommandFromToken(Tcl_Interp* interp, Tcl_Command command) nothrow;
extern(C) void Tcl_DeleteEvents(Tcl_EventDeleteProc proc, ClientData clientData) nothrow;
extern(C) void Tcl_DeleteEventSource(Tcl_EventSetupProc setupProc, Tcl_EventCheckProc checkProc, ClientData clientData) nothrow;
extern(C) void Tcl_DeleteExitHandler(Tcl_ExitProc proc, ClientData clientData) nothrow;
extern(C) void Tcl_DeleteHashEntry(Tcl_HashEntry* entryPtr) nothrow;
extern(C) void Tcl_DeleteHashTable(Tcl_HashTable* tablePtr) nothrow;
extern(C) void Tcl_DeleteInterp(Tcl_Interp* interp) nothrow;
extern(C) void Tcl_DetachPids(int numPids, Tcl_Pid* pidPtr) nothrow;
extern(C) void Tcl_DeleteTimerHandler(Tcl_TimerToken token) nothrow;
extern(C) void Tcl_DeleteTrace(Tcl_Interp* interp, Tcl_Trace trace) nothrow;
extern(C) void Tcl_DontCallWhenDeleted(Tcl_Interp* interp, Tcl_InterpDeleteProc proc, ClientData clientData) nothrow;
extern(C) int Tcl_DoOneEvent(int flags) nothrow;
extern(C) void Tcl_DoWhenIdle(Tcl_IdleProc proc, ClientData clientData) nothrow;
extern(C) char* Tcl_DStringAppend(Tcl_DString* dsPtr, const char* bytes, int length) nothrow;
extern(C) char* Tcl_DStringAppendElement(Tcl_DString* dsPtr, const char* element) nothrow;
extern(C) void Tcl_DStringEndSublist(Tcl_DString* dsPtr) nothrow;
extern(C) void Tcl_DStringFree(Tcl_DString* dsPtr) nothrow;
extern(C) void Tcl_DStringGetResult(Tcl_Interp* interp, Tcl_DString* dsPtr) nothrow;
extern(C) void Tcl_DStringInit(Tcl_DString* dsPtr) nothrow;
extern(C) void Tcl_DStringResult(Tcl_Interp* interp, Tcl_DString* dsPtr) nothrow;
extern(C) void Tcl_DStringSetLength(Tcl_DString* dsPtr, int length) nothrow;
extern(C) void Tcl_DStringStartSublist(Tcl_DString* dsPtr) nothrow;
extern(C) int Tcl_Eof(Tcl_Channel chan) nothrow;
extern(C) char* Tcl_ErrnoId() nothrow;
extern(C) char* Tcl_ErrnoMsg(int err) nothrow;
extern(C) int Tcl_Eval(Tcl_Interp* interp, const char* script) nothrow;
extern(C) int Tcl_EvalFile(Tcl_Interp* interp, const char* fileName) nothrow;
extern(C) int Tcl_EvalObj(Tcl_Interp* interp, Tcl_Obj* objPtr) nothrow;
extern(C) void Tcl_EventuallyFree(ClientData clientData, Tcl_FreeProc freeProc) nothrow;
extern(C) void Tcl_Exit(int status) nothrow;
extern(C) int Tcl_ExposeCommand(Tcl_Interp* interp, const char* hiddenCmdToken, const char* cmdName) nothrow;
extern(C) int Tcl_ExprBoolean(Tcl_Interp* interp, const char* expr, int* ptr) nothrow;
extern(C) int Tcl_ExprBooleanObj(Tcl_Interp* interp, Tcl_Obj* objPtr, int* ptr) nothrow;
extern(C) int Tcl_ExprDouble(Tcl_Interp* interp, const char* expr, double* ptr) nothrow;
extern(C) int Tcl_ExprDoubleObj(Tcl_Interp* interp, Tcl_Obj* objPtr, double* ptr) nothrow;
extern(C) int Tcl_ExprLong(Tcl_Interp* interp, const char* expr, c_long* ptr) nothrow;
extern(C) int Tcl_ExprLongObj(Tcl_Interp* interp, Tcl_Obj* objPtr, c_long* ptr) nothrow;
extern(C) int Tcl_ExprObj(Tcl_Interp* interp, Tcl_Obj* objPtr, Tcl_Obj** resultPtrPtr) nothrow;
extern(C) int Tcl_ExprString(Tcl_Interp* interp, const char* expr) nothrow;
extern(C) void Tcl_Finalize() nothrow;
extern(C) void Tcl_FindExecutable(const char* argv0) nothrow;
extern(C) Tcl_HashEntry* Tcl_FirstHashEntry(Tcl_HashTable* tablePtr, Tcl_HashSearch* searchPtr) nothrow;
extern(C) int Tcl_Flush(Tcl_Channel chan) nothrow;
extern(C) void Tcl_FreeResult(Tcl_Interp* interp) nothrow;
extern(C) int Tcl_GetAlias(Tcl_Interp* interp, const char* slaveCmd, Tcl_Interp** targetInterpPtr, const char** targetCmdPtr, int* argcPtr, const char*** argvPtr) nothrow;
extern(C) int Tcl_GetAliasObj(Tcl_Interp* interp, const char* slaveCmd, Tcl_Interp** targetInterpPtr, const char** targetCmdPtr, int* objcPtr, Tcl_Obj*** objv) nothrow;
extern(C) ClientData Tcl_GetAssocData(Tcl_Interp* interp, const char* name, Tcl_InterpDeleteProc* procPtr) nothrow;
extern(C) Tcl_Channel Tcl_GetChannel(Tcl_Interp* interp, const char* chanName, int* modePtr) nothrow;
extern(C) int Tcl_GetChannelBufferSize(Tcl_Channel chan) nothrow;
extern(C) int Tcl_GetChannelHandle(Tcl_Channel chan, int direction, ClientData* handlePtr) nothrow;
extern(C) ClientData Tcl_GetChannelInstanceData(Tcl_Channel chan) nothrow;
extern(C) int Tcl_GetChannelMode(Tcl_Channel chan) nothrow;
extern(C) char* Tcl_GetChannelName(Tcl_Channel chan) nothrow;
extern(C) int Tcl_GetChannelOption(Tcl_Interp* interp, Tcl_Channel chan, const char* optionName, Tcl_DString* dsPtr) nothrow;
extern(C) Tcl_ChannelType* Tcl_GetChannelType(Tcl_Channel chan) nothrow;
extern(C) int Tcl_GetCommandInfo(Tcl_Interp* interp, const char* cmdName, Tcl_CmdInfo* infoPtr) nothrow;
extern(C) char* Tcl_GetCommandName(Tcl_Interp* interp, Tcl_Command command) nothrow;
extern(C) int Tcl_GetErrno() nothrow;
extern(C) char* Tcl_GetHostName() nothrow;
extern(C) int Tcl_GetInterpPath(Tcl_Interp* askInterp, Tcl_Interp* slaveInterp) nothrow;
extern(C) Tcl_Interp* Tcl_GetMaster(Tcl_Interp* interp) nothrow;
extern(C) char* Tcl_GetNameOfExecutable() nothrow;
extern(C) Tcl_Obj* Tcl_GetObjResult(Tcl_Interp* interp) nothrow;

version(Posix)
{
	extern(C) int Tcl_GetOpenFile(Tcl_Interp* interp, const char* chanID, int forWriting, int checkUsage, ClientData* filePtr) nothrow;
}

extern(C) Tcl_PathType Tcl_GetPathType(const char* path) nothrow;
extern(C) int Tcl_Gets(Tcl_Channel chan, Tcl_DString* dsPtr) nothrow;
extern(C) int Tcl_GetsObj(Tcl_Channel chan, Tcl_Obj* objPtr) nothrow;
extern(C) int Tcl_GetServiceMode() nothrow;
extern(C) Tcl_Interp* Tcl_GetSlave(Tcl_Interp* interp, const char* slaveName) nothrow;
extern(C) Tcl_Channel Tcl_GetStdChannel(int type) nothrow;
extern(C) char* Tcl_GetStringResult(Tcl_Interp* interp) nothrow;
extern(C) char* Tcl_GetVar(Tcl_Interp* interp, const char* varName, int flags) nothrow;
extern(C) char* Tcl_GetVar2(Tcl_Interp* interp, const char* part1, const char* part2, int flags) nothrow;
extern(C) int Tcl_GlobalEval(Tcl_Interp* interp, const char* command) nothrow;
extern(C) int Tcl_GlobalEvalObj(Tcl_Interp* interp, Tcl_Obj* objPtr) nothrow;
extern(C) int Tcl_HideCommand(Tcl_Interp* interp, const char* cmdName, const char* hiddenCmdToken) nothrow;
extern(C) int Tcl_Init(Tcl_Interp* interp) nothrow;
extern(C) void Tcl_InitHashTable(Tcl_HashTable* tablePtr, int keyType) nothrow;
extern(C) int Tcl_InputBlocked(Tcl_Channel chan) nothrow;
extern(C) int Tcl_InputBuffered(Tcl_Channel chan) nothrow;
extern(C) int Tcl_InterpDeleted(Tcl_Interp* interp) nothrow;
extern(C) int Tcl_IsSafe(Tcl_Interp* interp) nothrow;
extern(C) char* Tcl_JoinPath(int argc, const char** argv, Tcl_DString* resultPtr) nothrow;
extern(C) int Tcl_LinkVar(Tcl_Interp* interp, const char* varName, char* addr, int type) nothrow;
extern(C) Tcl_Channel Tcl_MakeFileChannel(ClientData handle, int mode) nothrow;
extern(C) int Tcl_MakeSafe(Tcl_Interp* interp) nothrow;
extern(C) Tcl_Channel Tcl_MakeTcpClientChannel(ClientData tcpSocket) nothrow;
extern(C) char* Tcl_Merge(int argc, const char** argv) nothrow;
extern(C) Tcl_HashEntry* Tcl_NextHashEntry(Tcl_HashSearch* searchPtr) nothrow;
extern(C) void Tcl_NotifyChannel(Tcl_Channel channel, int mask) nothrow;
extern(C) Tcl_Obj* Tcl_ObjGetVar2(Tcl_Interp* interp, Tcl_Obj* part1Ptr, Tcl_Obj* part2Ptr, int flags) nothrow;
extern(C) Tcl_Obj* Tcl_ObjSetVar2(Tcl_Interp* interp, Tcl_Obj* part1Ptr, Tcl_Obj* part2Ptr, Tcl_Obj* newValuePtr, int flags) nothrow;
extern(C) Tcl_Channel Tcl_OpenCommandChannel(Tcl_Interp* interp, int argc, const char** argv, int flags) nothrow;
extern(C) Tcl_Channel Tcl_OpenFileChannel(Tcl_Interp* interp, const char* fileName, const char* modeString, int permissions) nothrow;
extern(C) Tcl_Channel Tcl_OpenTcpClient(Tcl_Interp* interp, int port, const char* address, const char* myaddr, int myport, int async) nothrow;
extern(C) Tcl_Channel Tcl_OpenTcpServer(Tcl_Interp* interp, int port, const char* host, Tcl_TcpAcceptProc acceptProc, ClientData callbackData) nothrow;
extern(C) void Tcl_Preserve(ClientData data) nothrow;
extern(C) void Tcl_PrintDouble(Tcl_Interp* interp, double value, char* dst) nothrow;
extern(C) int Tcl_PutEnv(const char* assignment) nothrow;
extern(C) char* Tcl_PosixError(Tcl_Interp* interp) nothrow;
extern(C) void Tcl_QueueEvent(Tcl_Event* evPtr, Tcl_QueuePosition position) nothrow;
extern(C) int Tcl_Read(Tcl_Channel chan, char* bufPtr, int toRead) nothrow;
extern(C) void Tcl_ReapDetachedProcs() nothrow;
extern(C) int Tcl_RecordAndEval(Tcl_Interp* interp, const char* cmd, int flags) nothrow;
extern(C) int Tcl_RecordAndEvalObj(Tcl_Interp* interp, Tcl_Obj* cmdPtr, int flags) nothrow;
extern(C) void Tcl_RegisterChannel(Tcl_Interp* interp, Tcl_Channel chan) nothrow;
extern(C) void Tcl_RegisterObjType(Tcl_ObjType* typePtr) nothrow;
extern(C) Tcl_RegExp Tcl_RegExpCompile(Tcl_Interp* interp, const char* pattern) nothrow;
extern(C) int Tcl_RegExpExec(Tcl_Interp* interp, Tcl_RegExp regexp, const char* text, const char* start) nothrow;
extern(C) int Tcl_RegExpMatch(Tcl_Interp* interp, const char* text, const char* pattern) nothrow;
extern(C) void Tcl_RegExpRange(Tcl_RegExp regexp, int index, const char** startPtr, const char** endPtr) nothrow;
extern(C) void Tcl_Release(ClientData clientData) nothrow;
extern(C) void Tcl_ResetResult(Tcl_Interp* interp) nothrow;
extern(C) int Tcl_ScanElement(const char* src, int* flagPtr) nothrow;
extern(C) int Tcl_ScanCountedElement(const char* src, int length, int* flagPtr) nothrow;
extern(C) int Tcl_SeekOld(Tcl_Channel chan, int offset, int mode) nothrow;
extern(C) int Tcl_ServiceAll() nothrow;
extern(C) int Tcl_ServiceEvent(int flags) nothrow;
extern(C) void Tcl_SetAssocData(Tcl_Interp* interp, const char* name, Tcl_InterpDeleteProc proc, ClientData clientData) nothrow;
extern(C) void Tcl_SetChannelBufferSize(Tcl_Channel chan, int sz) nothrow;
extern(C) int Tcl_SetChannelOption(Tcl_Interp* interp, Tcl_Channel chan, const char* optionName, const char* newValue) nothrow;
extern(C) int Tcl_SetCommandInfo(Tcl_Interp* interp, const char* cmdName, const Tcl_CmdInfo* infoPtr) nothrow;
extern(C) void Tcl_SetErrno(int err) nothrow;
extern(C) void Tcl_SetErrorCode(Tcl_Interp* interp, ...) nothrow;
extern(C) void Tcl_SetMaxBlockTime(Tcl_Time* timePtr) nothrow;
extern(C) void Tcl_SetPanicProc(Tcl_PanicProc panicProc) nothrow;
extern(C) int Tcl_SetRecursionLimit(Tcl_Interp* interp, int depth) nothrow;
extern(C) void Tcl_SetResult(Tcl_Interp* interp, char* result, Tcl_FreeProc freeProc) nothrow;
extern(C) int Tcl_SetServiceMode(int mode) nothrow;
extern(C) void Tcl_SetObjErrorCode(Tcl_Interp* interp, Tcl_Obj* errorObjPtr) nothrow;
extern(C) void Tcl_SetObjResult(Tcl_Interp* interp, Tcl_Obj* resultObjPtr) nothrow;
extern(C) void Tcl_SetStdChannel(Tcl_Channel channel, int type) nothrow;
extern(C) char* Tcl_SetVar(Tcl_Interp* interp, const char* varName, const char* newValue, int flags) nothrow;
extern(C) char* Tcl_SetVar2(Tcl_Interp* interp, const char* part1, const char* part2, const char* newValue, int flags) nothrow;
extern(C) char* Tcl_SignalId(int sig) nothrow;
extern(C) char* Tcl_SignalMsg(int sig) nothrow;
extern(C) void Tcl_SourceRCFile(Tcl_Interp* interp) nothrow;
extern(C) int Tcl_SplitList(Tcl_Interp* interp, const char* listStr, int* argcPtr, const char*** argvPtr) nothrow;
extern(C) void Tcl_SplitPath(const char* path, int* argcPtr, const char*** argvPtr) nothrow;
extern(C) void Tcl_StaticPackage(Tcl_Interp* interp, const char* pkgName, Tcl_PackageInitProc initProc, Tcl_PackageInitProc safeInitProc) nothrow;
extern(C) int Tcl_StringMatch(const char* str, const char* pattern) nothrow;
extern(C) int Tcl_TellOld(Tcl_Channel chan) nothrow;
extern(C) int Tcl_TraceVar(Tcl_Interp* interp, const char* varName, int flags, Tcl_VarTraceProc proc, ClientData clientData) nothrow;
extern(C) int Tcl_TraceVar2(Tcl_Interp* interp, const char* part1, const char* part2, int flags, Tcl_VarTraceProc proc, ClientData clientData) nothrow;
extern(C) char* Tcl_TranslateFileName(Tcl_Interp* interp, const char* name, Tcl_DString* bufferPtr) nothrow;
extern(C) int Tcl_Ungets(Tcl_Channel chan, const char* str, int len, int atHead) nothrow;
extern(C) void Tcl_UnlinkVar(Tcl_Interp* interp, const char* varName) nothrow;
extern(C) int Tcl_UnregisterChannel(Tcl_Interp* interp, Tcl_Channel chan) nothrow;
extern(C) int Tcl_UnsetVar(Tcl_Interp* interp, const char* varName, int flags) nothrow;
extern(C) int Tcl_UnsetVar2(Tcl_Interp* interp, const char* part1, const char* part2, int flags) nothrow;
extern(C) void Tcl_UntraceVar(Tcl_Interp* interp, const char* varName, int flags, Tcl_VarTraceProc proc, ClientData clientData) nothrow;
extern(C) void Tcl_UntraceVar2(Tcl_Interp* interp, const char* part1, const char* part2, int flags, Tcl_VarTraceProc proc, ClientData clientData) nothrow;
extern(C) void Tcl_UpdateLinkedVar(Tcl_Interp* interp, const char* varName) nothrow;
extern(C) int Tcl_UpVar(Tcl_Interp* interp, const char* frameName, const char* varName, const char* localName, int flags) nothrow;
extern(C) int Tcl_UpVar2(Tcl_Interp* interp, const char* frameName, const char* part1, const char* part2, const char* localName, int flags) nothrow;
extern(C) int Tcl_VarEval(Tcl_Interp* interp, ...) nothrow;
extern(C) ClientData Tcl_VarTraceInfo(Tcl_Interp* interp, const char* varName, int flags, Tcl_VarTraceProc procPtr, ClientData prevClientData) nothrow;
extern(C) ClientData Tcl_VarTraceInfo2(Tcl_Interp* interp, const char* part1, const char* part2, int flags, Tcl_VarTraceProc procPtr, ClientData prevClientData) nothrow;
extern(C) int Tcl_Write(Tcl_Channel chan, const char* s, int slen) nothrow;
extern(C) void Tcl_WrongNumArgs(Tcl_Interp* interp, int objc, const Tcl_Obj[]* objv, const char* message) nothrow;
extern(C) int Tcl_DumpActiveMemory(const char* fileName) nothrow;
extern(C) void Tcl_ValidateAllMemory(const char* file, int line) nothrow;
extern(C) void Tcl_AppendResultVA(Tcl_Interp* interp, va_list argList) nothrow;
extern(C) void Tcl_AppendStringsToObjVA(Tcl_Obj* objPtr, va_list argList) nothrow;
extern(C) char* Tcl_HashStats(Tcl_HashTable* tablePtr) nothrow;
extern(C) char* Tcl_ParseVar(Tcl_Interp* interp, const char* start, const char** termPtr) nothrow;
extern(C) char* Tcl_PkgPresent(Tcl_Interp* interp, const char* name, const char* version_, int exact) nothrow;
extern(C) char* Tcl_PkgPresentEx(Tcl_Interp* interp, const char* name, const char* version_, int exact, ClientData* clientDataPtr) nothrow;
extern(C) int Tcl_PkgProvide(Tcl_Interp* interp, const char* name, const char* version_) nothrow;
extern(C) char* Tcl_PkgRequire(Tcl_Interp* interp, const char* name, const char* version_, int exact) nothrow;
extern(C) void Tcl_SetErrorCodeVA(Tcl_Interp* interp, va_list argList) nothrow;
extern(C) int Tcl_VarEvalVA(Tcl_Interp* interp, va_list argList) nothrow;
extern(C) Tcl_Pid Tcl_WaitPid(Tcl_Pid pid, int* statPtr, int options) nothrow;
extern(C) void Tcl_PanicVA(const char* format, va_list argList) nothrow;
extern(C) void Tcl_GetVersion(int* major, int* minor, int* patchLevel, int* type) nothrow;
extern(C) void Tcl_InitMemory(Tcl_Interp* interp) nothrow;
extern(C) Tcl_Channel Tcl_StackChannel(Tcl_Interp* interp, Tcl_ChannelType* typePtr, ClientData instanceData, int mask, Tcl_Channel prevChan) nothrow;
extern(C) int Tcl_UnstackChannel(Tcl_Interp* interp, Tcl_Channel chan) nothrow;
extern(C) Tcl_Channel Tcl_GetStackedChannel(Tcl_Channel chan) nothrow;
extern(C) void Tcl_SetMainLoop(Tcl_MainLoopProc proc) nothrow;
extern(C) void Tcl_AppendObjToObj(Tcl_Obj* objPtr, Tcl_Obj* appendObjPtr) nothrow;
extern(C) Tcl_Encoding Tcl_CreateEncoding(const Tcl_EncodingType* typePtr) nothrow;
extern(C) void Tcl_CreateThreadExitHandler(Tcl_ExitProc proc, ClientData clientData) nothrow;
extern(C) void Tcl_DeleteThreadExitHandler(Tcl_ExitProc proc, ClientData clientData) nothrow;
extern(C) void Tcl_DiscardResult(Tcl_SavedResult* statePtr) nothrow;
extern(C) int Tcl_EvalEx(Tcl_Interp* interp, const char* script, int numBytes, int flags) nothrow;
extern(C) int Tcl_EvalObjv(Tcl_Interp* interp, int objc, const Tcl_Obj[]* objv, int flags) nothrow;
extern(C) int Tcl_EvalObjEx(Tcl_Interp* interp, Tcl_Obj* objPtr, int flags) nothrow;
extern(C) void Tcl_ExitThread(int status) nothrow;
extern(C) int Tcl_ExternalToUtf(Tcl_Interp* interp, Tcl_Encoding encoding, const char* src, int srcLen, int flags, Tcl_EncodingState* statePtr, char* dst, int dstLen, int* srcReadPtr, int* dstWrotePtr, int* dstCharsPtr) nothrow;
extern(C) char* Tcl_ExternalToUtfDString(Tcl_Encoding encoding, const char* src, int srcLen, Tcl_DString* dsPtr) nothrow;
extern(C) void Tcl_FinalizeThread() nothrow;
extern(C) void Tcl_FinalizeNotifier(ClientData clientData) nothrow;
extern(C) void Tcl_FreeEncoding(Tcl_Encoding encoding) nothrow;
extern(C) Tcl_ThreadId Tcl_GetCurrentThread() nothrow;
extern(C) Tcl_Encoding Tcl_GetEncoding(Tcl_Interp* interp, const char* name) nothrow;
extern(C) char* Tcl_GetEncodingName(Tcl_Encoding encoding) nothrow;
extern(C) void Tcl_GetEncodingNames(Tcl_Interp* interp) nothrow;
extern(C) int Tcl_GetIndexFromObjStruct(Tcl_Interp* interp, Tcl_Obj* objPtr, const void* tablePtr, int offset, const char* msg, int flags, int* indexPtr) nothrow;
extern(C) void* Tcl_GetThreadData(Tcl_ThreadDataKey* keyPtr, int size) nothrow;
extern(C) Tcl_Obj* Tcl_GetVar2Ex(Tcl_Interp* interp, const char* part1, const char* part2, int flags) nothrow;
extern(C) ClientData Tcl_InitNotifier() nothrow;
extern(C) void Tcl_MutexLock(Tcl_Mutex* mutexPtr) nothrow;
extern(C) void Tcl_MutexUnlock(Tcl_Mutex* mutexPtr) nothrow;
extern(C) void Tcl_ConditionNotify(Tcl_Condition* condPtr) nothrow;
extern(C) void Tcl_ConditionWait(Tcl_Condition* condPtr, Tcl_Mutex* mutexPtr, Tcl_Time* timePtr) nothrow;
extern(C) int Tcl_NumUtfChars(const char* src, int length) nothrow;
extern(C) int Tcl_ReadChars(Tcl_Channel channel, Tcl_Obj* objPtr, int charsToRead, int appendFlag) nothrow;
extern(C) void Tcl_RestoreResult(Tcl_Interp* interp, Tcl_SavedResult* statePtr) nothrow;
extern(C) void Tcl_SaveResult(Tcl_Interp* interp, Tcl_SavedResult* statePtr) nothrow;
extern(C) int Tcl_SetSystemEncoding(Tcl_Interp* interp, const char* name) nothrow;
extern(C) Tcl_Obj* Tcl_SetVar2Ex(Tcl_Interp* interp, const char* part1, const char* part2, Tcl_Obj* newValuePtr, int flags) nothrow;
extern(C) void Tcl_ThreadAlert(Tcl_ThreadId threadId) nothrow;
extern(C) void Tcl_ThreadQueueEvent(Tcl_ThreadId threadId, Tcl_Event* evPtr, Tcl_QueuePosition position) nothrow;
extern(C) Tcl_UniChar Tcl_UniCharAtIndex(const char* src, int index) nothrow;
extern(C) Tcl_UniChar Tcl_UniCharToLower(int ch) nothrow;
extern(C) Tcl_UniChar Tcl_UniCharToTitle(int ch) nothrow;
extern(C) Tcl_UniChar Tcl_UniCharToUpper(int ch) nothrow;
extern(C) int Tcl_UniCharToUtf(int ch, char* buf) nothrow;
extern(C) char* Tcl_UtfAtIndex(const char* src, int index) nothrow;
extern(C) int Tcl_UtfCharComplete(const char* src, int length) nothrow;
extern(C) int Tcl_UtfBackslash(const char* src, int* readPtr, char* dst) nothrow;
extern(C) char* Tcl_UtfFindFirst(const char* src, int ch) nothrow;
extern(C) char* Tcl_UtfFindLast(const char* src, int ch) nothrow;
extern(C) char* Tcl_UtfNext(const char* src) nothrow;
extern(C) char* Tcl_UtfPrev(const char* src, const char* start) nothrow;
extern(C) int Tcl_UtfToExternal(Tcl_Interp* interp, Tcl_Encoding encoding, const char* src, int srcLen, int flags, Tcl_EncodingState* statePtr, char* dst, int dstLen, int* srcReadPtr, int* dstWrotePtr, int* dstCharsPtr) nothrow;
extern(C) char* Tcl_UtfToExternalDString(Tcl_Encoding encoding, const char* src, int srcLen, Tcl_DString* dsPtr) nothrow;
extern(C) int Tcl_UtfToLower(char* src) nothrow;
extern(C) int Tcl_UtfToTitle(char* src) nothrow;
extern(C) int Tcl_UtfToUniChar(const char* src, Tcl_UniChar* chPtr) nothrow;
extern(C) int Tcl_UtfToUpper(char* src) nothrow;
extern(C) int Tcl_WriteChars(Tcl_Channel chan, const char* src, int srcLen) nothrow;
extern(C) int Tcl_WriteObj(Tcl_Channel chan, Tcl_Obj* objPtr) nothrow;
extern(C) char* Tcl_GetString(Tcl_Obj* objPtr) nothrow;
extern(C) char* Tcl_GetDefaultEncodingDir() nothrow;
extern(C) void Tcl_SetDefaultEncodingDir(const char* path) nothrow;
extern(C) void Tcl_AlertNotifier(ClientData clientData) nothrow;
extern(C) void Tcl_ServiceModeHook(int mode) nothrow;
extern(C) int Tcl_UniCharIsAlnum(int ch) nothrow;
extern(C) int Tcl_UniCharIsAlpha(int ch) nothrow;
extern(C) int Tcl_UniCharIsDigit(int ch) nothrow;
extern(C) int Tcl_UniCharIsLower(int ch) nothrow;
extern(C) int Tcl_UniCharIsSpace(int ch) nothrow;
extern(C) int Tcl_UniCharIsUpper(int ch) nothrow;
extern(C) int Tcl_UniCharIsWordChar(int ch) nothrow;
extern(C) int Tcl_UniCharLen(const Tcl_UniChar* uniStr) nothrow;
extern(C) int Tcl_UniCharNcmp(const Tcl_UniChar* ucs, const Tcl_UniChar* uct, c_ulong numChars) nothrow;
extern(C) char* Tcl_UniCharToUtfDString(const Tcl_UniChar* uniStr, int uniLength, Tcl_DString* dsPtr) nothrow;
extern(C) Tcl_UniChar* Tcl_UtfToUniCharDString(const char* src, int length, Tcl_DString* dsPtr) nothrow;
extern(C) Tcl_RegExp Tcl_GetRegExpFromObj(Tcl_Interp* interp, Tcl_Obj* patObj, int flags) nothrow;
extern(C) Tcl_Obj* Tcl_EvalTokens(Tcl_Interp* interp, Tcl_Token* tokenPtr, int count) nothrow;
extern(C) void Tcl_FreeParse(Tcl_Parse* parsePtr) nothrow;
extern(C) void Tcl_LogCommandInfo(Tcl_Interp* interp, const char* script, const char* command, int length) nothrow;
extern(C) int Tcl_ParseBraces(Tcl_Interp* interp, const char* start, int numBytes, Tcl_Parse* parsePtr, int append, const char** termPtr) nothrow;
extern(C) int Tcl_ParseCommand(Tcl_Interp* interp, const char* start, int numBytes, int nested, Tcl_Parse* parsePtr) nothrow;
extern(C) int Tcl_ParseExpr(Tcl_Interp* interp, const char* start, int numBytes, Tcl_Parse* parsePtr) nothrow;
extern(C) int Tcl_ParseQuotedString(Tcl_Interp* interp, const char* start, int numBytes, Tcl_Parse* parsePtr, int append, const char** termPtr) nothrow;
extern(C) int Tcl_ParseVarName(Tcl_Interp* interp, const char* start, int numBytes, Tcl_Parse* parsePtr, int append) nothrow;
extern(C) char* Tcl_GetCwd(Tcl_Interp* interp, Tcl_DString* cwdPtr) nothrow;
extern(C) int Tcl_Chdir(const char* dirName) nothrow;
extern(C) int Tcl_Access(const char* path, int mode) nothrow;
extern(C) int Tcl_Stat(const char* path, Tcl_StatBuf* bufPtr) nothrow;
extern(C) int Tcl_UtfNcmp(const char* s1, const char* s2, c_ulong n) nothrow;
extern(C) int Tcl_UtfNcasecmp(const char* s1, const char* s2, c_ulong n) nothrow;
extern(C) int Tcl_StringCaseMatch(const char* str, const char* pattern, int nocase) nothrow;
extern(C) int Tcl_UniCharIsControl(int ch) nothrow;
extern(C) int Tcl_UniCharIsGraph(int ch) nothrow;
extern(C) int Tcl_UniCharIsPrint(int ch) nothrow;
extern(C) int Tcl_UniCharIsPunct(int ch) nothrow;
extern(C) int Tcl_RegExpExecObj(Tcl_Interp* interp, Tcl_RegExp regexp, Tcl_Obj* textObj, int offset, int nmatches, int flags) nothrow;
extern(C) void Tcl_RegExpGetInfo(Tcl_RegExp regexp, Tcl_RegExpInfo* infoPtr) nothrow;
extern(C) Tcl_Obj* Tcl_NewUnicodeObj(const Tcl_UniChar* unicode, int numChars) nothrow;
extern(C) void Tcl_SetUnicodeObj(Tcl_Obj* objPtr, const Tcl_UniChar* unicode, int numChars) nothrow;
extern(C) int Tcl_GetCharLength(Tcl_Obj* objPtr) nothrow;
extern(C) Tcl_UniChar Tcl_GetUniChar(Tcl_Obj* objPtr, int index) nothrow;
extern(C) Tcl_UniChar* Tcl_GetUnicode(Tcl_Obj* objPtr) nothrow;
extern(C) Tcl_Obj* Tcl_GetRange(Tcl_Obj* objPtr, int first, int last) nothrow;
extern(C) void Tcl_AppendUnicodeToObj(Tcl_Obj* objPtr, const Tcl_UniChar* unicode, int length) nothrow;
extern(C) int Tcl_RegExpMatchObj(Tcl_Interp* interp, Tcl_Obj* textObj, Tcl_Obj* patternObj) nothrow;
extern(C) void Tcl_SetNotifier(Tcl_NotifierProcs notifierProcPtr) nothrow;
extern(C) Tcl_Mutex* Tcl_GetAllocMutex() nothrow;
extern(C) int Tcl_GetChannelNames(Tcl_Interp* interp) nothrow;
extern(C) int Tcl_GetChannelNamesEx(Tcl_Interp* interp, const char* pattern) nothrow;
extern(C) int Tcl_ProcObjCmd(ClientData clientData, Tcl_Interp* interp, int objc, const Tcl_Obj[]* objv) nothrow;
extern(C) void Tcl_ConditionFinalize(Tcl_Condition* condPtr) nothrow;
extern(C) void Tcl_MutexFinalize(Tcl_Mutex* mutex) nothrow;
extern(C) int Tcl_CreateThread(Tcl_ThreadId* idPtr, Tcl_ThreadCreateProc proc, ClientData clientData, int stackSize, int flags) nothrow;
extern(C) int Tcl_ReadRaw(Tcl_Channel chan, char* dst, int bytesToRead) nothrow;
extern(C) int Tcl_WriteRaw(Tcl_Channel chan, const char* src, int srcLen) nothrow;
extern(C) Tcl_Channel Tcl_GetTopChannel(Tcl_Channel chan) nothrow;
extern(C) int Tcl_ChannelBuffered(Tcl_Channel chan) nothrow;
extern(C) char* Tcl_ChannelName(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) Tcl_ChannelTypeVersion Tcl_ChannelVersion(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) Tcl_DriverBlockModeProc Tcl_ChannelBlockModeProc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) Tcl_DriverCloseProc Tcl_ChannelCloseProc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) Tcl_DriverClose2Proc Tcl_ChannelClose2Proc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) Tcl_DriverInputProc Tcl_ChannelInputProc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) Tcl_DriverOutputProc Tcl_ChannelOutputProc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) Tcl_DriverSeekProc Tcl_ChannelSeekProc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) Tcl_DriverSetOptionProc Tcl_ChannelSetOptionProc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) Tcl_DriverGetOptionProc Tcl_ChannelGetOptionProc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) Tcl_DriverWatchProc Tcl_ChannelWatchProc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) Tcl_DriverGetHandleProc Tcl_ChannelGetHandleProc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) Tcl_DriverFlushProc Tcl_ChannelFlushProc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) Tcl_DriverHandlerProc Tcl_ChannelHandlerProc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) int Tcl_JoinThread(Tcl_ThreadId threadId, int* result) nothrow;
extern(C) int Tcl_IsChannelShared(Tcl_Channel channel) nothrow;
extern(C) int Tcl_IsChannelRegistered(Tcl_Interp* interp, Tcl_Channel channel) nothrow;
extern(C) void Tcl_CutChannel(Tcl_Channel channel) nothrow;
extern(C) void Tcl_SpliceChannel(Tcl_Channel channel) nothrow;
extern(C) void Tcl_ClearChannelHandlers(Tcl_Channel channel) nothrow;
extern(C) int Tcl_IsChannelExisting(const char* channelName) nothrow;
extern(C) int Tcl_UniCharNcasecmp(const Tcl_UniChar* ucs, const Tcl_UniChar* uct, c_ulong numChars) nothrow;
extern(C) int Tcl_UniCharCaseMatch(const Tcl_UniChar* uniStr, const Tcl_UniChar* uniPattern, int nocase) nothrow;
extern(C) Tcl_HashEntry* Tcl_FindHashEntry(Tcl_HashTable* tablePtr, const char* key) nothrow;
extern(C) Tcl_HashEntry* Tcl_CreateHashEntry(Tcl_HashTable* tablePtr, const char* key, int* newPtr) nothrow;
extern(C) void Tcl_InitCustomHashTable(Tcl_HashTable* tablePtr, int keyType, Tcl_HashKeyType* typePtr) nothrow;
extern(C) void Tcl_InitObjHashTable(Tcl_HashTable* tablePtr) nothrow;
extern(C) ClientData Tcl_CommandTraceInfo(Tcl_Interp* interp, const char* varName, int flags, Tcl_CommandTraceProc procPtr, ClientData prevClientData) nothrow;
extern(C) int Tcl_TraceCommand(Tcl_Interp* interp, const char* varName, int flags, Tcl_CommandTraceProc proc, ClientData clientData) nothrow;
extern(C) void Tcl_UntraceCommand(Tcl_Interp* interp, const char* varName, int flags, Tcl_CommandTraceProc proc, ClientData clientData) nothrow;
extern(C) char* Tcl_AttemptAlloc(uint size) nothrow;
extern(C) char* Tcl_AttemptDbCkalloc(uint size, const char* file, int line) nothrow;
extern(C) char* Tcl_AttemptRealloc(char* ptr, uint size) nothrow;
extern(C) char* Tcl_AttemptDbCkrealloc(char* ptr, uint size, const char* file, int line) nothrow;
extern(C) int Tcl_AttemptSetObjLength(Tcl_Obj* objPtr, int length) nothrow;
extern(C) Tcl_ThreadId Tcl_GetChannelThread(Tcl_Channel channel) nothrow;
extern(C) Tcl_UniChar* Tcl_GetUnicodeFromObj(Tcl_Obj* objPtr, int* lengthPtr) nothrow;
extern(C) int Tcl_GetMathFuncInfo(Tcl_Interp* interp, const char* name, int* numArgsPtr, Tcl_ValueType** argTypesPtr, Tcl_MathProc* procPtr, ClientData* clientDataPtr) nothrow;
extern(C) Tcl_Obj* Tcl_ListMathFuncs(Tcl_Interp* interp, const char* pattern) nothrow;
extern(C) Tcl_Obj* Tcl_SubstObj(Tcl_Interp* interp, Tcl_Obj* objPtr, int flags) nothrow;
extern(C) int Tcl_DetachChannel(Tcl_Interp* interp, Tcl_Channel channel) nothrow;
extern(C) int Tcl_IsStandardChannel(Tcl_Channel channel) nothrow;
extern(C) int Tcl_FSCopyFile(Tcl_Obj* srcPathPtr, Tcl_Obj* destPathPtr) nothrow;
extern(C) int Tcl_FSCopyDirectory(Tcl_Obj* srcPathPtr, Tcl_Obj* destPathPtr, Tcl_Obj** errorPtr) nothrow;
extern(C) int Tcl_FSCreateDirectory(Tcl_Obj* pathPtr) nothrow;
extern(C) int Tcl_FSDeleteFile(Tcl_Obj* pathPtr) nothrow;
extern(C) int Tcl_FSLoadFile(Tcl_Interp* interp, Tcl_Obj* pathPtr, const char* sym1, const char* sym2, Tcl_PackageInitProc* proc1Ptr, Tcl_PackageInitProc* proc2Ptr, Tcl_LoadHandle* handlePtr, Tcl_FSUnloadFileProc* unloadProcPtr) nothrow;
extern(C) int Tcl_FSMatchInDirectory(Tcl_Interp* interp, Tcl_Obj* result, Tcl_Obj* pathPtr, const char* pattern, Tcl_GlobTypeData* types) nothrow;
extern(C) Tcl_Obj* Tcl_FSLink(Tcl_Obj* pathPtr, Tcl_Obj* toPtr, int linkAction) nothrow;
extern(C) int Tcl_FSRemoveDirectory(Tcl_Obj* pathPtr, int recursive, Tcl_Obj** errorPtr) nothrow;
extern(C) int Tcl_FSRenameFile(Tcl_Obj* srcPathPtr, Tcl_Obj* destPathPtr) nothrow;
extern(C) int Tcl_FSLstat(Tcl_Obj* pathPtr, Tcl_StatBuf* buf) nothrow;
extern(C) int Tcl_FSUtime(Tcl_Obj* pathPtr, utimbuf* tval) nothrow;
extern(C) int Tcl_FSFileAttrsGet(Tcl_Interp* interp, int index, Tcl_Obj* pathPtr, Tcl_Obj** objPtrRef) nothrow;
extern(C) int Tcl_FSFileAttrsSet(Tcl_Interp* interp, int index, Tcl_Obj* pathPtr, Tcl_Obj* objPtr) nothrow;
extern(C) char** Tcl_FSFileAttrStrings(Tcl_Obj* pathPtr, Tcl_Obj** objPtrRef) nothrow;
extern(C) int Tcl_FSStat(Tcl_Obj* pathPtr, Tcl_StatBuf* buf) nothrow;
extern(C) int Tcl_FSAccess(Tcl_Obj* pathPtr, int mode) nothrow;
extern(C) Tcl_Channel Tcl_FSOpenFileChannel(Tcl_Interp* interp, Tcl_Obj* pathPtr, const char* modeString, int permissions) nothrow;
extern(C) Tcl_Obj* Tcl_FSGetCwd(Tcl_Interp* interp) nothrow;
extern(C) int Tcl_FSChdir(Tcl_Obj* pathPtr) nothrow;
extern(C) int Tcl_FSConvertToPathType(Tcl_Interp* interp, Tcl_Obj* pathPtr) nothrow;
extern(C) Tcl_Obj* Tcl_FSJoinPath(Tcl_Obj* listObj, int elements) nothrow;
extern(C) Tcl_Obj* Tcl_FSSplitPath(Tcl_Obj* pathPtr, int* lenPtr) nothrow;
extern(C) int Tcl_FSEqualPaths(Tcl_Obj* firstPtr, Tcl_Obj* secondPtr) nothrow;
extern(C) Tcl_Obj* Tcl_FSGetNormalizedPath(Tcl_Interp* interp, Tcl_Obj* pathPtr) nothrow;
extern(C) Tcl_Obj* Tcl_FSJoinToPath(Tcl_Obj* pathPtr, int objc, const Tcl_Obj[]* objv) nothrow;
extern(C) ClientData Tcl_FSGetInternalRep(Tcl_Obj* pathPtr, Tcl_Filesystem* fsPtr) nothrow;
extern(C) Tcl_Obj* Tcl_FSGetTranslatedPath(Tcl_Interp* interp, Tcl_Obj* pathPtr) nothrow;
extern(C) int Tcl_FSEvalFile(Tcl_Interp* interp, Tcl_Obj* fileName) nothrow;
extern(C) Tcl_Obj* Tcl_FSNewNativePath(Tcl_Filesystem* fromFilesystem, ClientData clientData) nothrow;
extern(C) char* Tcl_FSGetNativePath(Tcl_Obj* pathPtr) nothrow;
extern(C) Tcl_Obj* Tcl_FSFileSystemInfo(Tcl_Obj* pathPtr) nothrow;
extern(C) Tcl_Obj* Tcl_FSPathSeparator(Tcl_Obj* pathPtr) nothrow;
extern(C) Tcl_Obj* Tcl_FSListVolumes() nothrow;
extern(C) int Tcl_FSRegister(ClientData clientData, Tcl_Filesystem* fsPtr) nothrow;
extern(C) int Tcl_FSUnregister(Tcl_Filesystem* fsPtr) nothrow;
extern(C) ClientData Tcl_FSData(Tcl_Filesystem* fsPtr) nothrow;
extern(C) char* Tcl_FSGetTranslatedStringPath(Tcl_Interp* interp, Tcl_Obj* pathPtr) nothrow;
extern(C) Tcl_Filesystem*  Tcl_FSGetFileSystemForPath(Tcl_Obj* pathPtr) nothrow;
extern(C) Tcl_PathType Tcl_FSGetPathType(Tcl_Obj* pathPtr) nothrow;
extern(C) int Tcl_OutputBuffered(Tcl_Channel chan) nothrow;
extern(C) void Tcl_FSMountsChanged(Tcl_Filesystem* fsPtr) nothrow;
extern(C) int Tcl_EvalTokensStandard(Tcl_Interp* interp, Tcl_Token* tokenPtr, int count) nothrow;
extern(C) void Tcl_GetTime(Tcl_Time* timeBuf) nothrow;
extern(C) Tcl_Trace Tcl_CreateObjTrace(Tcl_Interp* interp, int level, int flags, Tcl_CmdObjTraceProc objProc, ClientData clientData, Tcl_CmdObjTraceDeleteProc delProc) nothrow;
extern(C) int Tcl_GetCommandInfoFromToken(Tcl_Command token, Tcl_CmdInfo* infoPtr) nothrow;
extern(C) int Tcl_SetCommandInfoFromToken(Tcl_Command token, const Tcl_CmdInfo* infoPtr) nothrow;
extern(C) Tcl_Obj* Tcl_DbNewWideIntObj(Tcl_WideInt wideValue, const char* file, int line) nothrow;
extern(C) int Tcl_GetWideIntFromObj(Tcl_Interp* interp, Tcl_Obj* objPtr, Tcl_WideInt* widePtr) nothrow;
extern(C) Tcl_Obj* Tcl_NewWideIntObj(Tcl_WideInt wideValue) nothrow;
extern(C) void Tcl_SetWideIntObj(Tcl_Obj* objPtr, Tcl_WideInt wideValue) nothrow;
extern(C) Tcl_StatBuf* Tcl_AllocStatBuf() nothrow;
extern(C) Tcl_WideInt Tcl_Seek(Tcl_Channel chan, Tcl_WideInt offset, int mode) nothrow;
extern(C) Tcl_WideInt Tcl_Tell(Tcl_Channel chan) nothrow;
extern(C) Tcl_DriverWideSeekProc Tcl_ChannelWideSeekProc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) int Tcl_DictObjPut(Tcl_Interp* interp, Tcl_Obj* dictPtr, Tcl_Obj* keyPtr, Tcl_Obj* valuePtr) nothrow;
extern(C) int Tcl_DictObjGet(Tcl_Interp* interp, Tcl_Obj* dictPtr, Tcl_Obj* keyPtr, Tcl_Obj** valuePtrPtr) nothrow;
extern(C) int Tcl_DictObjRemove(Tcl_Interp* interp, Tcl_Obj* dictPtr, Tcl_Obj* keyPtr) nothrow;
extern(C) int Tcl_DictObjSize(Tcl_Interp* interp, Tcl_Obj* dictPtr, int* sizePtr) nothrow;
extern(C) int Tcl_DictObjFirst(Tcl_Interp* interp, Tcl_Obj* dictPtr, Tcl_DictSearch* searchPtr, Tcl_Obj** keyPtrPtr, Tcl_Obj** valuePtrPtr, int* donePtr) nothrow;
extern(C) void Tcl_DictObjNext(Tcl_DictSearch* searchPtr, Tcl_Obj** keyPtrPtr, Tcl_Obj** valuePtrPtr, int* donePtr) nothrow;
extern(C) void Tcl_DictObjDone(Tcl_DictSearch* searchPtr) nothrow;
extern(C) int Tcl_DictObjPutKeyList(Tcl_Interp* interp, Tcl_Obj* dictPtr, int keyc, Tcl_Obj** keyv, Tcl_Obj* valuePtr) nothrow;
extern(C) int Tcl_DictObjRemoveKeyList(Tcl_Interp* interp, Tcl_Obj* dictPtr, int keyc, const Tcl_Obj** keyv) nothrow;
extern(C) Tcl_Obj* Tcl_NewDictObj() nothrow;
extern(C) Tcl_Obj* Tcl_DbNewDictObj(const char* file, int line) nothrow;
extern(C) void Tcl_RegisterConfig(Tcl_Interp* interp, const char* pkgName, Tcl_Config* configuration, const char* valEncoding) nothrow;
extern(C) Tcl_Namespace* Tcl_CreateNamespace(Tcl_Interp* interp, const char* name, ClientData clientData, Tcl_NamespaceDeleteProc deleteProc) nothrow;
extern(C) void Tcl_DeleteNamespace(Tcl_Namespace* nsPtr) nothrow;
extern(C) int Tcl_AppendExportList(Tcl_Interp* interp, Tcl_Namespace* nsPtr, Tcl_Obj* objPtr) nothrow;
extern(C) int Tcl_Export(Tcl_Interp* interp, Tcl_Namespace* nsPtr, const char* pattern, int resetListFirst) nothrow;
extern(C) int Tcl_Import(Tcl_Interp* interp, Tcl_Namespace* nsPtr, const char* pattern, int allowOverwrite) nothrow;
extern(C) int Tcl_ForgetImport(Tcl_Interp* interp, Tcl_Namespace* nsPtr, const char* pattern) nothrow;
extern(C) Tcl_Namespace* Tcl_GetCurrentNamespace(Tcl_Interp* interp) nothrow;
extern(C) Tcl_Namespace* Tcl_GetGlobalNamespace(Tcl_Interp* interp) nothrow;
extern(C) Tcl_Namespace* Tcl_FindNamespace(Tcl_Interp* interp, const char* name, Tcl_Namespace* contextNsPtr, int flags) nothrow;
extern(C) Tcl_Command Tcl_FindCommand(Tcl_Interp* interp, const char* name, Tcl_Namespace* contextNsPtr, int flags) nothrow;
extern(C) Tcl_Command Tcl_GetCommandFromObj(Tcl_Interp* interp, Tcl_Obj* objPtr) nothrow;
extern(C) void Tcl_GetCommandFullName(Tcl_Interp* interp, Tcl_Command command, Tcl_Obj* objPtr) nothrow;
extern(C) int Tcl_FSEvalFileEx(Tcl_Interp* interp, Tcl_Obj* fileName, const char* encodingName) nothrow;
extern(C) Tcl_ExitProc Tcl_SetExitProc(Tcl_ExitProc proc) nothrow;
extern(C) void Tcl_LimitAddHandler(Tcl_Interp* interp, int type, Tcl_LimitHandlerProc handlerProc, ClientData clientData, Tcl_LimitHandlerDeleteProc deleteProc) nothrow;
extern(C) void Tcl_LimitRemoveHandler(Tcl_Interp* interp, int type, Tcl_LimitHandlerProc handlerProc, ClientData clientData) nothrow;
extern(C) int Tcl_LimitReady(Tcl_Interp* interp) nothrow;
extern(C) int Tcl_LimitCheck(Tcl_Interp* interp) nothrow;
extern(C) int Tcl_LimitExceeded(Tcl_Interp* interp) nothrow;
extern(C) void Tcl_LimitSetCommands(Tcl_Interp* interp, int commandLimit) nothrow;
extern(C) void Tcl_LimitSetTime(Tcl_Interp* interp, Tcl_Time* timeLimitPtr) nothrow;
extern(C) void Tcl_LimitSetGranularity(Tcl_Interp* interp, int type, int granularity) nothrow;
extern(C) int Tcl_LimitTypeEnabled(Tcl_Interp* interp, int type) nothrow;
extern(C) int Tcl_LimitTypeExceeded(Tcl_Interp* interp, int type) nothrow;
extern(C) void Tcl_LimitTypeSet(Tcl_Interp* interp, int type) nothrow;
extern(C) void Tcl_LimitTypeReset(Tcl_Interp* interp, int type) nothrow;
extern(C) int Tcl_LimitGetCommands(Tcl_Interp* interp) nothrow;
extern(C) void Tcl_LimitGetTime(Tcl_Interp* interp, Tcl_Time* timeLimitPtr) nothrow;
extern(C) int Tcl_LimitGetGranularity(Tcl_Interp* interp, int type) nothrow;
extern(C) Tcl_InterpState Tcl_SaveInterpState(Tcl_Interp* interp, int status) nothrow;
extern(C) int Tcl_RestoreInterpState(Tcl_Interp* interp, Tcl_InterpState state) nothrow;
extern(C) void Tcl_DiscardInterpState(Tcl_InterpState state) nothrow;
extern(C) int Tcl_SetReturnOptions(Tcl_Interp* interp, Tcl_Obj* options) nothrow;
extern(C) Tcl_Obj* Tcl_GetReturnOptions(Tcl_Interp* interp, int result) nothrow;
extern(C) int Tcl_IsEnsemble(Tcl_Command token) nothrow;
extern(C) Tcl_Command Tcl_CreateEnsemble(Tcl_Interp* interp, const char* name, Tcl_Namespace* namespacePtr, int flags) nothrow;
extern(C) Tcl_Command Tcl_FindEnsemble(Tcl_Interp* interp, Tcl_Obj* cmdNameObj, int flags) nothrow;
extern(C) int Tcl_SetEnsembleSubcommandList(Tcl_Interp* interp, Tcl_Command token, Tcl_Obj* subcmdList) nothrow;
extern(C) int Tcl_SetEnsembleMappingDict(Tcl_Interp* interp, Tcl_Command token, Tcl_Obj* mapDict) nothrow;
extern(C) int Tcl_SetEnsembleUnknownHandler(Tcl_Interp* interp, Tcl_Command token, Tcl_Obj* unknownList) nothrow;
extern(C) int Tcl_SetEnsembleFlags(Tcl_Interp* interp, Tcl_Command token, int flags) nothrow;
extern(C) int Tcl_GetEnsembleSubcommandList(Tcl_Interp* interp, Tcl_Command token, Tcl_Obj** subcmdListPtr) nothrow;
extern(C) int Tcl_GetEnsembleMappingDict(Tcl_Interp* interp, Tcl_Command token, Tcl_Obj** mapDictPtr) nothrow;
extern(C) int Tcl_GetEnsembleUnknownHandler(Tcl_Interp* interp, Tcl_Command token, Tcl_Obj** unknownListPtr) nothrow;
extern(C) int Tcl_GetEnsembleFlags(Tcl_Interp* interp, Tcl_Command token, int* flagsPtr) nothrow;
extern(C) int Tcl_GetEnsembleNamespace(Tcl_Interp* interp, Tcl_Command token, Tcl_Namespace** namespacePtrPtr) nothrow;
extern(C) void Tcl_SetTimeProc(Tcl_GetTimeProc getProc, Tcl_ScaleTimeProc scaleProc, ClientData clientData) nothrow;
extern(C) void Tcl_QueryTimeProc(Tcl_GetTimeProc* getProc, Tcl_ScaleTimeProc* scaleProc, ClientData* clientData) nothrow;
extern(C) Tcl_DriverThreadActionProc Tcl_ChannelThreadActionProc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) Tcl_Obj* Tcl_NewBignumObj(mp_int* value) nothrow;
extern(C) Tcl_Obj* Tcl_DbNewBignumObj(mp_int* value, const char* file, int line) nothrow;
extern(C) void Tcl_SetBignumObj(Tcl_Obj* obj, mp_int* value) nothrow;
extern(C) int Tcl_GetBignumFromObj(Tcl_Interp* interp, Tcl_Obj* obj, mp_int* value) nothrow;
extern(C) int Tcl_TakeBignumFromObj(Tcl_Interp* interp, Tcl_Obj* obj, mp_int* value) nothrow;
extern(C) int Tcl_TruncateChannel(Tcl_Channel chan, Tcl_WideInt length) nothrow;
extern(C) Tcl_DriverTruncateProc Tcl_ChannelTruncateProc(const Tcl_ChannelType* chanTypePtr) nothrow;
extern(C) void Tcl_SetChannelErrorInterp(Tcl_Interp* interp, Tcl_Obj* msg) nothrow;
extern(C) void Tcl_GetChannelErrorInterp(Tcl_Interp* interp, Tcl_Obj** msg) nothrow;
extern(C) void Tcl_SetChannelError(Tcl_Channel chan, Tcl_Obj* msg) nothrow;
extern(C) void Tcl_GetChannelError(Tcl_Channel chan, Tcl_Obj** msg) nothrow;
extern(C) int Tcl_InitBignumFromDouble(Tcl_Interp* interp, double initval, mp_int* toInit) nothrow;
extern(C) Tcl_Obj* Tcl_GetNamespaceUnknownHandler(Tcl_Interp* interp, Tcl_Namespace* nsPtr) nothrow;
extern(C) int Tcl_SetNamespaceUnknownHandler(Tcl_Interp* interp, Tcl_Namespace* nsPtr, Tcl_Obj* handlerPtr) nothrow;
extern(C) int Tcl_GetEncodingFromObj(Tcl_Interp* interp, Tcl_Obj* objPtr, Tcl_Encoding* encodingPtr) nothrow;
extern(C) Tcl_Obj* Tcl_GetEncodingSearchPath() nothrow;
extern(C) int Tcl_SetEncodingSearchPath(Tcl_Obj* searchPath) nothrow;
extern(C) char* Tcl_GetEncodingNameFromEnvironment(Tcl_DString* bufPtr) nothrow;
extern(C) int Tcl_PkgRequireProc(Tcl_Interp* interp, const char* name, int objc, const Tcl_Obj[]* objv, ClientData* clientDataPtr) nothrow;
extern(C) void Tcl_AppendObjToErrorInfo(Tcl_Interp* interp, Tcl_Obj* objPtr) nothrow;
extern(C) void Tcl_AppendLimitedToObj(Tcl_Obj* objPtr, const char* bytes, int length, int limit, const char* ellipsis) nothrow;
extern(C) Tcl_Obj* Tcl_Format(Tcl_Interp* interp, const char* format, int objc, const Tcl_Obj[]* objv) nothrow;
extern(C) int Tcl_AppendFormatToObj(Tcl_Interp* interp, Tcl_Obj* objPtr, const char* format, int objc, const Tcl_Obj[]* objv) nothrow;
extern(C) Tcl_Obj* Tcl_ObjPrintf(const char* format, ...) nothrow;
extern(C) void Tcl_AppendPrintfToObj(Tcl_Obj* objPtr, const char* format, ...) nothrow;

struct TclPlatStubs;
struct TclIntStubs;
struct TclIntPlatStubs;

struct TclStubHooks
{
    TclPlatStubs* tclPlatStubs;
    TclIntStubs* tclIntStubs;
    TclIntPlatStubs* tclIntPlatStubs;
}

struct TclStubs
{
	int magic;
	TclStubHooks* hooks;

	extern(C) int function(Tcl_Interp* interp, const char* name, const char* version_, ClientData clientData) nothrow tcl_PkgProvideEx;
	extern(C) char* function(Tcl_Interp* interp, const char* name, const char* version_, int exact, ClientData* clientDataPtr) nothrow tcl_PkgRequireEx;
	extern(C) void function(const char* format, ...) nothrow tcl_Panic;
	extern(C) char* function(uint size) nothrow tcl_Alloc;
	extern(C) void function(char* ptr) nothrow tcl_Free;
	extern(C) char* function(char* ptr, uint size) nothrow tcl_Realloc;
	extern(C) char* function(uint size, const char* file, int line) nothrow tcl_DbCkalloc;
	extern(C) int function(char* ptr, const char* file, int line) nothrow tcl_DbCkfree;
	extern(C) char* function(char* ptr, uint size, const char* file, int line) nothrow tcl_DbCkrealloc;

	version(Posix)
	{
		extern(C) void function(int fd, int mask, Tcl_FileProc proc, ClientData clientData) nothrow tcl_CreateFileHandler;
	}
	else
	{
		void* reserved9;
	}

	version(Posix)
	{
		extern(C) void function(int fd) nothrow tcl_DeleteFileHandler;
	}
	else
	{
		void* reserved10;
	}

	extern(C) void function(Tcl_Time* timePtr) nothrow tcl_SetTimer;
	extern(C) void function(int ms) nothrow tcl_Sleep;
	extern(C) int function(Tcl_Time* timePtr) nothrow tcl_WaitForEvent;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr) nothrow tcl_AppendAllObjTypes;
	extern(C) void function(Tcl_Obj* objPtr, ...) nothrow tcl_AppendStringsToObj;
	extern(C) void function(Tcl_Obj* objPtr, const char* bytes, int length) nothrow tcl_AppendToObj;
	extern(C) Tcl_Obj* function(int objc, const Tcl_Obj[]* objv) nothrow tcl_ConcatObj;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, Tcl_ObjType* typePtr) nothrow tcl_ConvertToType;
	extern(C) void function(Tcl_Obj* objPtr, const char* file, int line) nothrow tcl_DbDecrRefCount;
	extern(C) void function(Tcl_Obj* objPtr, const char* file, int line) nothrow tcl_DbIncrRefCount;
	extern(C) int function(Tcl_Obj* objPtr, const char* file, int line) nothrow tcl_DbIsShared;
	extern(C) Tcl_Obj* function(int boolValue, const char* file, int line) nothrow tcl_DbNewBooleanObj;
	extern(C) Tcl_Obj* function(const ubyte* bytes, int length, const char* file, int line) nothrow tcl_DbNewByteArrayObj;
	extern(C) Tcl_Obj* function(double doubleValue, const char* file, int line) nothrow tcl_DbNewDoubleObj;
	extern(C) Tcl_Obj* function(int objc, const Tcl_Obj[]* objv, const char* file, int line) nothrow tcl_DbNewListObj;
	extern(C) Tcl_Obj* function(c_long longValue, const char* file, int line) nothrow tcl_DbNewLongObj;
	extern(C) Tcl_Obj* function(const char* file, int line) nothrow tcl_DbNewObj;
	extern(C) Tcl_Obj* function(const char* bytes, int length, const char* file, int line) nothrow tcl_DbNewStringObj;
	extern(C) Tcl_Obj* function(Tcl_Obj* objPtr) nothrow tcl_DuplicateObj;
	extern(C) void function(Tcl_Obj* objPtr) nothrow tclFreeObj;
	extern(C) int function(Tcl_Interp* interp, const char* src, int* boolPtr) nothrow tcl_GetBoolean;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, int* boolPtr) nothrow tcl_GetBooleanFromObj;
	extern(C) ubyte* function(Tcl_Obj* objPtr, int* lengthPtr) nothrow tcl_GetByteArrayFromObj;
	extern(C) int function(Tcl_Interp* interp, const char* src, double* doublePtr) nothrow tcl_GetDouble;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, double* doublePtr) nothrow tcl_GetDoubleFromObj;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, const char** tablePtr, const char* msg, int flags, int* indexPtr) nothrow tcl_GetIndexFromObj;
	extern(C) int function(Tcl_Interp* interp, const char* src, int* intPtr) nothrow tcl_GetInt;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, int* intPtr) nothrow tcl_GetIntFromObj;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, c_long* longPtr) nothrow tcl_GetLongFromObj;
	extern(C) Tcl_ObjType* function(const char* typeName) nothrow tcl_GetObjType;
	extern(C) char* function(Tcl_Obj* objPtr, int* lengthPtr) nothrow tcl_GetStringFromObj;
	extern(C) void function(Tcl_Obj* objPtr) nothrow tcl_InvalidateStringRep;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* listPtr, Tcl_Obj* elemListPtr) nothrow tcl_ListObjAppendList;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* listPtr, Tcl_Obj* objPtr) nothrow tcl_ListObjAppendElement;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* listPtr, int* objcPtr, Tcl_Obj*** objvPtr) nothrow tcl_ListObjGetElements;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* listPtr, int index, Tcl_Obj** objPtrPtr) nothrow tcl_ListObjIndex;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* listPtr, int* lengthPtr) nothrow tcl_ListObjLength;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* listPtr, int first, int count, int objc, const Tcl_Obj[]* objv) nothrow tcl_ListObjReplace;
	extern(C) Tcl_Obj* function(int boolValue) nothrow tcl_NewBooleanObj;
	extern(C) Tcl_Obj* function(const ubyte* bytes, int length) nothrow tcl_NewByteArrayObj;
	extern(C) Tcl_Obj* function(double doubleValue) nothrow tcl_NewDoubleObj;
	extern(C) Tcl_Obj* function(int intValue) nothrow tcl_NewIntObj;
	extern(C) Tcl_Obj* function(int objc, const Tcl_Obj[]* objv) nothrow tcl_NewListObj;
	extern(C) Tcl_Obj* function(c_long longValue) nothrow tcl_NewLongObj;
	extern(C) Tcl_Obj* function() nothrow tcl_NewObj;
	extern(C) Tcl_Obj* function(const char* bytes, int length) nothrow tcl_NewStringObj;
	extern(C) void function(Tcl_Obj* objPtr, int boolValue) nothrow tcl_SetBooleanObj;
	extern(C) ubyte* function(Tcl_Obj* objPtr, int length) nothrow tcl_SetByteArrayLength;
	extern(C) void function(Tcl_Obj* objPtr, const ubyte* bytes, int length) nothrow tcl_SetByteArrayObj;
	extern(C) void function(Tcl_Obj* objPtr, double doubleValue) nothrow tcl_SetDoubleObj;
	extern(C) void function(Tcl_Obj* objPtr, int intValue) nothrow tcl_SetIntObj;
	extern(C) void function(Tcl_Obj* objPtr, int objc, const Tcl_Obj[]* objv) nothrow tcl_SetListObj;
	extern(C) void function(Tcl_Obj* objPtr, c_long longValue) nothrow tcl_SetLongObj;
	extern(C) void function(Tcl_Obj* objPtr, int length) nothrow tcl_SetObjLength;
	extern(C) void function(Tcl_Obj* objPtr, const char* bytes, int length) nothrow tcl_SetStringObj;
	extern(C) void function(Tcl_Interp* interp, const char* message) nothrow tcl_AddErrorInfo;
	extern(C) void function(Tcl_Interp* interp, const char* message, int length) nothrow tcl_AddObjErrorInfo;
	extern(C) void function(Tcl_Interp* interp) nothrow tcl_AllowExceptions;
	extern(C) void function(Tcl_Interp* interp, const char* element) nothrow tcl_AppendElement;
	extern(C) void function(Tcl_Interp* interp, ...) nothrow tcl_AppendResult;
	extern(C) Tcl_AsyncHandler function(Tcl_AsyncProc proc, ClientData clientData) nothrow tcl_AsyncCreate;
	extern(C) void function(Tcl_AsyncHandler async) nothrow tcl_AsyncDelete;
	extern(C) int function(Tcl_Interp* interp, int code) nothrow tcl_AsyncInvoke;
	extern(C) void function(Tcl_AsyncHandler async) nothrow tcl_AsyncMark;
	extern(C) int function() nothrow tcl_AsyncReady;
	extern(C) void function(Tcl_Interp* interp) nothrow tcl_BackgroundError;
	extern(C) char function(const char* src, int* readPtr) nothrow tcl_Backslash;
	extern(C) int function(Tcl_Interp* interp, const char* optionName, const char* optionList) nothrow tcl_BadChannelOption;
	extern(C) void function(Tcl_Interp* interp, Tcl_InterpDeleteProc proc, ClientData clientData) nothrow tcl_CallWhenDeleted;
	extern(C) void function(Tcl_IdleProc idleProc, ClientData clientData) nothrow tcl_CancelIdleCall;
	extern(C) int function(Tcl_Interp* interp, Tcl_Channel chan) nothrow tcl_Close;
	extern(C) int function(const char* cmd) nothrow tcl_CommandComplete;
	extern(C) char* function(int argc, const char** argv) nothrow tcl_Concat;
	extern(C) int function(const char* src, char* dst, int flags) nothrow tcl_ConvertElement;
	extern(C) int function(const char* src, int length, char* dst, int flags) nothrow tcl_ConvertCountedElement;
	extern(C) int function(Tcl_Interp* slave, const char* slaveCmd, Tcl_Interp* target, const char* targetCmd, int argc, const char** argv) nothrow tcl_CreateAlias;
	extern(C) int function(Tcl_Interp* slave, const char* slaveCmd, Tcl_Interp* target, const char* targetCmd, int objc, const Tcl_Obj[]* objv) nothrow tcl_CreateAliasObj;
	extern(C) Tcl_Channel function(Tcl_ChannelType* typePtr, const char* chanName, ClientData instanceData, int mask) nothrow tcl_CreateChannel;
	extern(C) void function(Tcl_Channel chan, int mask, Tcl_ChannelProc proc, ClientData clientData) nothrow tcl_CreateChannelHandler;
	extern(C) void function(Tcl_Channel chan, Tcl_CloseProc proc, ClientData clientData) nothrow tcl_CreateCloseHandler;
	extern(C) Tcl_Command function(Tcl_Interp* interp, const char* cmdName, Tcl_CmdProc proc, ClientData clientData, Tcl_CmdDeleteProc deleteProc) nothrow tcl_CreateCommand;
	extern(C) void function(Tcl_EventSetupProc setupProc, Tcl_EventCheckProc checkProc, ClientData clientData) nothrow tcl_CreateEventSource;
	extern(C) void function(Tcl_ExitProc proc, ClientData clientData) nothrow tcl_CreateExitHandler;
	extern(C) Tcl_Interp* function() nothrow tcl_CreateInterp;
	extern(C) void function(Tcl_Interp* interp, const char* name, int numArgs, Tcl_ValueType* argTypes, Tcl_MathProc proc, ClientData clientData) nothrow tcl_CreateMathFunc;
	extern(C) Tcl_Command function(Tcl_Interp* interp, const char* cmdName, Tcl_ObjCmdProc proc, ClientData clientData, Tcl_CmdDeleteProc deleteProc) nothrow tcl_CreateObjCommand;
	extern(C) Tcl_Interp* function(Tcl_Interp* interp, const char* slaveName, int isSafe) nothrow tcl_CreateSlave;
	extern(C) Tcl_TimerToken function(int milliseconds, Tcl_TimerProc proc, ClientData clientData) nothrow tcl_CreateTimerHandler;
	extern(C) Tcl_Trace function(Tcl_Interp* interp, int level, Tcl_CmdTraceProc proc, ClientData clientData) nothrow tcl_CreateTrace;
	extern(C) void function(Tcl_Interp* interp, const char* name) nothrow tcl_DeleteAssocData;
	extern(C) void function(Tcl_Channel chan, Tcl_ChannelProc proc, ClientData clientData) nothrow tcl_DeleteChannelHandler;
	extern(C) void function(Tcl_Channel chan, Tcl_CloseProc proc, ClientData clientData) nothrow tcl_DeleteCloseHandler;
	extern(C) int function(Tcl_Interp* interp, const char* cmdName) nothrow tcl_DeleteCommand;
	extern(C) int function(Tcl_Interp* interp, Tcl_Command command) nothrow tcl_DeleteCommandFromToken;
	extern(C) void function(Tcl_EventDeleteProc proc, ClientData clientData) nothrow tcl_DeleteEvents;
	extern(C) void function(Tcl_EventSetupProc setupProc, Tcl_EventCheckProc checkProc, ClientData clientData) nothrow tcl_DeleteEventSource;
	extern(C) void function(Tcl_ExitProc proc, ClientData clientData) nothrow tcl_DeleteExitHandler;
	extern(C) void function(Tcl_HashEntry* entryPtr) nothrow tcl_DeleteHashEntry;
	extern(C) void function(Tcl_HashTable* tablePtr) nothrow tcl_DeleteHashTable;
	extern(C) void function(Tcl_Interp* interp) nothrow tcl_DeleteInterp;
	extern(C) void function(int numPids, Tcl_Pid* pidPtr) nothrow tcl_DetachPids;
	extern(C) void function(Tcl_TimerToken token) nothrow tcl_DeleteTimerHandler;
	extern(C) void function(Tcl_Interp* interp, Tcl_Trace trace) nothrow tcl_DeleteTrace;
	extern(C) void function(Tcl_Interp* interp, Tcl_InterpDeleteProc proc, ClientData clientData) nothrow tcl_DontCallWhenDeleted;
	extern(C) int function(int flags) nothrow tcl_DoOneEvent;
	extern(C) void function(Tcl_IdleProc proc, ClientData clientData) nothrow tcl_DoWhenIdle;
	extern(C) char* function(Tcl_DString* dsPtr, const char* bytes, int length) nothrow tcl_DStringAppend;
	extern(C) char* function(Tcl_DString* dsPtr, const char* element) nothrow tcl_DStringAppendElement;
	extern(C) void function(Tcl_DString* dsPtr) nothrow tcl_DStringEndSublist;
	extern(C) void function(Tcl_DString* dsPtr) nothrow tcl_DStringFree;
	extern(C) void function(Tcl_Interp* interp, Tcl_DString* dsPtr) nothrow tcl_DStringGetResult;
	extern(C) void function(Tcl_DString* dsPtr) nothrow tcl_DStringInit;
	extern(C) void function(Tcl_Interp* interp, Tcl_DString* dsPtr) nothrow tcl_DStringResult;
	extern(C) void function(Tcl_DString* dsPtr, int length) nothrow tcl_DStringSetLength;
	extern(C) void function(Tcl_DString* dsPtr) nothrow tcl_DStringStartSublist;
	extern(C) int function(Tcl_Channel chan) nothrow tcl_Eof;
	extern(C) char* function() nothrow tcl_ErrnoId;
	extern(C) char* function(int err) nothrow tcl_ErrnoMsg;
	extern(C) int function(Tcl_Interp* interp, const char* script) nothrow tcl_Eval;
	extern(C) int function(Tcl_Interp* interp, const char* fileName) nothrow tcl_EvalFile;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr) nothrow tcl_EvalObj;
	extern(C) void function(ClientData clientData, Tcl_FreeProc freeProc) nothrow tcl_EventuallyFree;
	extern(C) void function(int status) nothrow tcl_Exit;
	extern(C) int function(Tcl_Interp* interp, const char* hiddenCmdToken, const char* cmdName) nothrow tcl_ExposeCommand;
	extern(C) int function(Tcl_Interp* interp, const char* expr, int* ptr) nothrow tcl_ExprBoolean;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, int* ptr) nothrow tcl_ExprBooleanObj;
	extern(C) int function(Tcl_Interp* interp, const char* expr, double* ptr) nothrow tcl_ExprDouble;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, double* ptr) nothrow tcl_ExprDoubleObj;
	extern(C) int function(Tcl_Interp* interp, const char* expr, c_long* ptr) nothrow tcl_ExprLong;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, c_long* ptr) nothrow tcl_ExprLongObj;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, Tcl_Obj** resultPtrPtr) nothrow tcl_ExprObj;
	extern(C) int function(Tcl_Interp* interp, const char* expr) nothrow tcl_ExprString;
	extern(C) void function() nothrow tcl_Finalize;
	extern(C) void function(const char* argv0) nothrow tcl_FindExecutable;
	extern(C) Tcl_HashEntry* function(Tcl_HashTable* tablePtr, Tcl_HashSearch* searchPtr) nothrow tcl_FirstHashEntry;
	extern(C) int function(Tcl_Channel chan) nothrow tcl_Flush;
	extern(C) void function(Tcl_Interp* interp) nothrow tcl_FreeResult;
	extern(C) int function(Tcl_Interp* interp, const char* slaveCmd, Tcl_Interp** targetInterpPtr, const char** targetCmdPtr, int* argcPtr, const char*** argvPtr) nothrow tcl_GetAlias;
	extern(C) int function(Tcl_Interp* interp, const char* slaveCmd, Tcl_Interp** targetInterpPtr, const char** targetCmdPtr, int* objcPtr, Tcl_Obj*** objv) nothrow tcl_GetAliasObj;
	extern(C) ClientData function(Tcl_Interp* interp, const char* name, Tcl_InterpDeleteProc* procPtr) nothrow tcl_GetAssocData;
	extern(C) Tcl_Channel function(Tcl_Interp* interp, const char* chanName, int* modePtr) nothrow tcl_GetChannel;
	extern(C) int function(Tcl_Channel chan) nothrow tcl_GetChannelBufferSize;
	extern(C) int function(Tcl_Channel chan, int direction, ClientData* handlePtr) nothrow tcl_GetChannelHandle;
	extern(C) ClientData function(Tcl_Channel chan) nothrow tcl_GetChannelInstanceData;
	extern(C) int function(Tcl_Channel chan) nothrow tcl_GetChannelMode;
	extern(C) char* function(Tcl_Channel chan) nothrow tcl_GetChannelName;
	extern(C) int function(Tcl_Interp* interp, Tcl_Channel chan, const char* optionName, Tcl_DString* dsPtr) nothrow tcl_GetChannelOption;
	extern(C) Tcl_ChannelType* function(Tcl_Channel chan) nothrow tcl_GetChannelType;
	extern(C) int function(Tcl_Interp* interp, const char* cmdName, Tcl_CmdInfo* infoPtr) nothrow tcl_GetCommandInfo;
	extern(C) char* function(Tcl_Interp* interp, Tcl_Command command) nothrow tcl_GetCommandName;
	extern(C) int function() nothrow tcl_GetErrno;
	extern(C) char* function() nothrow tcl_GetHostName;
	extern(C) int function(Tcl_Interp* askInterp, Tcl_Interp* slaveInterp) nothrow tcl_GetInterpPath;
	extern(C) Tcl_Interp* function(Tcl_Interp* interp) nothrow tcl_GetMaster;
	extern(C) char* function() nothrow tcl_GetNameOfExecutable;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp) nothrow tcl_GetObjResult;

	version(Posix)
	{
		extern(C) int function(Tcl_Interp* interp, const char* chanID, int forWriting, int checkUsage, ClientData* filePtr) nothrow tcl_GetOpenFile;
	}
	else
	{
		void* reserved167;
	}

	extern(C) Tcl_PathType function(const char* path) nothrow tcl_GetPathType;
	extern(C) int function(Tcl_Channel chan, Tcl_DString* dsPtr) nothrow tcl_Gets;
	extern(C) int function(Tcl_Channel chan, Tcl_Obj* objPtr) nothrow tcl_GetsObj;
	extern(C) int function() nothrow tcl_GetServiceMode;
	extern(C) Tcl_Interp* function(Tcl_Interp* interp, const char* slaveName) nothrow tcl_GetSlave;
	extern(C) Tcl_Channel function(int type) nothrow tcl_GetStdChannel;
	extern(C) char* function(Tcl_Interp* interp) nothrow tcl_GetStringResult;
	extern(C) char* function(Tcl_Interp* interp, const char* varName, int flags) nothrow tcl_GetVar;
	extern(C) char* function(Tcl_Interp* interp, const char* part1, const char* part2, int flags) nothrow tcl_GetVar2;
	extern(C) int function(Tcl_Interp* interp, const char* command) nothrow tcl_GlobalEval;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr) nothrow tcl_GlobalEvalObj;
	extern(C) int function(Tcl_Interp* interp, const char* cmdName, const char* hiddenCmdToken) nothrow tcl_HideCommand;
	extern(C) int function(Tcl_Interp* interp) nothrow tcl_Init;
	extern(C) void function(Tcl_HashTable* tablePtr, int keyType) nothrow tcl_InitHashTable;
	extern(C) int function(Tcl_Channel chan) nothrow tcl_InputBlocked;
	extern(C) int function(Tcl_Channel chan) nothrow tcl_InputBuffered;
	extern(C) int function(Tcl_Interp* interp) nothrow tcl_InterpDeleted;
	extern(C) int function(Tcl_Interp* interp) nothrow tcl_IsSafe;
	extern(C) char* function(int argc, const char** argv, Tcl_DString* resultPtr) nothrow tcl_JoinPath;
	extern(C) int function(Tcl_Interp* interp, const char* varName, char* addr, int type) nothrow tcl_LinkVar;
	void* reserved188;
	extern(C) Tcl_Channel function(ClientData handle, int mode) nothrow tcl_MakeFileChannel;
	extern(C) int function(Tcl_Interp* interp) nothrow tcl_MakeSafe;
	extern(C) Tcl_Channel function(ClientData tcpSocket) nothrow tcl_MakeTcpClientChannel;
	extern(C) char* function(int argc, const char** argv) nothrow tcl_Merge;
	extern(C) Tcl_HashEntry* function(Tcl_HashSearch* searchPtr) nothrow tcl_NextHashEntry;
	extern(C) void function(Tcl_Channel channel, int mask) nothrow tcl_NotifyChannel;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp, Tcl_Obj* part1Ptr, Tcl_Obj* part2Ptr, int flags) nothrow tcl_ObjGetVar2;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp, Tcl_Obj* part1Ptr, Tcl_Obj* part2Ptr, Tcl_Obj* newValuePtr, int flags) nothrow tcl_ObjSetVar2;
	extern(C) Tcl_Channel function(Tcl_Interp* interp, int argc, const char** argv, int flags) nothrow tcl_OpenCommandChannel;
	extern(C) Tcl_Channel function(Tcl_Interp* interp, const char* fileName, const char* modeString, int permissions) nothrow tcl_OpenFileChannel;
	extern(C) Tcl_Channel function(Tcl_Interp* interp, int port, const char* address, const char* myaddr, int myport, int async) nothrow tcl_OpenTcpClient;
	extern(C) Tcl_Channel function(Tcl_Interp* interp, int port, const char* host, Tcl_TcpAcceptProc acceptProc, ClientData callbackData) nothrow tcl_OpenTcpServer;
	extern(C) void function(ClientData data) nothrow tcl_Preserve;
	extern(C) void function(Tcl_Interp* interp, double value, char* dst) nothrow tcl_PrintDouble;
	extern(C) int function(const char* assignment) nothrow tcl_PutEnv;
	extern(C) char* function(Tcl_Interp* interp) nothrow tcl_PosixError;
	extern(C) void function(Tcl_Event* evPtr, Tcl_QueuePosition position) nothrow tcl_QueueEvent;
	extern(C) int function(Tcl_Channel chan, char* bufPtr, int toRead) nothrow tcl_Read;
	extern(C) void function() nothrow tcl_ReapDetachedProcs;
	extern(C) int function(Tcl_Interp* interp, const char* cmd, int flags) nothrow tcl_RecordAndEval;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* cmdPtr, int flags) nothrow tcl_RecordAndEvalObj;
	extern(C) void function(Tcl_Interp* interp, Tcl_Channel chan) nothrow tcl_RegisterChannel;
	extern(C) void function(Tcl_ObjType* typePtr) nothrow tcl_RegisterObjType;
	extern(C) Tcl_RegExp function(Tcl_Interp* interp, const char* pattern) nothrow tcl_RegExpCompile;
	extern(C) int function(Tcl_Interp* interp, Tcl_RegExp regexp, const char* text, const char* start) nothrow tcl_RegExpExec;
	extern(C) int function(Tcl_Interp* interp, const char* text, const char* pattern) nothrow tcl_RegExpMatch;
	extern(C) void function(Tcl_RegExp regexp, int index, const char** startPtr, const char** endPtr) nothrow tcl_RegExpRange;
	extern(C) void function(ClientData clientData) nothrow tcl_Release;
	extern(C) void function(Tcl_Interp* interp) nothrow tcl_ResetResult;
	extern(C) int function(const char* src, int* flagPtr) nothrow tcl_ScanElement;
	extern(C) int function(const char* src, int length, int* flagPtr) nothrow tcl_ScanCountedElement;
	extern(C) int function(Tcl_Channel chan, int offset, int mode) nothrow tcl_SeekOld;
	extern(C) int function() nothrow tcl_ServiceAll;
	extern(C) int function(int flags) nothrow tcl_ServiceEvent;
	extern(C) void function(Tcl_Interp* interp, const char* name, Tcl_InterpDeleteProc proc, ClientData clientData) nothrow tcl_SetAssocData;
	extern(C) void function(Tcl_Channel chan, int sz) nothrow tcl_SetChannelBufferSize;
	extern(C) int function(Tcl_Interp* interp, Tcl_Channel chan, const char* optionName, const char* newValue) nothrow tcl_SetChannelOption;
	extern(C) int function(Tcl_Interp* interp, const char* cmdName, const Tcl_CmdInfo* infoPtr) nothrow tcl_SetCommandInfo;
	extern(C) void function(int err) nothrow tcl_SetErrno;
	extern(C) void function(Tcl_Interp* interp, ...) nothrow tcl_SetErrorCode;
	extern(C) void function(Tcl_Time* timePtr) nothrow tcl_SetMaxBlockTime;
	extern(C) void function(Tcl_PanicProc panicProc) nothrow tcl_SetPanicProc;
	extern(C) int function(Tcl_Interp* interp, int depth) nothrow tcl_SetRecursionLimit;
	extern(C) void function(Tcl_Interp* interp, char* result, Tcl_FreeProc freeProc) nothrow tcl_SetResult;
	extern(C) int function(int mode) nothrow tcl_SetServiceMode;
	extern(C) void function(Tcl_Interp* interp, Tcl_Obj* errorObjPtr) nothrow tcl_SetObjErrorCode;
	extern(C) void function(Tcl_Interp* interp, Tcl_Obj* resultObjPtr) nothrow tcl_SetObjResult;
	extern(C) void function(Tcl_Channel channel, int type) nothrow tcl_SetStdChannel;
	extern(C) char* function(Tcl_Interp* interp, const char* varName, const char* newValue, int flags) nothrow tcl_SetVar;
	extern(C) char* function(Tcl_Interp* interp, const char* part1, const char* part2, const char* newValue, int flags) nothrow tcl_SetVar2;
	extern(C) char* function(int sig) nothrow tcl_SignalId;
	extern(C) char* function(int sig) nothrow tcl_SignalMsg;
	extern(C) void function(Tcl_Interp* interp) nothrow tcl_SourceRCFile;
	extern(C) int function(Tcl_Interp* interp, const char* listStr, int* argcPtr, const char*** argvPtr) nothrow tcl_SplitList;
	extern(C) void function(const char* path, int* argcPtr, const char*** argvPtr) nothrow tcl_SplitPath;
	extern(C) void function(Tcl_Interp* interp, const char* pkgName, Tcl_PackageInitProc initProc, Tcl_PackageInitProc safeInitProc) nothrow tcl_StaticPackage;
	extern(C) int function(const char* str, const char* pattern) nothrow tcl_StringMatch;
	extern(C) int function(Tcl_Channel chan) nothrow tcl_TellOld;
	extern(C) int function(Tcl_Interp* interp, const char* varName, int flags, Tcl_VarTraceProc proc, ClientData clientData) nothrow tcl_TraceVar;
	extern(C) int function(Tcl_Interp* interp, const char* part1, const char* part2, int flags, Tcl_VarTraceProc proc, ClientData clientData) nothrow tcl_TraceVar2;
	extern(C) char* function(Tcl_Interp* interp, const char* name, Tcl_DString* bufferPtr) nothrow tcl_TranslateFileName;
	extern(C) int function(Tcl_Channel chan, const char* str, int len, int atHead) nothrow tcl_Ungets;
	extern(C) void function(Tcl_Interp* interp, const char* varName) nothrow tcl_UnlinkVar;
	extern(C) int function(Tcl_Interp* interp, Tcl_Channel chan) nothrow tcl_UnregisterChannel;
	extern(C) int function(Tcl_Interp* interp, const char* varName, int flags) nothrow tcl_UnsetVar;
	extern(C) int function(Tcl_Interp* interp, const char* part1, const char* part2, int flags) nothrow tcl_UnsetVar2;
	extern(C) void function(Tcl_Interp* interp, const char* varName, int flags, Tcl_VarTraceProc proc, ClientData clientData) nothrow tcl_UntraceVar;
	extern(C) void function(Tcl_Interp* interp, const char* part1, const char* part2, int flags, Tcl_VarTraceProc proc, ClientData clientData) nothrow tcl_UntraceVar2;
	extern(C) void function(Tcl_Interp* interp, const char* varName) nothrow tcl_UpdateLinkedVar;
	extern(C) int function(Tcl_Interp* interp, const char* frameName, const char* varName, const char* localName, int flags) nothrow tcl_UpVar;
	extern(C) int function(Tcl_Interp* interp, const char* frameName, const char* part1, const char* part2, const char* localName, int flags) nothrow tcl_UpVar2;
	extern(C) int function(Tcl_Interp* interp, ...) nothrow tcl_VarEval;
	extern(C) ClientData function(Tcl_Interp* interp, const char* varName, int flags, Tcl_VarTraceProc procPtr, ClientData prevClientData) nothrow tcl_VarTraceInfo;
	extern(C) ClientData function(Tcl_Interp* interp, const char* part1, const char* part2, int flags, Tcl_VarTraceProc procPtr, ClientData prevClientData) nothrow tcl_VarTraceInfo2;
	extern(C) int function(Tcl_Channel chan, const char* s, int slen) nothrow tcl_Write;
	extern(C) void function(Tcl_Interp* interp, int objc, const Tcl_Obj[]* objv, const char* message) nothrow tcl_WrongNumArgs;
	extern(C) int function(const char* fileName) nothrow tcl_DumpActiveMemory;
	extern(C) void function(const char* file, int line) nothrow tcl_ValidateAllMemory;
	extern(C) void function(Tcl_Interp* interp, va_list argList) nothrow tcl_AppendResultVA;
	extern(C) void function(Tcl_Obj* objPtr, va_list argList) nothrow tcl_AppendStringsToObjVA;
	extern(C) char* function(Tcl_HashTable* tablePtr) nothrow tcl_HashStats;
	extern(C) char* function(Tcl_Interp* interp, const char* start, const char** termPtr) nothrow tcl_ParseVar;
	extern(C) char* function(Tcl_Interp* interp, const char* name, const char* version_, int exact) nothrow tcl_PkgPresent;
	extern(C) char* function(Tcl_Interp* interp, const char* name, const char* version_, int exact, ClientData* clientDataPtr) nothrow tcl_PkgPresentEx;
	extern(C) int function(Tcl_Interp* interp, const char* name, const char* version_) nothrow tcl_PkgProvide;
	extern(C) char* function(Tcl_Interp* interp, const char* name, const char* version_, int exact) nothrow tcl_PkgRequire;
	extern(C) void function(Tcl_Interp* interp, va_list argList) nothrow tcl_SetErrorCodeVA;
	extern(C) int function(Tcl_Interp* interp, va_list argList) nothrow tcl_VarEvalVA;
	extern(C) Tcl_Pid function(Tcl_Pid pid, int* statPtr, int options) nothrow tcl_WaitPid;
	extern(C) void function(const char* format, va_list argList) nothrow tcl_PanicVA;
	extern(C) void function(int* major, int* minor, int* patchLevel, int* type) nothrow tcl_GetVersion;
	extern(C) void function(Tcl_Interp* interp) nothrow tcl_InitMemory;
	extern(C) Tcl_Channel function(Tcl_Interp* interp, Tcl_ChannelType* typePtr, ClientData instanceData, int mask, Tcl_Channel prevChan) nothrow tcl_StackChannel;
	extern(C) int function(Tcl_Interp* interp, Tcl_Channel chan) nothrow tcl_UnstackChannel;
	extern(C) Tcl_Channel function(Tcl_Channel chan) nothrow tcl_GetStackedChannel;
	extern(C) void function(Tcl_MainLoopProc proc) nothrow tcl_SetMainLoop;
	void* reserved285;
	extern(C) void function(Tcl_Obj* objPtr, Tcl_Obj* appendObjPtr) nothrow tcl_AppendObjToObj;
	extern(C) Tcl_Encoding function(const Tcl_EncodingType* typePtr) nothrow tcl_CreateEncoding;
	extern(C) void function(Tcl_ExitProc proc, ClientData clientData) nothrow tcl_CreateThreadExitHandler;
	extern(C) void function(Tcl_ExitProc proc, ClientData clientData) nothrow tcl_DeleteThreadExitHandler;
	extern(C) void function(Tcl_SavedResult* statePtr) nothrow tcl_DiscardResult;
	extern(C) int function(Tcl_Interp* interp, const char* script, int numBytes, int flags) nothrow tcl_EvalEx;
	extern(C) int function(Tcl_Interp* interp, int objc, const Tcl_Obj[]* objv, int flags) nothrow tcl_EvalObjv;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, int flags) nothrow tcl_EvalObjEx;
	extern(C) void function(int status) nothrow tcl_ExitThread;
	extern(C) int function(Tcl_Interp* interp, Tcl_Encoding encoding, const char* src, int srcLen, int flags, Tcl_EncodingState* statePtr, char* dst, int dstLen, int* srcReadPtr, int* dstWrotePtr, int* dstCharsPtr) nothrow tcl_ExternalToUtf;
	extern(C) char* function(Tcl_Encoding encoding, const char* src, int srcLen, Tcl_DString* dsPtr) nothrow tcl_ExternalToUtfDString;
	extern(C) void function() nothrow tcl_FinalizeThread;
	extern(C) void function(ClientData clientData) nothrow tcl_FinalizeNotifier;
	extern(C) void function(Tcl_Encoding encoding) nothrow tcl_FreeEncoding;
	extern(C) Tcl_ThreadId function() nothrow tcl_GetCurrentThread;
	extern(C) Tcl_Encoding function(Tcl_Interp* interp, const char* name) nothrow tcl_GetEncoding;
	extern(C) char* function(Tcl_Encoding encoding) nothrow tcl_GetEncodingName;
	extern(C) void function(Tcl_Interp* interp) nothrow tcl_GetEncodingNames;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, const void* tablePtr, int offset, const char* msg, int flags, int* indexPtr) nothrow tcl_GetIndexFromObjStruct;
	extern(C) void* function(Tcl_ThreadDataKey* keyPtr, int size) nothrow tcl_GetThreadData;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp, const char* part1, const char* part2, int flags) nothrow tcl_GetVar2Ex;
	extern(C) ClientData function() nothrow tcl_InitNotifier;
	extern(C) void function(Tcl_Mutex* mutexPtr) nothrow tcl_MutexLock;
	extern(C) void function(Tcl_Mutex* mutexPtr) nothrow tcl_MutexUnlock;
	extern(C) void function(Tcl_Condition* condPtr) nothrow tcl_ConditionNotify;
	extern(C) void function(Tcl_Condition* condPtr, Tcl_Mutex* mutexPtr, Tcl_Time* timePtr) nothrow tcl_ConditionWait;
	extern(C) int function(const char* src, int length) nothrow tcl_NumUtfChars;
	extern(C) int function(Tcl_Channel channel, Tcl_Obj* objPtr, int charsToRead, int appendFlag) nothrow tcl_ReadChars;
	extern(C) void function(Tcl_Interp* interp, Tcl_SavedResult* statePtr) nothrow tcl_RestoreResult;
	extern(C) void function(Tcl_Interp* interp, Tcl_SavedResult* statePtr) nothrow tcl_SaveResult;
	extern(C) int function(Tcl_Interp* interp, const char* name) nothrow tcl_SetSystemEncoding;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp, const char* part1, const char* part2, Tcl_Obj* newValuePtr, int flags) nothrow tcl_SetVar2Ex;
	extern(C) void function(Tcl_ThreadId threadId) nothrow tcl_ThreadAlert;
	extern(C) void function(Tcl_ThreadId threadId, Tcl_Event* evPtr, Tcl_QueuePosition position) nothrow tcl_ThreadQueueEvent;
	extern(C) Tcl_UniChar function(const char* src, int index) nothrow tcl_UniCharAtIndex;
	extern(C) Tcl_UniChar function(int ch) nothrow tcl_UniCharToLower;
	extern(C) Tcl_UniChar function(int ch) nothrow tcl_UniCharToTitle;
	extern(C) Tcl_UniChar function(int ch) nothrow tcl_UniCharToUpper;
	extern(C) int function(int ch, char* buf) nothrow tcl_UniCharToUtf;
	extern(C) char* function(const char* src, int index) nothrow tcl_UtfAtIndex;
	extern(C) int function(const char* src, int length) nothrow tcl_UtfCharComplete;
	extern(C) int function(const char* src, int* readPtr, char* dst) nothrow tcl_UtfBackslash;
	extern(C) char* function(const char* src, int ch) nothrow tcl_UtfFindFirst;
	extern(C) char* function(const char* src, int ch) nothrow tcl_UtfFindLast;
	extern(C) char* function(const char* src) nothrow tcl_UtfNext;
	extern(C) char* function(const char* src, const char* start) nothrow tcl_UtfPrev;
	extern(C) int function(Tcl_Interp* interp, Tcl_Encoding encoding, const char* src, int srcLen, int flags, Tcl_EncodingState* statePtr, char* dst, int dstLen, int* srcReadPtr, int* dstWrotePtr, int* dstCharsPtr) nothrow tcl_UtfToExternal;
	extern(C) char* function(Tcl_Encoding encoding, const char* src, int srcLen, Tcl_DString* dsPtr) nothrow tcl_UtfToExternalDString;
	extern(C) int function(char* src) nothrow tcl_UtfToLower;
	extern(C) int function(char* src) nothrow tcl_UtfToTitle;
	extern(C) int function(const char* src, Tcl_UniChar* chPtr) nothrow tcl_UtfToUniChar;
	extern(C) int function(char* src) nothrow tcl_UtfToUpper;
	extern(C) int function(Tcl_Channel chan, const char* src, int srcLen) nothrow tcl_WriteChars;
	extern(C) int function(Tcl_Channel chan, Tcl_Obj* objPtr) nothrow tcl_WriteObj;
	extern(C) char* function(Tcl_Obj* objPtr) nothrow tcl_GetString;
	extern(C) char* function() nothrow tcl_GetDefaultEncodingDir;
	extern(C) void function(const char* path) nothrow tcl_SetDefaultEncodingDir;
	extern(C) void function(ClientData clientData) nothrow tcl_AlertNotifier;
	extern(C) void function(int mode) nothrow tcl_ServiceModeHook;
	extern(C) int function(int ch) nothrow tcl_UniCharIsAlnum;
	extern(C) int function(int ch) nothrow tcl_UniCharIsAlpha;
	extern(C) int function(int ch) nothrow tcl_UniCharIsDigit;
	extern(C) int function(int ch) nothrow tcl_UniCharIsLower;
	extern(C) int function(int ch) nothrow tcl_UniCharIsSpace;
	extern(C) int function(int ch) nothrow tcl_UniCharIsUpper;
	extern(C) int function(int ch) nothrow tcl_UniCharIsWordChar;
	extern(C) int function(const Tcl_UniChar* uniStr) nothrow tcl_UniCharLen;
	extern(C) int function(const Tcl_UniChar* ucs, const Tcl_UniChar* uct, c_ulong numChars) nothrow tcl_UniCharNcmp;
	extern(C) char* function(const Tcl_UniChar* uniStr, int uniLength, Tcl_DString* dsPtr) nothrow tcl_UniCharToUtfDString;
	extern(C) Tcl_UniChar* function(const char* src, int length, Tcl_DString* dsPtr) nothrow tcl_UtfToUniCharDString;
	extern(C) Tcl_RegExp function(Tcl_Interp* interp, Tcl_Obj* patObj, int flags) nothrow tcl_GetRegExpFromObj;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp, Tcl_Token* tokenPtr, int count) nothrow tcl_EvalTokens;
	extern(C) void function(Tcl_Parse* parsePtr) nothrow tcl_FreeParse;
	extern(C) void function(Tcl_Interp* interp, const char* script, const char* command, int length) nothrow tcl_LogCommandInfo;
	extern(C) int function(Tcl_Interp* interp, const char* start, int numBytes, Tcl_Parse* parsePtr, int append, const char** termPtr) nothrow tcl_ParseBraces;
	extern(C) int function(Tcl_Interp* interp, const char* start, int numBytes, int nested, Tcl_Parse* parsePtr) nothrow tcl_ParseCommand;
	extern(C) int function(Tcl_Interp* interp, const char* start, int numBytes, Tcl_Parse* parsePtr) nothrow tcl_ParseExpr;
	extern(C) int function(Tcl_Interp* interp, const char* start, int numBytes, Tcl_Parse* parsePtr, int append, const char** termPtr) nothrow tcl_ParseQuotedString;
	extern(C) int function(Tcl_Interp* interp, const char* start, int numBytes, Tcl_Parse* parsePtr, int append) nothrow tcl_ParseVarName;
	extern(C) char* function(Tcl_Interp* interp, Tcl_DString* cwdPtr) nothrow tcl_GetCwd;
	extern(C) int function(const char* dirName) nothrow tcl_Chdir;
	extern(C) int function(const char* path, int mode) nothrow tcl_Access;
	extern(C) int function(const char* path, Tcl_StatBuf* bufPtr) nothrow tcl_Stat;
	extern(C) int function(const char* s1, const char* s2, c_ulong n) nothrow tcl_UtfNcmp;
	extern(C) int function(const char* s1, const char* s2, c_ulong n) nothrow tcl_UtfNcasecmp;
	extern(C) int function(const char* str, const char* pattern, int nocase) nothrow tcl_StringCaseMatch;
	extern(C) int function(int ch) nothrow tcl_UniCharIsControl;
	extern(C) int function(int ch) nothrow tcl_UniCharIsGraph;
	extern(C) int function(int ch) nothrow tcl_UniCharIsPrint;
	extern(C) int function(int ch) nothrow tcl_UniCharIsPunct;
	extern(C) int function(Tcl_Interp* interp, Tcl_RegExp regexp, Tcl_Obj* textObj, int offset, int nmatches, int flags) nothrow tcl_RegExpExecObj;
	extern(C) void function(Tcl_RegExp regexp, Tcl_RegExpInfo* infoPtr) nothrow tcl_RegExpGetInfo;
	extern(C) Tcl_Obj* function(const Tcl_UniChar* unicode, int numChars) nothrow tcl_NewUnicodeObj;
	extern(C) void function(Tcl_Obj* objPtr, const Tcl_UniChar* unicode, int numChars) nothrow tcl_SetUnicodeObj;
	extern(C) int function(Tcl_Obj* objPtr) nothrow tcl_GetCharLength;
	extern(C) Tcl_UniChar function(Tcl_Obj* objPtr, int index) nothrow tcl_GetUniChar;
	extern(C) Tcl_UniChar* function(Tcl_Obj* objPtr) nothrow tcl_GetUnicode;
	extern(C) Tcl_Obj* function(Tcl_Obj* objPtr, int first, int last) nothrow tcl_GetRange;
	extern(C) void function(Tcl_Obj* objPtr, const Tcl_UniChar* unicode, int length) nothrow tcl_AppendUnicodeToObj;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* textObj, Tcl_Obj* patternObj) nothrow tcl_RegExpMatchObj;
	extern(C) void function(Tcl_NotifierProcs notifierProcPtr) nothrow tcl_SetNotifier;
	extern(C) Tcl_Mutex* function() nothrow tcl_GetAllocMutex;
	extern(C) int function(Tcl_Interp* interp) nothrow tcl_GetChannelNames;
	extern(C) int function(Tcl_Interp* interp, const char* pattern) nothrow tcl_GetChannelNamesEx;
	extern(C) int function(ClientData clientData, Tcl_Interp* interp, int objc, const Tcl_Obj[]* objv) nothrow tcl_ProcObjCmd;
	extern(C) void function(Tcl_Condition* condPtr) nothrow tcl_ConditionFinalize;
	extern(C) void function(Tcl_Mutex* mutex) nothrow tcl_MutexFinalize;
	extern(C) int function(Tcl_ThreadId* idPtr, Tcl_ThreadCreateProc proc, ClientData clientData, int stackSize, int flags) nothrow tcl_CreateThread;
	extern(C) int function(Tcl_Channel chan, char* dst, int bytesToRead) nothrow tcl_ReadRaw;
	extern(C) int function(Tcl_Channel chan, const char* src, int srcLen) nothrow tcl_WriteRaw;
	extern(C) Tcl_Channel function(Tcl_Channel chan) nothrow tcl_GetTopChannel;
	extern(C) int function(Tcl_Channel chan) nothrow tcl_ChannelBuffered;
	extern(C) char* function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelName;
	extern(C) Tcl_ChannelTypeVersion function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelVersion;
	extern(C) Tcl_DriverBlockModeProc function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelBlockModeProc;
	extern(C) Tcl_DriverCloseProc function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelCloseProc;
	extern(C) Tcl_DriverClose2Proc function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelClose2Proc;
	extern(C) Tcl_DriverInputProc function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelInputProc;
	extern(C) Tcl_DriverOutputProc function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelOutputProc;
	extern(C) Tcl_DriverSeekProc function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelSeekProc;
	extern(C) Tcl_DriverSetOptionProc function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelSetOptionProc;
	extern(C) Tcl_DriverGetOptionProc function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelGetOptionProc;
	extern(C) Tcl_DriverWatchProc function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelWatchProc;
	extern(C) Tcl_DriverGetHandleProc function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelGetHandleProc;
	extern(C) Tcl_DriverFlushProc function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelFlushProc;
	extern(C) Tcl_DriverHandlerProc function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelHandlerProc;
	extern(C) int function(Tcl_ThreadId threadId, int* result) nothrow tcl_JoinThread;
	extern(C) int function(Tcl_Channel channel) nothrow tcl_IsChannelShared;
	extern(C) int function(Tcl_Interp* interp, Tcl_Channel channel) nothrow tcl_IsChannelRegistered;
	extern(C) void function(Tcl_Channel channel) nothrow tcl_CutChannel;
	extern(C) void function(Tcl_Channel channel) nothrow tcl_SpliceChannel;
	extern(C) void function(Tcl_Channel channel) nothrow tcl_ClearChannelHandlers;
	extern(C) int function(const char* channelName) nothrow tcl_IsChannelExisting;
	extern(C) int function(const Tcl_UniChar* ucs, const Tcl_UniChar* uct, c_ulong numChars) nothrow tcl_UniCharNcasecmp;
	extern(C) int function(const Tcl_UniChar* uniStr, const Tcl_UniChar* uniPattern, int nocase) nothrow tcl_UniCharCaseMatch;
	extern(C) Tcl_HashEntry* function(Tcl_HashTable* tablePtr, const char* key) nothrow tcl_FindHashEntry;
	extern(C) Tcl_HashEntry* function(Tcl_HashTable* tablePtr, const char* key, int* newPtr) nothrow tcl_CreateHashEntry;
	extern(C) void function(Tcl_HashTable* tablePtr, int keyType, Tcl_HashKeyType* typePtr) nothrow tcl_InitCustomHashTable;
	extern(C) void function(Tcl_HashTable* tablePtr) nothrow tcl_InitObjHashTable;
	extern(C) ClientData function(Tcl_Interp* interp, const char* varName, int flags, Tcl_CommandTraceProc procPtr, ClientData prevClientData) nothrow tcl_CommandTraceInfo;
	extern(C) int function(Tcl_Interp* interp, const char* varName, int flags, Tcl_CommandTraceProc proc, ClientData clientData) nothrow tcl_TraceCommand;
	extern(C) void function(Tcl_Interp* interp, const char* varName, int flags, Tcl_CommandTraceProc proc, ClientData clientData) nothrow tcl_UntraceCommand;
	extern(C) char* function(uint size) nothrow tcl_AttemptAlloc;
	extern(C) char* function(uint size, const char* file, int line) nothrow tcl_AttemptDbCkalloc;
	extern(C) char* function(char* ptr, uint size) nothrow tcl_AttemptRealloc;
	extern(C) char* function(char* ptr, uint size, const char* file, int line) nothrow tcl_AttemptDbCkrealloc;
	extern(C) int function(Tcl_Obj* objPtr, int length) nothrow tcl_AttemptSetObjLength;
	extern(C) Tcl_ThreadId function(Tcl_Channel channel) nothrow tcl_GetChannelThread;
	extern(C) Tcl_UniChar* function(Tcl_Obj* objPtr, int* lengthPtr) nothrow tcl_GetUnicodeFromObj;
	extern(C) int function(Tcl_Interp* interp, const char* name, int* numArgsPtr, Tcl_ValueType** argTypesPtr, Tcl_MathProc* procPtr, ClientData* clientDataPtr) nothrow tcl_GetMathFuncInfo;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp, const char* pattern) nothrow tcl_ListMathFuncs;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp, Tcl_Obj* objPtr, int flags) nothrow tcl_SubstObj;
	extern(C) int function(Tcl_Interp* interp, Tcl_Channel channel) nothrow tcl_DetachChannel;
	extern(C) int function(Tcl_Channel channel) nothrow tcl_IsStandardChannel;
	extern(C) int function(Tcl_Obj* srcPathPtr, Tcl_Obj* destPathPtr) nothrow tcl_FSCopyFile;
	extern(C) int function(Tcl_Obj* srcPathPtr, Tcl_Obj* destPathPtr, Tcl_Obj** errorPtr) nothrow tcl_FSCopyDirectory;
	extern(C) int function(Tcl_Obj* pathPtr) nothrow tcl_FSCreateDirectory;
	extern(C) int function(Tcl_Obj* pathPtr) nothrow tcl_FSDeleteFile;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* pathPtr, const char* sym1, const char* sym2, Tcl_PackageInitProc* proc1Ptr, Tcl_PackageInitProc* proc2Ptr, Tcl_LoadHandle* handlePtr, Tcl_FSUnloadFileProc* unloadProcPtr) nothrow tcl_FSLoadFile;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* result, Tcl_Obj* pathPtr, const char* pattern, Tcl_GlobTypeData* types) nothrow tcl_FSMatchInDirectory;
	extern(C) Tcl_Obj* function(Tcl_Obj* pathPtr, Tcl_Obj* toPtr, int linkAction) nothrow tcl_FSLink;
	extern(C) int function(Tcl_Obj* pathPtr, int recursive, Tcl_Obj** errorPtr) nothrow tcl_FSRemoveDirectory;
	extern(C) int function(Tcl_Obj* srcPathPtr, Tcl_Obj* destPathPtr) nothrow tcl_FSRenameFile;
	extern(C) int function(Tcl_Obj* pathPtr, Tcl_StatBuf* buf) nothrow tcl_FSLstat;
	extern(C) int function(Tcl_Obj* pathPtr, utimbuf* tval) nothrow tcl_FSUtime;
	extern(C) int function(Tcl_Interp* interp, int index, Tcl_Obj* pathPtr, Tcl_Obj** objPtrRef) nothrow tcl_FSFileAttrsGet;
	extern(C) int function(Tcl_Interp* interp, int index, Tcl_Obj* pathPtr, Tcl_Obj* objPtr) nothrow tcl_FSFileAttrsSet;
	extern(C) char** function(Tcl_Obj* pathPtr, Tcl_Obj** objPtrRef) nothrow tcl_FSFileAttrStrings;
	extern(C) int function(Tcl_Obj* pathPtr, Tcl_StatBuf* buf) nothrow tcl_FSStat;
	extern(C) int function(Tcl_Obj* pathPtr, int mode) nothrow tcl_FSAccess;
	extern(C) Tcl_Channel function(Tcl_Interp* interp, Tcl_Obj* pathPtr, const char* modeString, int permissions) nothrow tcl_FSOpenFileChannel;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp) nothrow tcl_FSGetCwd;
	extern(C) int function(Tcl_Obj* pathPtr) nothrow tcl_FSChdir;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* pathPtr) nothrow tcl_FSConvertToPathType;
	extern(C) Tcl_Obj* function(Tcl_Obj* listObj, int elements) nothrow tcl_FSJoinPath;
	extern(C) Tcl_Obj* function(Tcl_Obj* pathPtr, int* lenPtr) nothrow tcl_FSSplitPath;
	extern(C) int function(Tcl_Obj* firstPtr, Tcl_Obj* secondPtr) nothrow tcl_FSEqualPaths;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp, Tcl_Obj* pathPtr) nothrow tcl_FSGetNormalizedPath;
	extern(C) Tcl_Obj* function(Tcl_Obj* pathPtr, int objc, const Tcl_Obj[]* objv) nothrow tcl_FSJoinToPath;
	extern(C) ClientData function(Tcl_Obj* pathPtr, Tcl_Filesystem* fsPtr) nothrow tcl_FSGetInternalRep;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp, Tcl_Obj* pathPtr) nothrow tcl_FSGetTranslatedPath;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* fileName) nothrow tcl_FSEvalFile;
	extern(C) Tcl_Obj* function(Tcl_Filesystem* fromFilesystem, ClientData clientData) nothrow tcl_FSNewNativePath;
	extern(C) char* function(Tcl_Obj* pathPtr) nothrow tcl_FSGetNativePath;
	extern(C) Tcl_Obj* function(Tcl_Obj* pathPtr) nothrow tcl_FSFileSystemInfo;
	extern(C) Tcl_Obj* function(Tcl_Obj* pathPtr) nothrow tcl_FSPathSeparator;
	extern(C) Tcl_Obj* function() nothrow tcl_FSListVolumes;
	extern(C) int function(ClientData clientData, Tcl_Filesystem* fsPtr) nothrow tcl_FSRegister;
	extern(C) int function(Tcl_Filesystem* fsPtr) nothrow tcl_FSUnregister;
	extern(C) ClientData function(Tcl_Filesystem* fsPtr) nothrow tcl_FSData;
	extern(C) char* function(Tcl_Interp* interp, Tcl_Obj* pathPtr) nothrow tcl_FSGetTranslatedStringPath;
	extern(C) Tcl_Filesystem* function(Tcl_Obj* pathPtr) nothrow tcl_FSGetFileSystemForPath;
	extern(C) Tcl_PathType function(Tcl_Obj* pathPtr) nothrow tcl_FSGetPathType;
	extern(C) int function(Tcl_Channel chan) nothrow tcl_OutputBuffered;
	extern(C) void function(Tcl_Filesystem* fsPtr) nothrow tcl_FSMountsChanged;
	extern(C) int function(Tcl_Interp* interp, Tcl_Token* tokenPtr, int count) nothrow tcl_EvalTokensStandard;
	extern(C) void function(Tcl_Time* timeBuf) nothrow tcl_GetTime;
	extern(C) Tcl_Trace function(Tcl_Interp* interp, int level, int flags, Tcl_CmdObjTraceProc objProc, ClientData clientData, Tcl_CmdObjTraceDeleteProc delProc) nothrow tcl_CreateObjTrace;
	extern(C) int function(Tcl_Command token, Tcl_CmdInfo* infoPtr) nothrow tcl_GetCommandInfoFromToken;
	extern(C) int function(Tcl_Command token, const Tcl_CmdInfo* infoPtr) nothrow tcl_SetCommandInfoFromToken;
	extern(C) Tcl_Obj* function(Tcl_WideInt wideValue, const char* file, int line) nothrow tcl_DbNewWideIntObj;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, Tcl_WideInt* widePtr) nothrow tcl_GetWideIntFromObj;
	extern(C) Tcl_Obj* function(Tcl_WideInt wideValue) nothrow tcl_NewWideIntObj;
	extern(C) void function(Tcl_Obj* objPtr, Tcl_WideInt wideValue) nothrow tcl_SetWideIntObj;
	extern(C) Tcl_StatBuf* function() nothrow tcl_AllocStatBuf;
	extern(C) Tcl_WideInt function(Tcl_Channel chan, Tcl_WideInt offset, int mode) nothrow tcl_Seek;
	extern(C) Tcl_WideInt function(Tcl_Channel chan) nothrow tcl_Tell;
	extern(C) Tcl_DriverWideSeekProc function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelWideSeekProc;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* dictPtr, Tcl_Obj* keyPtr, Tcl_Obj* valuePtr) nothrow tcl_DictObjPut;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* dictPtr, Tcl_Obj* keyPtr, Tcl_Obj** valuePtrPtr) nothrow tcl_DictObjGet;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* dictPtr, Tcl_Obj* keyPtr) nothrow tcl_DictObjRemove;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* dictPtr, int* sizePtr) nothrow tcl_DictObjSize;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* dictPtr, Tcl_DictSearch* searchPtr, Tcl_Obj** keyPtrPtr, Tcl_Obj** valuePtrPtr, int* donePtr) nothrow tcl_DictObjFirst;
	extern(C) void function(Tcl_DictSearch* searchPtr, Tcl_Obj** keyPtrPtr, Tcl_Obj** valuePtrPtr, int* donePtr) nothrow tcl_DictObjNext;
	extern(C) void function(Tcl_DictSearch* searchPtr) nothrow tcl_DictObjDone;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* dictPtr, int keyc, const Tcl_Obj** keyv, Tcl_Obj* valuePtr) nothrow tcl_DictObjPutKeyList;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* dictPtr, int keyc, Tcl_Obj** keyv) nothrow tcl_DictObjRemoveKeyList;
	extern(C) Tcl_Obj* function() nothrow tcl_NewDictObj;
	extern(C) Tcl_Obj* function(const char* file, int line) nothrow tcl_DbNewDictObj;
	extern(C) void function(Tcl_Interp* interp, const char* pkgName, Tcl_Config* configuration, const char* valEncoding) nothrow tcl_RegisterConfig;
	extern(C) Tcl_Namespace* function(Tcl_Interp* interp, const char* name, ClientData clientData, Tcl_NamespaceDeleteProc deleteProc) nothrow tcl_CreateNamespace;
	extern(C) void function(Tcl_Namespace* nsPtr) nothrow tcl_DeleteNamespace;
	extern(C) int function(Tcl_Interp* interp, Tcl_Namespace* nsPtr, Tcl_Obj* objPtr) nothrow tcl_AppendExportList;
	extern(C) int function(Tcl_Interp* interp, Tcl_Namespace* nsPtr, const char* pattern, int resetListFirst) nothrow tcl_Export;
	extern(C) int function(Tcl_Interp* interp, Tcl_Namespace* nsPtr, const char* pattern, int allowOverwrite) nothrow tcl_Import;
	extern(C) int function(Tcl_Interp* interp, Tcl_Namespace* nsPtr, const char* pattern) nothrow tcl_ForgetImport;
	extern(C) Tcl_Namespace* function(Tcl_Interp* interp) nothrow tcl_GetCurrentNamespace;
	extern(C) Tcl_Namespace* function(Tcl_Interp* interp) nothrow tcl_GetGlobalNamespace;
	extern(C) Tcl_Namespace* function(Tcl_Interp* interp, const char* name, Tcl_Namespace* contextNsPtr, int flags) nothrow tcl_FindNamespace;
	extern(C) Tcl_Command function(Tcl_Interp* interp, const char* name, Tcl_Namespace* contextNsPtr, int flags) nothrow tcl_FindCommand;
	extern(C) Tcl_Command function(Tcl_Interp* interp, Tcl_Obj* objPtr) nothrow tcl_GetCommandFromObj;
	extern(C) void function(Tcl_Interp* interp, Tcl_Command command, Tcl_Obj* objPtr) nothrow tcl_GetCommandFullName;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* fileName, const char* encodingName) nothrow tcl_FSEvalFileEx;
	extern(C) Tcl_ExitProc function(Tcl_ExitProc proc) nothrow tcl_SetExitProc;
	extern(C) void function(Tcl_Interp* interp, int type, Tcl_LimitHandlerProc handlerProc, ClientData clientData, Tcl_LimitHandlerDeleteProc deleteProc) nothrow tcl_LimitAddHandler;
	extern(C) void function(Tcl_Interp* interp, int type, Tcl_LimitHandlerProc handlerProc, ClientData clientData) nothrow tcl_LimitRemoveHandler;
	extern(C) int function(Tcl_Interp* interp) nothrow tcl_LimitReady;
	extern(C) int function(Tcl_Interp* interp) nothrow tcl_LimitCheck;
	extern(C) int function(Tcl_Interp* interp) nothrow tcl_LimitExceeded;
	extern(C) void function(Tcl_Interp* interp, int commandLimit) nothrow tcl_LimitSetCommands;
	extern(C) void function(Tcl_Interp* interp, Tcl_Time* timeLimitPtr) nothrow tcl_LimitSetTime;
	extern(C) void function(Tcl_Interp* interp, int type, int granularity) nothrow tcl_LimitSetGranularity;
	extern(C) int function(Tcl_Interp* interp, int type) nothrow tcl_LimitTypeEnabled;
	extern(C) int function(Tcl_Interp* interp, int type) nothrow tcl_LimitTypeExceeded;
	extern(C) void function(Tcl_Interp* interp, int type) nothrow tcl_LimitTypeSet;
	extern(C) void function(Tcl_Interp* interp, int type) nothrow tcl_LimitTypeReset;
	extern(C) int function(Tcl_Interp* interp) nothrow tcl_LimitGetCommands;
	extern(C) void function(Tcl_Interp* interp, Tcl_Time* timeLimitPtr) nothrow tcl_LimitGetTime;
	extern(C) int function(Tcl_Interp* interp, int type) nothrow tcl_LimitGetGranularity;
	extern(C) Tcl_InterpState function(Tcl_Interp* interp, int status) nothrow tcl_SaveInterpState;
	extern(C) int function(Tcl_Interp* interp, Tcl_InterpState state) nothrow tcl_RestoreInterpState;
	extern(C) void function(Tcl_InterpState state) nothrow tcl_DiscardInterpState;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* options) nothrow tcl_SetReturnOptions;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp, int result) nothrow tcl_GetReturnOptions;
	extern(C) int function(Tcl_Command token) nothrow tcl_IsEnsemble;
	extern(C) Tcl_Command function(Tcl_Interp* interp, const char* name, Tcl_Namespace* namespacePtr, int flags) nothrow tcl_CreateEnsemble;
	extern(C) Tcl_Command function(Tcl_Interp* interp, Tcl_Obj* cmdNameObj, int flags) nothrow tcl_FindEnsemble;
	extern(C) int function(Tcl_Interp* interp, Tcl_Command token, Tcl_Obj* subcmdList) nothrow tcl_SetEnsembleSubcommandList;
	extern(C) int function(Tcl_Interp* interp, Tcl_Command token, Tcl_Obj* mapDict) nothrow tcl_SetEnsembleMappingDict;
	extern(C) int function(Tcl_Interp* interp, Tcl_Command token, Tcl_Obj* unknownList) nothrow tcl_SetEnsembleUnknownHandler;
	extern(C) int function(Tcl_Interp* interp, Tcl_Command token, int flags) nothrow tcl_SetEnsembleFlags;
	extern(C) int function(Tcl_Interp* interp, Tcl_Command token, Tcl_Obj** subcmdListPtr) nothrow tcl_GetEnsembleSubcommandList;
	extern(C) int function(Tcl_Interp* interp, Tcl_Command token, Tcl_Obj** mapDictPtr) nothrow tcl_GetEnsembleMappingDict;
	extern(C) int function(Tcl_Interp* interp, Tcl_Command token, Tcl_Obj** unknownListPtr) nothrow tcl_GetEnsembleUnknownHandler;
	extern(C) int function(Tcl_Interp* interp, Tcl_Command token, int* flagsPtr) nothrow tcl_GetEnsembleFlags;
	extern(C) int function(Tcl_Interp* interp, Tcl_Command token, Tcl_Namespace** namespacePtrPtr) nothrow tcl_GetEnsembleNamespace;
	extern(C) void function(Tcl_GetTimeProc getProc, Tcl_ScaleTimeProc scaleProc, ClientData clientData) nothrow tcl_SetTimeProc;
	extern(C) void function(Tcl_GetTimeProc* getProc, Tcl_ScaleTimeProc* scaleProc, ClientData* clientData) nothrow tcl_QueryTimeProc;
	extern(C) Tcl_DriverThreadActionProc  function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelThreadActionProc;
	extern(C) Tcl_Obj* function(mp_int* value) nothrow tcl_NewBignumObj;
	extern(C) Tcl_Obj* function(mp_int* value, const char* file, int line) nothrow tcl_DbNewBignumObj;
	extern(C) void function(Tcl_Obj* obj, mp_int* value) nothrow tcl_SetBignumObj;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* obj, mp_int* value) nothrow tcl_GetBignumFromObj;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* obj, mp_int* value) nothrow tcl_TakeBignumFromObj;
	extern(C) int function(Tcl_Channel chan, Tcl_WideInt length) nothrow tcl_TruncateChannel;
	extern(C) Tcl_DriverTruncateProc  function(const Tcl_ChannelType* chanTypePtr) nothrow tcl_ChannelTruncateProc;
	extern(C) void function(Tcl_Interp* interp, Tcl_Obj* msg) nothrow tcl_SetChannelErrorInterp;
	extern(C) void function(Tcl_Interp* interp, Tcl_Obj** msg) nothrow tcl_GetChannelErrorInterp;
	extern(C) void function(Tcl_Channel chan, Tcl_Obj* msg) nothrow tcl_SetChannelError;
	extern(C) void function(Tcl_Channel chan, Tcl_Obj** msg) nothrow tcl_GetChannelError;
	extern(C) int function(Tcl_Interp* interp, double initval, mp_int* toInit) nothrow tcl_InitBignumFromDouble;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp, Tcl_Namespace* nsPtr) nothrow tcl_GetNamespaceUnknownHandler;
	extern(C) int function(Tcl_Interp* interp, Tcl_Namespace* nsPtr, Tcl_Obj* handlerPtr) nothrow tcl_SetNamespaceUnknownHandler;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, Tcl_Encoding* encodingPtr) nothrow tcl_GetEncodingFromObj;
	extern(C) Tcl_Obj* function() nothrow tcl_GetEncodingSearchPath;
	extern(C) int function(Tcl_Obj* searchPath) nothrow tcl_SetEncodingSearchPath;
	extern(C) char* function(Tcl_DString* bufPtr) nothrow tcl_GetEncodingNameFromEnvironment;
	extern(C) int function(Tcl_Interp* interp, const char* name, int objc, const Tcl_Obj[]* objv, ClientData* clientDataPtr) nothrow tcl_PkgRequireProc;
	extern(C) void function(Tcl_Interp* interp, Tcl_Obj* objPtr) nothrow tcl_AppendObjToErrorInfo;
	extern(C) void function(Tcl_Obj* objPtr, const char* bytes, int length, int limit, const char* ellipsis) nothrow tcl_AppendLimitedToObj;
	extern(C) Tcl_Obj* function(Tcl_Interp* interp, const char* format, int objc, const Tcl_Obj[]* objv) nothrow tcl_Format;
	extern(C) int function(Tcl_Interp* interp, Tcl_Obj* objPtr, const char* format, int objc, const Tcl_Obj[]* objv) nothrow tcl_AppendFormatToObj;
	extern(C) Tcl_Obj* function(const char* format, ...) nothrow tcl_ObjPrintf;
	extern(C) void function(Tcl_Obj* objPtr, const char* format, ...) nothrow tcl_AppendPrintfToObj;
}

extern (C) shared TclStubs* tclStubsPtr;
